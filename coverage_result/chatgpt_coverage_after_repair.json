[
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        // Create a new JSqlParserAllTableManager instance\n        JSqlParserAllTableManager manager = new JSqlParserAllTableManager(\"SELECT * FROM example_table\");\n        // Perform the parse method\n        Map<String, SelectSqlInfo> result = null;\n        try {\n            result = manager.parse();\n        } catch (JSQLParserException e) {\n            e.printStackTrace();\n        }\n        // Assert that the result is not null\n        assertNotNull(result);\n    }\n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        // Create an instance of JSqlParserAllTableManager\n        String sql = \"SELECT * FROM employee\";\n        JSqlParserAllTableManager parser = new JSqlParserAllTableManager(sql);\n    \n        // Call the parse method\n        Map<String, SelectSqlInfo> result = null;\n        try {\n            result = parser.parse();\n        } catch (JSQLParserException e) {\n            e.printStackTrace();\n        }\n    \n        // Perform assertions\n        assertNotNull(result);\n        assertEquals(1, result.size());\n        assertTrue(result.containsKey(\"employee\"));\n    }\n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 17.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        // create test SQL query\n        String selectSql = \"SELECT id, name FROM employee\";\n        \n        // create JSqlParserAllTableManager object\n        JSqlParserAllTableManager jSqlParserAllTableManager = new JSqlParserAllTableManager(selectSql);\n        \n        // call the parse method\n        Map<String, SelectSqlInfo> result = null;\n        try {\n            result = jSqlParserAllTableManager.parse();\n        } catch (JSQLParserException e) {\n            e.printStackTrace();\n        }\n        \n        // assert the result is not null\n        assertNotNull(result);\n        // additional assertions based on the expected behavior of the parse method\n    }\n}",
        "package_metric": 30.6,
        "class_metric": 48.7,
        "method_metric": 54.72,
        "pitest": 19.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        String selectSql = \"SELECT id, user_name FROM user_table\";\n        JSqlParserAllTableManager parser = new JSqlParserAllTableManager(selectSql);\n        assertDoesNotThrow(() -> {\n            parser.parse();\n        });\n    }\n    \n}",
        "package_metric": 30.6,
        "class_metric": 48.7,
        "method_metric": 54.72,
        "pitest": 19.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        String sql = \"SELECT * FROM employees WHERE department = 'sales'\";\n        JSqlParserAllTableManager parser = new JSqlParserAllTableManager(sql);\n        assertDoesNotThrow(() -> {\n            parser.parse();\n        });\n    }\n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        String selectSql = \"SELECT * FROM students\";\n        JSqlParserAllTableManager parser = new JSqlParserAllTableManager(selectSql);\n        try {\n            parser.parse();\n            Map<String, SelectSqlInfo> result = parser.parse();\n            assertNotNull(result);\n        } catch (JSQLParserException e) {\n            fail(\"Exception thrown while parsing: \" + e.getMessage());\n        }\n    }\n    \n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        // Given\n        String sql = \"SELECT * FROM users\";\n        JSqlParserAllTableManager manager = new JSqlParserAllTableManager(sql);\n        \n        // When\n        Map<String, SelectSqlInfo> result = null;\n        try {\n            result = manager.parse();\n        } catch (JSQLParserException e) {\n            e.printStackTrace();\n        }\n        \n        // Then\n        assertNotNull(result);\n    }\n    \n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        JSqlParserAllTableManager parser = new JSqlParserAllTableManager(\"SELECT * FROM employees;\");\n        assertDoesNotThrow(() -> {\n            parser.parse();\n        });\n    }\n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        // Create JSqlParserAllTableManager instance\n        JSqlParserAllTableManager manager = new JSqlParserAllTableManager(\"SELECT * FROM table1\");\n        Map<String, SelectSqlInfo> result = null;\n        try {\n            result = manager.parse();\n        } catch (JSQLParserException e) {\n            e.printStackTrace();\n        }\n        assertNotNull(result);\n    }\n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        JSqlParserAllTableManager manager = new JSqlParserAllTableManager(\"SELECT * FROM table1\");\n        try {\n            Map<String, SelectSqlInfo> result = manager.parse();\n            assertNotNull(result);\n            assertEquals(1, result.size());\n            // Add more assertions as needed\n        } catch (JSQLParserException e) {\n            fail(\"An exception was thrown: \" + e.getMessage());\n        }\n    }\n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 17.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() throws JSQLParserException {\n        // Arrange\n        String sql = \"SELECT * FROM my_table\";\n        JSqlParserAllTableManager manager = new JSqlParserAllTableManager(sql);\n        \n        // Act\n        Map<String, SelectSqlInfo> result = manager.parse();\n        \n        // Assert\n        assertNotNull(result);\n        // Add more assertions as needed\n    }\n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        JSqlParserAllTableManager manager = new JSqlParserAllTableManager(\"SELECT * FROM employees\");\n        Map<String, SelectSqlInfo> result = null;\n        try {\n            result = manager.parse();\n        } catch (JSQLParserException e) {\n            e.printStackTrace();\n            fail(\"Exception occurred during parsing\");\n        }\n        assertEquals(1, result.size());\n    }\n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 17.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        // Create JSqlParserAllTableManager instance with a sample SQL query\n        JSqlParserAllTableManager manager = new JSqlParserAllTableManager(\"SELECT * FROM my_table\");\n        \n        // Get the parsed result\n        Map<String, SelectSqlInfo> result;\n        try {\n            result = manager.parse();\n            // Do the assertions here\n            // For example, check if the result contains the expected tables\n            assertNotNull(result);\n        } catch (JSQLParserException e) {\n            fail(\"Exception thrown during parsing: \" + e.getMessage());\n        }\n    }\n    \n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        JSqlParserAllTableManager manager = new JSqlParserAllTableManager(\"SELECT * FROM table1\");\n        try {\n            Map<String, SelectSqlInfo> result = manager.parse();\n            assertNotNull(result);\n        } catch (JSQLParserException e) {\n            fail(\"Exception thrown: \" + e.getMessage());\n        }\n    }\n    \n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/sqlparse",
        "package_name": "org.jeecg.common.util.sqlparse",
        "class_name": "JSqlParserAllTableManager",
        "method_name": "parse",
        "test_code": "package org.jeecg.common.util.sqlparse;\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.io.StringReader;\n\n\nimport org.jeecg.common.util.sqlparse.vo.SelectSqlInfo;\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport net.sf.jsqlparser.statement.Statement;\n\n\nimport net.sf.jsqlparser.schema.Table;\n\n\nimport net.sf.jsqlparser.schema.Column;\n\n\nimport net.sf.jsqlparser.parser.CCJSqlParserManager;\n\n\nimport net.sf.jsqlparser.JSQLParserException;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSqlParserAllTableManagerTest {\n    @Test\n    public void parseTest() {\n        JSqlParserAllTableManager manager = new JSqlParserAllTableManager(\"SELECT * FROM employee\");\n        try {\n            Map<String, SelectSqlInfo> result = manager.parse();\n            assertNotNull(result);\n        } catch (JSQLParserException e) {\n            fail(\"Exception thrown\");\n        }\n    }\n}",
        "package_metric": 23.5,
        "class_metric": 37.39,
        "method_metric": 56.6,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/system/base/controller",
        "package_name": "org.jeecg.common.system.base.controller",
        "class_name": "JeecgController",
        "method_name": "exportXlsSheet",
        "test_code": "package org.jeecg.common.system.base.controller;\n\nimport java.io.IOException;\n\n\nimport javax.servlet.http.HttpServletResponse;\n\n\nimport javax.servlet.http.HttpServletRequest;\n\n\n\nimport javax.annotation.Resource;\n\n\nimport org.springframework.web.servlet.ModelAndView;\n\n\nimport org.springframework.web.multipart.MultipartHttpServletRequest;\n\n\nimport org.springframework.web.multipart.MultipartFile;\n\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\n\nimport org.jeecgframework.poi.excel.view.JeecgEntityExcelView;\n\n\nimport org.jeecgframework.poi.excel.entity.enmus.ExcelType;\n\n\nimport org.jeecgframework.poi.excel.entity.ImportParams;\n\n\nimport org.jeecgframework.poi.excel.entity.ExportParams;\n\n\nimport org.jeecgframework.poi.excel.def.NormalExcelConstants;\n\n\nimport org.jeecgframework.poi.excel.ExcelImportUtil;\n\n\nimport org.jeecg.config.JeecgBaseConfig;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.system.vo.LoginUser;\n\n\nimport org.jeecg.common.system.query.QueryGenerator;\n\n\nimport org.jeecg.common.api.vo.Result;\n\n\nimport org.apache.shiro.SecurityUtils;\n\n\nimport org.apache.commons.beanutils.PropertyUtils;\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport com.baomidou.mybatisplus.extension.service.IService;\n\n\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\n\n\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JeecgControllerTest {\n    @Test\n    public void exportXlsSheetTest() {\n        // Create a mock HttpServletRequest, T object, Class<T> clazz, and other necessary variables\n        // Instantiate the JeecgController\n        // Call the exportXlsSheet method with the mock data\n        // Validate the returned ModelAndView\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/system/base/controller",
        "package_name": "org.jeecg.common.system.base.controller",
        "class_name": "JeecgController",
        "method_name": "exportXlsSheet",
        "test_code": "package org.jeecg.common.system.base.controller;\n\nimport java.io.IOException;\n\n\nimport javax.servlet.http.HttpServletResponse;\n\n\nimport javax.servlet.http.HttpServletRequest;\n\n\n\nimport javax.annotation.Resource;\n\n\nimport org.springframework.web.servlet.ModelAndView;\n\n\nimport org.springframework.web.multipart.MultipartHttpServletRequest;\n\n\nimport org.springframework.web.multipart.MultipartFile;\n\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\n\nimport org.jeecgframework.poi.excel.view.JeecgEntityExcelView;\n\n\nimport org.jeecgframework.poi.excel.entity.enmus.ExcelType;\n\n\nimport org.jeecgframework.poi.excel.entity.ImportParams;\n\n\nimport org.jeecgframework.poi.excel.entity.ExportParams;\n\n\nimport org.jeecgframework.poi.excel.def.NormalExcelConstants;\n\n\nimport org.jeecgframework.poi.excel.ExcelImportUtil;\n\n\nimport org.jeecg.config.JeecgBaseConfig;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.system.vo.LoginUser;\n\n\nimport org.jeecg.common.system.query.QueryGenerator;\n\n\nimport org.jeecg.common.api.vo.Result;\n\n\nimport org.apache.shiro.SecurityUtils;\n\n\nimport org.apache.commons.beanutils.PropertyUtils;\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport com.baomidou.mybatisplus.extension.service.IService;\n\n\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\n\n\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JeecgControllerTest {\n    @Test\n    public void exportXlsSheetTest() {\n        // Create and set up mock objects such as HttpServletRequest, T object, Class<T> clazz, String title, String exportFields, and Integer pageNum\n        // Call exportXlsSheet method with the mock objects\n        // Verify the expected result\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/encryption",
        "package_name": "org.jeecg.common.util.encryption",
        "class_name": "AesEncryptUtil",
        "method_name": "desEncrypt",
        "test_code": "package org.jeecg.common.util.encryption;\n\nimport javax.crypto.spec.SecretKeySpec;\n\n\nimport javax.crypto.spec.IvParameterSpec;\n\n\n\nimport javax.crypto.Cipher;\n\n\n\nimport org.apache.shiro.codec.Base64;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AesEncryptUtilTest {\n    @Test\n    public void desEncryptTest() {\n        String data = \"abcdefg\";\n        String key = \"1234567890123456\";\n        String iv = \"1234567890123456\";\n        try {\n            String encryptedData = AesEncryptUtil.encrypt(data, key, iv);\n            String decryptedData = AesEncryptUtil.desEncrypt(encryptedData, key, iv);\n            assertEquals(data, decryptedData);\n        } catch (Exception e) {\n            fail(\"Exception thrown: \" + e.getMessage());\n        }\n    }\n}",
        "package_metric": 78.12,
        "class_metric": 79.31,
        "method_metric": 100.0,
        "pitest": 64.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/encryption",
        "package_name": "org.jeecg.common.util.encryption",
        "class_name": "AesEncryptUtil",
        "method_name": "desEncrypt",
        "test_code": "package org.jeecg.common.util.encryption;\n\nimport javax.crypto.spec.SecretKeySpec;\n\n\nimport javax.crypto.spec.IvParameterSpec;\n\n\n\nimport javax.crypto.Cipher;\n\n\n\nimport org.apache.shiro.codec.Base64;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AesEncryptUtilTest {\n    @Test\n    public void desEncryptTest() {\n        String data = \"exampleData\";\n        String key = \"exampleKey\";\n        String iv = \"exampleIv\";\n    \n        try {\n            String result = AesEncryptUtil.desEncrypt(data, key, iv);\n            assertEquals(\"expectedDecryptedString\", result);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
        "package_metric": 25.0,
        "class_metric": 20.69,
        "method_metric": 50.0,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        assertThrows(JeecgBootException.class, () -> {\n            JdbcSecurityUtil.validate(\"jdbc:postgresql://localhost/test?authenticationPluginClassName=123\");\n        });\n    }\n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 50.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        assertThrows(JeecgBootException.class, () -> {\n            JdbcSecurityUtil.validate(\"jdbc:mysql://localhost:3306/test?authenticationPluginClassName=aaa\");\n        });\n    }\n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 50.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        assertThrows(JeecgBootException.class, () -> JdbcSecurityUtil.validate(\"jdbc:postgresql://localhost:5432/test?sslhostnameverifier=true\"));\n        assertDoesNotThrow(() -> JdbcSecurityUtil.validate(\"jdbc:postgresql://localhost:5432/test?user=test&password=test\"));\n    }\n}",
        "package_metric": 8.33,
        "class_metric": 80.0,
        "method_metric": 84.62,
        "pitest": 83.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        assertDoesNotThrow(() -> JdbcSecurityUtil.validate(\"jdbcUrl\"));\n    }\n    \n}",
        "package_metric": 3.47,
        "class_metric": 33.33,
        "method_metric": 30.77,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n        public void validateTest() {\n            assertDoesNotThrow(() -> JdbcSecurityUtil.validate(\"jdbc:postgresql://localhost/test?user=fakeUser&password=fakePassword\"));\n        }\n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 33.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost:3306/test?sslhostnameverifier=xxx\";\n        assertThrows(JeecgBootException.class, () -> JdbcSecurityUtil.validate(jdbcUrl));\n    }\n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 50.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        try {\n            JdbcSecurityUtil.validate(\"jdbc:postgresql://localhost/test?authenticationPluginClassName=xyz\");\n            fail(\"Expected an JeecgBootException to be thrown\");\n        } catch (JeecgBootException e) {\n            assertEquals(\"\u8fde\u63a5\u5730\u5740\u6709\u5b89\u5168\u98ce\u9669\uff0c\u3010authenticationPluginClassName\u3011\", e.getMessage());\n        }\n    }\n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 50.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        assertThrows(JeecgBootException.class, () -> JdbcSecurityUtil.validate(\"jdbc:mysql://localhost:3306/test?sslhostnameverifier=true\"));\n    }\n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 50.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String testJdbcUrl = \"jdbc:mysql://localhost:3306/test?user=root&password=admin\";\n        assertDoesNotThrow(() -> {\n            JdbcSecurityUtil.validate(testJdbcUrl);\n        });\n    }\n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 33.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost:3306/database?user=root&password=12345\";\n        JdbcSecurityUtil.validate(jdbcUrl);\n    }\n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 33.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost/test?username=root&password=pass123\";\n        JdbcSecurityUtil.validate(jdbcUrl);\n    }\n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 33.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost/database?username=root&password=pass123\";\n        assertDoesNotThrow(() -> JdbcSecurityUtil.validate(jdbcUrl));\n    }\n    \n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 33.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/security",
        "package_name": "org.jeecg.common.util.security",
        "class_name": "JdbcSecurityUtil",
        "method_name": "validate",
        "test_code": "package org.jeecg.common.util.security;\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\n\nimport org.jeecg.common.exception.JeecgBootException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n        public void validateTest() {\n            String jdbcUrl = \"jdbc:postgresql://localhost:5432/somedb?user=admin&password=pass123&ssl=true\";\n            JdbcSecurityUtil.validate(jdbcUrl);\n        }\n}",
        "package_metric": 7.64,
        "class_metric": 73.33,
        "method_metric": 76.92,
        "pitest": 33.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util/oss",
        "package_name": "org.jeecg.common.util.oss",
        "class_name": "OssBootUtil",
        "method_name": "upload",
        "test_code": "package org.jeecg.common.util.oss;\n\nimport java.util.UUID;\n\n\nimport java.util.Date;\n\n\nimport java.net.URLDecoder;\n\n\nimport java.net.URL;\n\n\nimport java.io.InputStream;\n\n\nimport java.io.IOException;\n\n\n\nimport java.io.BufferedInputStream;\n\n\nimport org.springframework.web.multipart.MultipartFile;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.filter.StrAttackFilter;\n\n\nimport org.jeecg.common.util.filter.SsrfFileTypeFilter;\n\n\nimport org.jeecg.common.util.CommonUtils;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.jeecg.common.constant.CommonConstant;\n\n\nimport org.apache.commons.fileupload.FileItemStream;\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport com.aliyun.oss.model.PutObjectResult;\n\n\nimport com.aliyun.oss.model.OSSObject;\n\n\nimport com.aliyun.oss.model.CannedAccessControlList;\n\n\nimport com.aliyun.oss.common.auth.DefaultCredentialProvider;\n\n\nimport com.aliyun.oss.OSSClient;\n\n\n\nimport com.aliyun.oss.ClientConfiguration;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OssBootUtilTest {\n    @Test\n    public void uploadTest() {\n        // Create a mock fileItemStream object\n        // Call the upload method with the mock fileItemStream object and a file directory\n        // Verify that the upload method returns the correct file path\n        // Use assertEquals to compare the expected file path with the actual file path returned by the upload method\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/aspect",
        "package_name": "org.jeecg.common.aspect",
        "class_name": "DictAspect",
        "method_name": "parseDictText",
        "test_code": "package org.jeecg.common.aspect;\n\nimport java.util.stream.Collectors;\n\n\nimport java.util.concurrent.TimeUnit;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.springframework.util.StringUtils;\n\n\nimport org.springframework.stereotype.Component;\n\n\nimport org.springframework.data.redis.core.RedisTemplate;\n\n\nimport org.springframework.context.annotation.Lazy;\n\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.system.vo.DictModel;\n\n\nimport org.jeecg.common.constant.CommonConstant;\n\n\nimport org.jeecg.common.aspect.annotation.Dict;\n\n\nimport org.jeecg.common.api.vo.Result;\n\n\nimport org.jeecg.common.api.CommonAPI;\n\n\nimport org.aspectj.lang.annotation.Pointcut;\n\n\nimport org.aspectj.lang.annotation.Aspect;\n\n\nimport org.aspectj.lang.annotation.Around;\n\n\nimport org.aspectj.lang.ProceedingJoinPoint;\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\n\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\n\n\nimport com.alibaba.fastjson.parser.Feature;\n\n\nimport com.alibaba.fastjson.JSONObject;\n\n\n\nimport com.alibaba.fastjson.JSON;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DictAspectTest {\n    @Test\n    public void parseDictTextTest() {\n        // Create test data\n        // Execute the method being tested\n        // Verify the output\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/aspect",
        "package_name": "org.jeecg.common.aspect",
        "class_name": "DictAspect",
        "method_name": "parseDictText",
        "test_code": "package org.jeecg.common.aspect;\n\nimport java.util.stream.Collectors;\n\n\nimport java.util.concurrent.TimeUnit;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.springframework.util.StringUtils;\n\n\nimport org.springframework.stereotype.Component;\n\n\nimport org.springframework.data.redis.core.RedisTemplate;\n\n\nimport org.springframework.context.annotation.Lazy;\n\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.system.vo.DictModel;\n\n\nimport org.jeecg.common.constant.CommonConstant;\n\n\nimport org.jeecg.common.aspect.annotation.Dict;\n\n\nimport org.jeecg.common.api.vo.Result;\n\n\nimport org.jeecg.common.api.CommonAPI;\n\n\nimport org.aspectj.lang.annotation.Pointcut;\n\n\nimport org.aspectj.lang.annotation.Aspect;\n\n\nimport org.aspectj.lang.annotation.Around;\n\n\nimport org.aspectj.lang.ProceedingJoinPoint;\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\n\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\n\n\nimport com.alibaba.fastjson.parser.Feature;\n\n\nimport com.alibaba.fastjson.JSONObject;\n\n\n\nimport com.alibaba.fastjson.JSON;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DictAspectTest {\n    @Test\n    public void parseDictTextTest() {\n        // Create a test case for the parseDictText method.\n        // For example, initialize the input and expected output,\n        // call the parseDictText method, and compare the actual output with the expected output.\n        // Assert.assertEquals(expectedOutput, actualOutput);\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/aspect",
        "package_name": "org.jeecg.common.aspect",
        "class_name": "DictAspect",
        "method_name": "parseDictText",
        "test_code": "package org.jeecg.common.aspect;\n\nimport java.util.stream.Collectors;\n\n\nimport java.util.concurrent.TimeUnit;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.springframework.util.StringUtils;\n\n\nimport org.springframework.stereotype.Component;\n\n\nimport org.springframework.data.redis.core.RedisTemplate;\n\n\nimport org.springframework.context.annotation.Lazy;\n\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.system.vo.DictModel;\n\n\nimport org.jeecg.common.constant.CommonConstant;\n\n\nimport org.jeecg.common.aspect.annotation.Dict;\n\n\nimport org.jeecg.common.api.vo.Result;\n\n\nimport org.jeecg.common.api.CommonAPI;\n\n\nimport org.aspectj.lang.annotation.Pointcut;\n\n\nimport org.aspectj.lang.annotation.Aspect;\n\n\nimport org.aspectj.lang.annotation.Around;\n\n\nimport org.aspectj.lang.ProceedingJoinPoint;\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\n\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\n\n\nimport com.alibaba.fastjson.parser.Feature;\n\n\nimport com.alibaba.fastjson.JSONObject;\n\n\n\nimport com.alibaba.fastjson.JSON;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DictAspectTest {\n    @Test\n    public void parseDictTextTest() {\n        // Create a test case and mock the necessary objects\n        // Write the necessary assertions to test the parseDictText method\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    // Test case to ensure that the handleNestedObject method works as expected\n    @Test\n    public void handleNestedObjectTest() {\n        // Given\n        Object obj = new Object();\n        Class entity = Object.class;\n        boolean isEncode = true;  // Assuming true for this test\n        \n        // When\n        // Call the handleNestedObject method and assert that it does not throw an exception\n        assertDoesNotThrow(() -> {\n            SensitiveInfoUtil.handleNestedObject(obj, entity, isEncode);\n        });\n    }\n}",
        "package_metric": 2.92,
        "class_metric": 2.92,
        "method_metric": 16.67,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void handleNestedObjectTest() {\n        try {\n            SensitiveInfoUtil.handleNestedObject(new Object(), Class.class, true);\n        } catch (IllegalAccessException e) {\n            fail(\"Exception thrown while testing handleNestedObject method: \" + e.getMessage());\n        }\n    }\n}",
        "package_metric": 2.92,
        "class_metric": 2.92,
        "method_metric": 16.67,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void handleNestedObjectTest() {\n        // Given\n        Object obj = new Object(); // Replace with actual object\n        Class entity = Object.class; // Replace with actual entity class\n        boolean isEncode = true;\n        \n        // When\n        // Call the method to be tested\n        assertDoesNotThrow(() -> SensitiveInfoUtil.handleNestedObject(obj, entity, isEncode));\n        \n        // Then\n        // Verify the expected behavior\n        // Add specific assertions based on the expected behavior of the handleNestedObject method\n        // For example:\n        // assertTrue(specificCondition);\n        // assertEquals(expectedValue, actualValue);\n    }\n}",
        "package_metric": 2.92,
        "class_metric": 2.92,
        "method_metric": 16.67,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n        public void handleNestedObjectTest() {\n            Object obj = new Object();\n            Class entity = obj.getClass();\n            boolean isEncode = false;\n            assertDoesNotThrow(() -> SensitiveInfoUtil.handleNestedObject(obj, entity, isEncode));\n        }\n}",
        "package_metric": 2.92,
        "class_metric": 2.92,
        "method_metric": 16.67,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void handleNestedObjectTest() {\n        // Arrange\n        Object obj = new Object();  // replace with actual object\n        Class entity = Object.class;  // replace with actual entity class\n        boolean isEncode = false;  // replace with actual value\n        \n        // Act\n        try {\n            SensitiveInfoUtil.handleNestedObject(obj, entity, isEncode);\n        } catch (IllegalAccessException e) {\n            e.printStackTrace();\n        }\n        \n        // Assert\n        // Add assertion statements based on the expected behavior of the handleNestedObject function\n    }\n}",
        "package_metric": 2.92,
        "class_metric": 2.92,
        "method_metric": 16.67,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    \n    @Test\n    public void handleNestedObjectTest() {\n        // Create a test object and entity\n        Object obj = new Object();\n        Class entity = Object.class;\n        boolean isEncode = true;\n      \n        // Call the method\n        assertDoesNotThrow(() -> SensitiveInfoUtil.handleNestedObject(obj, entity, isEncode));\n    }\n}",
        "package_metric": 2.92,
        "class_metric": 2.92,
        "method_metric": 16.67,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void handleNestedObjectTest() {\n        Object obj = new Object(); // Replace with valid test data\n        Class entity = Object.class; // Replace with valid test data\n        boolean isEncode = true; // Replace with valid test data\n        assertDoesNotThrow(() -> {\n            SensitiveInfoUtil.handleNestedObject(obj, entity, isEncode);\n        });\n    }\n    \n}",
        "package_metric": 2.92,
        "class_metric": 2.92,
        "method_metric": 16.67,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void handleNestedObjectTest() {\n        // Create test object\n        Object obj = new Object(); \n        Class entity = Object.class;\n        boolean isEncode = false;\n        \n        try {\n            // Call the method being tested\n            SensitiveInfoUtil.handleNestedObject(obj, entity, isEncode);\n            \n            // Add assertions if necessary\n            // Example: assertEquals(expected, actual);\n        } catch (IllegalAccessException e) {\n            e.printStackTrace();\n        }\n    }\n}",
        "package_metric": 2.92,
        "class_metric": 2.92,
        "method_metric": 16.67,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void handleNestedObjectTest() {\n        // Create an object and class to test\n        Object obj = new Object();\n        Class entity = Object.class;\n        boolean isEncode = true;\n        \n        // Call the method and assert the expected output\n        // <FILL> (call the method with the appropriate parameters and assert the expected output)\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void handleNestedObjectTest() {\n        // Create object to test\n        Object testObject = new Object();\n        Class<Object> entityClass = Object.class;\n        boolean isEncode = true;\n        \n        // Call the method\n        try {\n            SensitiveInfoUtil.handleNestedObject(testObject, entityClass, isEncode);\n            // Add assertions here based on the expected behavior of the method\n        } catch (IllegalAccessException e) {\n            e.printStackTrace();\n        }\n    }\n}",
        "package_metric": 2.92,
        "class_metric": 2.92,
        "method_metric": 16.67,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/desensitization/util",
        "package_name": "org.jeecg.common.desensitization.util",
        "class_name": "SensitiveInfoUtil",
        "method_name": "handleNestedObject",
        "test_code": "package org.jeecg.common.desensitization.util;\n\nimport java.util.List;\n\n\nimport java.util.Collections;\n\n\nimport java.lang.reflect.ParameterizedType;\n\n\n\nimport java.lang.reflect.Field;\n\n\nimport org.jeecg.common.util.oConvertUtils;\n\n\nimport org.jeecg.common.util.encryption.AesEncryptUtil;\n\n\nimport org.jeecg.common.desensitization.enums.SensitiveEnum;\n\n\nimport org.jeecg.common.desensitization.annotation.SensitiveField;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void handleNestedObjectTest() {\n            // Arrange\n            Object obj = new Object();\n            Class entity = Object.class;\n            boolean isEncode = true;\n            \n            // Act\n            try {\n                SensitiveInfoUtil.handleNestedObject(obj, entity, isEncode);\n            } catch (IllegalAccessException e) {\n                e.printStackTrace();\n            }\n            \n            // Assert\n            // Add assertion here based on the expected behavior of the method\n    }\n    \n}",
        "package_metric": 2.92,
        "class_metric": 2.92,
        "method_metric": 16.67,
        "pitest": 0.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-server-cloud/jeecg-cloud-gateway/src/test/java/org/jeecg/loader/repository",
        "package_name": "org.jeecg.loader.repository",
        "class_name": "DynamicRouteService",
        "method_name": "update",
        "test_code": "package org.jeecg.loader.repository;\n\nimport reactor.core.publisher.Mono;\n\n\nimport org.springframework.stereotype.Service;\n\n\nimport org.springframework.context.ApplicationEventPublisherAware;\n\n\nimport org.springframework.context.ApplicationEventPublisher;\n\n\nimport org.springframework.cloud.gateway.route.RouteDefinition;\n\n\nimport org.springframework.cloud.gateway.event.RefreshRoutesEvent;\n\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\n\nimport org.jeecg.loader.repository.MyInMemoryRouteDefinitionRepository;\n\n\n\nimport lombok.extern.slf4j.Slf4j;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DynamicRouteServiceTest {\n    @Test\n    public void updateTest() {\n        DynamicRouteService dynamicRouteService = new DynamicRouteService();\n        RouteDefinition routeDefinition = new RouteDefinition();\n        dynamicRouteService.setRepository(new MyInMemoryRouteDefinitionRepository());\n        dynamicRouteService.setApplicationEventPublisher(event -> {});\n        assertEquals(\"success\", dynamicRouteService.update(routeDefinition));\n    }\n}",
        "package_metric": 40.91,
        "class_metric": 40.74,
        "method_metric": 55.56,
        "pitest": 17.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object object = new Object();\n        String result = MyClassLoader.getPackPath(object);\n        assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n     public void getPackPathTest() {\n         Object obj = new Object();\n         assertEquals(obj.getClass().getName(), MyClassLoader.getPackPath(obj));\n     }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        // Given\n        Object object = new Object();\n        \n        // When\n        String result = MyClassLoader.getPackPath(object);\n        \n        // Then\n        assertNotNull(result);\n        assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        // Arrange\n        Object object = new Object();\n        \n        // Act\n        String result = MyClassLoader.getPackPath(object);\n        \n        // Assert\n        assertNotNull(result);\n    \n        // Output the whole test case\n        System.out.println(\"Test case completed.\");\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 5.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n      Object testObj = new Object();\n      String expected = \"java.lang.Object\";\n      String result = MyClassLoader.getPackPath(testObj);\n      assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object object = new Object();\n        String expectedResult = \"java.lang.Object\";\n        String actualResult = MyClassLoader.getPackPath(object);\n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Class myClass = MyClassLoader.getClassByScn(\"org.jeecg.common.util.MyClassLoader\");\n        Object myObject = null;\n        try {\n            myObject = myClass.newInstance();\n        } catch (InstantiationException e) {\n            e.printStackTrace();\n        } catch (IllegalAccessException e) {\n            e.printStackTrace();\n        }\n        String packPath = MyClassLoader.getPackPath(myObject);\n        assertEquals(\"org.jeecg.common.util.MyClassLoader\", packPath);\n    }\n}",
        "package_metric": 0.46,
        "class_metric": 15.69,
        "method_metric": 75.0,
        "pitest": 15.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object object = new Object();\n        String result = MyClassLoader.getPackPath(object);\n        assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        String result = MyClassLoader.getPackPath(new Object());\n        assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n        public void getPackPathTest() {\n            Object object = new Object();\n            String expected = \"java.lang.Object\";\n            String result = MyClassLoader.getPackPath(object);\n            assertEquals(expected, result);\n        }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object obj = new Object();\n        String result = MyClassLoader.getPackPath(obj);\n        assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        // Given\n        Object object = new Object();\n        \n        // When\n        String result = MyClassLoader.getPackPath(object);\n        \n        // Then\n        assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object object = new Object();\n        String result = MyClassLoader.getPackPath(object);\n        assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object object = new Object();\n        String expected = \"java.lang.Object\";\n        String actual = MyClassLoader.getPackPath(object);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    \n    @Test\n    public void getPackPathTest() {\n        Object object = new Object();\n        String result = MyClassLoader.getPackPath(object);\n        assertNotNull(result);\n        assertEquals(\"java.lang.Object\", result);\n    }\n    \n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object object = new Object();\n        String expected = \"java.lang.Object\";\n        String actual = MyClassLoader.getPackPath(object);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        String expected = \"org.jeecg.common.util.MyClassLoader\";\n        Object object = new MyClassLoader();\n        String result = MyClassLoader.getPackPath(object);\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.23,
        "class_metric": 7.84,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object obj = new Object();\n        String expected = \"java.lang.Object\";\n        String actual = MyClassLoader.getPackPath(obj);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n      Object testObj = new Object();\n      String expected = \"java.lang.Object\";\n      String result = MyClassLoader.getPackPath(testObj);\n      assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object object = new Object();\n        String result = MyClassLoader.getPackPath(object);\n        assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object testObject = new Object();\n        String expected = \"java.lang.Object\";\n        String actual = MyClassLoader.getPackPath(testObject);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n      Object obj = new Object();\n      String expectedResult = \"java.lang.Object\";\n      String actualResult = MyClassLoader.getPackPath(obj);\n      assertEquals(expectedResult, actualResult);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n       Object object = new Object();\n       String result = MyClassLoader.getPackPath(object);\n       assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object object = new Object();\n        String result = MyClassLoader.getPackPath(object);\n        assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object testObject = new Object();\n        String expected = \"java.lang.Object\";\n        String result = MyClassLoader.getPackPath(testObject);\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n       // Given\n       Object object = new Object();\n       String expected = \"java.lang.Object\";\n       \n       // When\n       String result = MyClassLoader.getPackPath(object);\n       \n       // Then\n       assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object testObject = new Object();\n        String expected = \"java.lang.Object\";\n        String result = MyClassLoader.getPackPath(testObject);\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "jeecg-boot",
        "file_path": "/home/joseph/java_project/jeecg-boot/jeecg-boot-base-core/src/test/java/org/jeecg/common/util",
        "package_name": "org.jeecg.common.util",
        "class_name": "MyClassLoader",
        "method_name": "getPackPath",
        "test_code": "package org.jeecg.common.util;\n\n\nimport org.jeecg.common.constant.SymbolConstant;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MyClassLoaderTest {\n    @Test\n    public void getPackPathTest() {\n        Object testObject = new Object();\n        String result = MyClassLoader.getPackPath(testObject);\n        assertEquals(\"java.lang.Object\", result);\n    }\n}",
        "package_metric": 0.17,
        "class_metric": 5.88,
        "method_metric": 75.0,
        "pitest": 10.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/detector",
        "package_name": "com.google.zxing.aztec.detector",
        "class_name": "Detector",
        "method_name": "getMatrixCenter",
        "test_code": "package com.google.zxing.aztec.detector;\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonException;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonDecoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.detector.WhiteRectangleDetector;\n\n\nimport com.google.zxing.common.detector.MathUtils;\n\n\nimport com.google.zxing.common.GridSampler;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\nimport com.google.zxing.aztec.AztecDetectorResult;\n\n\nimport com.google.zxing.ResultPoint;\n\n\n\nimport com.google.zxing.NotFoundException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DetectorTest {\n    @Test\n    public void getMatrixCenterTest() {\n        // Create an instance of the class where the getMatrixCenter method is located\n        // Call the getMatrixCenter method with a sample image and validate the result\n        // Use assertions to verify that the center of the matrix is correctly computed\n        // Ensure the method handles exceptions that may occur during the computation of the matrix center\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/detector",
        "package_name": "com.google.zxing.aztec.detector",
        "class_name": "Detector",
        "method_name": "getMatrixCenter",
        "test_code": "package com.google.zxing.aztec.detector;\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonException;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonDecoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.detector.WhiteRectangleDetector;\n\n\nimport com.google.zxing.common.detector.MathUtils;\n\n\nimport com.google.zxing.common.GridSampler;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\nimport com.google.zxing.aztec.AztecDetectorResult;\n\n\nimport com.google.zxing.ResultPoint;\n\n\n\nimport com.google.zxing.NotFoundException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DetectorTest {\n    @Test\n    public void getMatrixCenterTest() {\n        // Create an image and call the method getMatrixCenter()\n        // Check the expected output against the actual output\n        // Use assertions to compare the expected output and actual output\n        // For example:\n        // Point expected = new Point(50, 50);\n        // Point actual = getMatrixCenter();\n        // assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/detector",
        "package_name": "com.google.zxing.aztec.detector",
        "class_name": "Detector",
        "method_name": "getMatrixCenter",
        "test_code": "package com.google.zxing.aztec.detector;\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonException;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonDecoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.detector.WhiteRectangleDetector;\n\n\nimport com.google.zxing.common.detector.MathUtils;\n\n\nimport com.google.zxing.common.GridSampler;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\nimport com.google.zxing.aztec.AztecDetectorResult;\n\n\nimport com.google.zxing.ResultPoint;\n\n\n\nimport com.google.zxing.NotFoundException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DetectorTest {\n    @Test\n    public void getMatrixCenterTest() {\n      // Arrange\n      // Create a mock image for testing\n    \n      // Act\n      // Call the getMatrixCenter() method with the mock image\n      \n      // Assert\n      // Verify that the expected center point is returned\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common",
        "package_name": "com.google.zxing.common",
        "class_name": "BitArray",
        "method_name": "getNextSet",
        "test_code": "package com.google.zxing.common;\n\n\nimport java.util.Arrays;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n                BitArray bitArray = new BitArray();\n                bitArray.appendBit(true); \n                int result = bitArray.getNextSet(0);\n                assertEquals(0, result);\n    }\n    \n}",
        "package_metric": 2.04,
        "class_metric": 16.08,
        "method_metric": 63.64,
        "pitest": 6.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common",
        "package_name": "com.google.zxing.common",
        "class_name": "BitArray",
        "method_name": "getNextSet",
        "test_code": "package com.google.zxing.common;\n\n\nimport java.util.Arrays;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        BitArray bitArray = new BitArray(10);\n        bitArray.set(3);\n        int result = bitArray.getNextSet(2);\n        assertEquals(3, result);\n    }\n}",
        "package_metric": 1.33,
        "class_metric": 10.49,
        "method_metric": 63.64,
        "pitest": 7.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common",
        "package_name": "com.google.zxing.common",
        "class_name": "BitArray",
        "method_name": "getNextSet",
        "test_code": "package com.google.zxing.common;\n\n\nimport java.util.Arrays;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        \n        int[] testBits = {0x01000000};\n        BitArray bitArray = new BitArray(testBits, 32);\n        int result = bitArray.getNextSet(0);\n        assertEquals(24, result);\n        \n    }\n    \n}",
        "package_metric": 1.06,
        "class_metric": 8.39,
        "method_metric": 63.64,
        "pitest": 3.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common",
        "package_name": "com.google.zxing.common",
        "class_name": "BitArray",
        "method_name": "getNextSet",
        "test_code": "package com.google.zxing.common;\n\n\nimport java.util.Arrays;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        BitArray bitArray = new BitArray(32);\n        for (int i = 0; i < 32; i++) {\n            bitArray.set(i);\n        }\n        assertEquals(0, bitArray.getNextSet(0));\n        assertEquals(1, bitArray.getNextSet(1));\n        assertEquals(2, bitArray.getNextSet(2));\n        assertEquals(3, bitArray.getNextSet(3));\n        // ... continue setting and checking getNextSet for additional values\n    }\n}",
        "package_metric": 1.33,
        "class_metric": 10.49,
        "method_metric": 63.64,
        "pitest": 7.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common",
        "package_name": "com.google.zxing.common",
        "class_name": "BitArray",
        "method_name": "getNextSet",
        "test_code": "package com.google.zxing.common;\n\n\nimport java.util.Arrays;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        BitArray bitArray = new BitArray();\n        bitArray.appendBits(0b1111, 4);\n        assertEquals(0, bitArray.getNextSet(0));\n        assertEquals(1, bitArray.getNextSet(1));\n        assertEquals(2, bitArray.getNextSet(2));\n        assertEquals(3, bitArray.getNextSet(3));\n        assertEquals(4, bitArray.getNextSet(4));\n    }\n}",
        "package_metric": 2.48,
        "class_metric": 19.58,
        "method_metric": 72.73,
        "pitest": 13.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common",
        "package_name": "com.google.zxing.common",
        "class_name": "BitArray",
        "method_name": "getNextSet",
        "test_code": "package com.google.zxing.common;\n\n\nimport java.util.Arrays;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        BitArray bitArray = new BitArray(new int[]{1, 2, 3}, 3);\n        int result = bitArray.getNextSet(0);\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 1.06,
        "class_metric": 8.39,
        "method_metric": 63.64,
        "pitest": 1.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(1, new int[]{1, 2}, 3, 4, 5);\n        FinderPattern finderPattern2 = new FinderPattern(1, new int[]{1, 2}, 3, 4, 5);\n        assertTrue(finderPattern1.equals(finderPattern2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern pattern1 = new FinderPattern(1, new int[]{1, 2}, 3, 4, 5);\n        FinderPattern pattern2 = new FinderPattern(1, new int[]{1, 2}, 3, 4, 5);\n        FinderPattern pattern3 = new FinderPattern(2, new int[]{1, 2}, 3, 4, 5);\n        assertTrue(pattern1.equals(pattern2));\n        assertFalse(pattern1.equals(pattern3));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 38.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern = new FinderPattern(1, new int[]{1, 2}, 3, 4, 5);\n        FinderPattern sameFinderPattern = new FinderPattern(1, new int[]{1, 2}, 3, 4, 5);\n        assertTrue(finderPattern.equals(sameFinderPattern));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(5, new int[]{1, 2}, 10, 20, 30);\n        FinderPattern finderPattern2 = new FinderPattern(5, new int[]{1, 2}, 10, 20, 30);\n        FinderPattern finderPattern3 = new FinderPattern(3, new int[]{1, 2}, 10, 20, 30);\n        Object object = new Object();\n    \n        assertEquals(true, finderPattern1.equals(finderPattern2));\n        assertEquals(false, finderPattern1.equals(finderPattern3));\n        assertEquals(false, finderPattern1.equals(object));\n    }\n}",
        "package_metric": 2.36,
        "class_metric": 69.23,
        "method_metric": 100.0,
        "pitest": 50.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern pattern1 = new FinderPattern(5, new int[]{10, 20}, 50, 60, 1);\n        FinderPattern pattern2 = new FinderPattern(5, new int[]{10, 20}, 50, 60, 1);\n        assertTrue(pattern1.equals(pattern2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(2, new int[]{1, 4}, 2, 5, 3);\n        FinderPattern finderPattern2 = new FinderPattern(2, new int[]{1, 4}, 2, 5, 3);\n        \n        assertTrue(finderPattern1.equals(finderPattern2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(1, new int[]{1, 2}, 3, 4, 5);\n        FinderPattern finderPattern2 = new FinderPattern(1, new int[]{1, 2}, 3, 4, 5);\n        FinderPattern finderPattern3 = new FinderPattern(2, new int[]{3, 4}, 5, 6, 7);\n        \n        assertEquals(true, finderPattern1.equals(finderPattern2));\n        assertEquals(false, finderPattern1.equals(finderPattern3));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 38.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(5, new int[] { 1, 2 }, 3, 4, 5);\n        FinderPattern finderPattern2 = new FinderPattern(5, new int[] { 1, 2 }, 3, 4, 5);\n        assertTrue(finderPattern1.equals(finderPattern2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern fp1 = new FinderPattern(1, new int[]{0, 1}, 2, 3, 4);\n        FinderPattern fp2 = new FinderPattern(1, new int[]{0, 1}, 2, 3, 4);\n        assertTrue(fp1.equals(fp2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    \n    @Test\n    public void equalsTest() {\n        FinderPattern pattern1 = new FinderPattern(5, new int[]{2, 8}, 2, 8, 3);\n        FinderPattern pattern2 = new FinderPattern(5, new int[]{2, 8}, 2, 8, 3);\n        assertTrue(pattern1.equals(pattern2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(1, new int[]{1, 2}, 3, 4, 5);\n        FinderPattern finderPattern2 = new FinderPattern(1, new int[]{1, 2}, 3, 4, 5);\n        assertTrue(finderPattern1.equals(finderPattern2));\n        assertFalse(finderPattern1.equals(null));\n        assertFalse(finderPattern1.equals(new ResultPoint(1, 2)));\n    }\n}",
        "package_metric": 2.36,
        "class_metric": 69.23,
        "method_metric": 100.0,
        "pitest": 38.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(1, new int[]{1, 2}, 1, 2, 1);\n        FinderPattern finderPattern2 = new FinderPattern(1, new int[]{1, 2}, 1, 2, 1);\n        assertTrue(finderPattern1.equals(finderPattern2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(5, new int[]{1, 2}, 3, 4, 5);\n        FinderPattern finderPattern2 = new FinderPattern(5, new int[]{1, 2}, 3, 4, 5);\n        assertTrue(finderPattern1.equals(finderPattern2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(1, new int[]{1, 2, 3}, 4, 5, 6);\n        FinderPattern finderPattern2 = new FinderPattern(1, new int[]{1, 2, 3}, 4, 5, 6);\n        assertTrue(finderPattern1.equals(finderPattern2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(1, new int[]{0, 1}, 0, 1, 1);\n        FinderPattern finderPattern2 = new FinderPattern(1, new int[]{0, 1}, 0, 1, 1);\n        assertTrue(finderPattern1.equals(finderPattern2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/oned/rss",
        "package_name": "com.google.zxing.oned.rss",
        "class_name": "FinderPattern",
        "method_name": "equals",
        "test_code": "package com.google.zxing.oned.rss;\n\n\nimport com.google.zxing.ResultPoint;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FinderPatternTest {\n    @Test\n    public void equalsTest() {\n        FinderPattern finderPattern1 = new FinderPattern(1, new int[]{1, 2}, 1, 2, 3);\n        FinderPattern finderPattern2 = new FinderPattern(1, new int[]{1, 2}, 1, 2, 3);\n        assertEquals(true, finderPattern1.equals(finderPattern2));\n    }\n}",
        "package_metric": 2.1,
        "class_metric": 61.54,
        "method_metric": 75.0,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "State",
        "method_name": "addBinaryShiftChar",
        "test_code": "package com.google.zxing.aztec.encoder;\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport java.util.List;\n\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.nio.charset.StandardCharsets;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StateTest {\n    @Test\n    public void addBinaryShiftCharTest() {\n        State initialState = State.INITIAL_STATE;\n        State newState = initialState.addBinaryShiftChar(0);\n        assertEquals(newState.getMode(), HighLevelEncoder.MODE_UPPER);\n    }\n}",
        "package_metric": 7.28,
        "class_metric": 29.11,
        "method_metric": 64.29,
        "pitest": 1.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "State",
        "method_name": "addBinaryShiftChar",
        "test_code": "package com.google.zxing.aztec.encoder;\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport java.util.List;\n\n\n\nimport java.util.ArrayList;\n\n\n\nimport java.nio.charset.StandardCharsets;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StateTest {\n    @Test\n    public void addBinaryShiftCharTest() {\n      State initialState = State.INITIAL_STATE;\n      State newState = initialState.addBinaryShiftChar(5);\n      // Add assertions to test the newState\n      // assertEquals(expected, actual);\n      // assertTrue(condition);\n    }\n}",
        "package_metric": 7.04,
        "class_metric": 27.85,
        "method_metric": 64.29,
        "pitest": 0.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        float result = MathUtils.distance(2, 3, 6, 5);\n        assertEquals(result, 4.47213595499958f);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n        public void distanceTest() {\n            float result = MathUtils.distance(3, 5, 8, 10);\n            assertEquals((float) 7.071068, result, 0.000001);\n        }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        float result = MathUtils.distance(3, 4, 6, 8);\n        assertEquals(5.0, result);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        assertEquals(5.0, MathUtils.distance(0, 0, 3, 4));\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 22.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        // Given\n        int aX = 3;\n        int aY = 4;\n        int bX = 3;\n        int bY = 2;\n        \n        // When\n        float result = MathUtils.distance(aX, aY, bX, bY);\n        \n        // Then\n        assertEquals(2.0f, result);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n      float expectedDistance = MathUtils.distance(3, 4, 7, 1);\n      float actualDistance = (float) Math.sqrt(Math.pow(3-7, 2) + Math.pow(4-1, 2));\n      assertEquals(expectedDistance, actualDistance);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        float result = MathUtils.distance(3, 4, 6, 7);\n        assertEquals(4.24264f, result, 0.0001);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n            float result = MathUtils.distance(3, 4, 0, 0);\n            assertEquals(5.0, result, 0.0);\n        }\n    \n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 22.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        assertEquals(5.0f, MathUtils.distance(2, 3, 5, 7));\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        float actual = MathUtils.distance(3, 4, 0, 0);\n        float expected = 5.0f;\n        assertEquals(expected, actual, 0.0001);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 22.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 2;\n        int aY = 3;\n        int bX = 5;\n        int bY = 7;\n        float expectedDistance = 5.0f;\n        float actualDistance = MathUtils.distance(aX, aY, bX, bY);\n        assertEquals(expectedDistance, actualDistance);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        float expected = 5.0f;\n        float actual = MathUtils.distance(3, 4, 6, 8);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        float result = MathUtils.distance(3, 4, 0, 0);\n        assertEquals(5.0, result, 0.001);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 22.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 5;\n        int aY = 7;\n        int bX = 8;\n        int bY = 12;\n        float expectedDistance = 5.8309f;\n        float actualDistance = MathUtils.distance(aX, aY, bX, bY);\n        assertEquals(expectedDistance, actualDistance, 0.0001);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        float expected = 5.0f;\n        float actual = MathUtils.distance(1, 2, 4, 6);\n        assertEquals(expected, actual, 0.001);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        float result = MathUtils.distance(3, 4, 0, 0);\n        assertEquals(5.0, result);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 22.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        float expected = 5;\n        float actual = MathUtils.distance(1, 1, 4, 5);\n        assertEquals(expected, actual, 0.0);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    \n    @Test\n    public void distanceTest() {\n        float result = MathUtils.distance(3, 4, 6, 8);\n        assertEquals(5.0, result, 0.001);\n    }\n    \n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 1;\n        int aY = 1;\n        int bX = 4;\n        int bY = 5;\n        float expectedDistance = 5.0f;\n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY));\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 2;\n        int aY = 5;\n        int bX = 8;\n        int bY = 2;\n        \n        float expectedDistance = 6.708203932499369f;\n        \n        float actualDistance = MathUtils.distance(aX, aY, bX, bY);\n        \n        assertEquals(expectedDistance, actualDistance, 0.0001);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n      float result = MathUtils.distance(3, 4, 0, 0);\n      assertEquals(5.0, result, 0.0001);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 22.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n      assertEquals(5.0, MathUtils.distance(1, 2, 4, 6), 0.01);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 33.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 2;\n        int aY = 4;\n        int bX = 1;\n        int bY = 6;\n        float expected = 2.2360679f;\n        float result = MathUtils.distance(aX, aY, bX, bY);\n        assertEquals(expected, result, 0.0001);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 28.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 3;\n        int aY = 4;\n        int bX = 0;\n        int bY = 0;\n        float expected = 5.0f;\n        float actual = MathUtils.distance(aX, aY, bX, bY);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 22.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/detector",
        "package_name": "com.google.zxing.common.detector",
        "class_name": "MathUtils",
        "method_name": "distance",
        "test_code": "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        float result = MathUtils.distance(3, 4, 0, 0);\n        assertEquals(5.0, result, 0.0001);\n    }\n}",
        "package_metric": 1.39,
        "class_metric": 27.27,
        "method_metric": 100.0,
        "pitest": 22.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common",
        "package_name": "com.google.zxing.common",
        "class_name": "HybridBinarizer",
        "method_name": "calculateThresholdForBlock",
        "test_code": "package com.google.zxing.common;\n\nimport com.google.zxing.NotFoundException;\n\n\nimport com.google.zxing.LuminanceSource;\n\n\n\nimport com.google.zxing.Binarizer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HybridBinarizerTest {\n    @Test\n    public void calculateThresholdForBlockTest() {\n        // Arrange\n        byte[] luminances = new byte[] { /* input values */ };\n        int subWidth = 5;\n        int subHeight = 5;\n        int width = 20;\n        int height = 20;\n        int[][] blackPoints = new int[][] { /* black points array */ };\n        BitMatrix matrix = new BitMatrix(20, 20);\n        \n        // Act\n        // Call the calculateThresholdForBlock method with the arranged parameters\n        \n        // Assert\n        // Add appropriate assertions for the expected output\n    }\n}",
        "package_metric": 0.62,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/reedsolomon",
        "package_name": "com.google.zxing.common.reedsolomon",
        "class_name": "ReedSolomonDecoder",
        "method_name": "decodeWithECCount",
        "test_code": "package com.google.zxing.common.reedsolomon;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ReedSolomonDecoderTest {\n    @Test\n    public void decodeWithECCountTest() {\n        try {\n            ReedSolomonDecoder decoder = new ReedSolomonDecoder(new GenericGF(119, 120, 1));\n            int[] received = {1, 2, 3, 4};\n            int twoS = 2;\n            int numErrorsCorrected = decoder.decodeWithECCount(received, twoS);\n            assertEquals(0, numErrorsCorrected, \"Expected no errors to be corrected\");\n        } catch (ReedSolomonException e) {\n            fail(\"Exception thrown: \" + e.getMessage());\n        }\n    }\n}",
        "package_metric": 38.46,
        "class_metric": 48.35,
        "method_metric": 78.26,
        "pitest": 31.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/reedsolomon",
        "package_name": "com.google.zxing.common.reedsolomon",
        "class_name": "ReedSolomonDecoder",
        "method_name": "decodeWithECCount",
        "test_code": "package com.google.zxing.common.reedsolomon;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ReedSolomonDecoderTest {\n    @Test\n    public void decodeWithECCountTest() {\n            int[] received = {5, 6, 7, 8, 9};\n            int twoS = 2;\n            ReedSolomonDecoder decoder = new ReedSolomonDecoder(new GenericGF(0x11d, 256, 1));\n            try {\n                int errorsCorrected = decoder.decodeWithECCount(received, twoS);\n                System.out.println(\"Number of errors corrected: \" + errorsCorrected);\n                // assert the expected output using assertEquals\n                assertEquals(2, errorsCorrected);\n            } catch (ReedSolomonException e) {\n                System.out.println(\"Decoding failed: \" + e.getMessage());\n            }\n    }\n    \n}",
        "package_metric": 59.87,
        "class_metric": 74.73,
        "method_metric": 86.96,
        "pitest": 50.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/common/reedsolomon",
        "package_name": "com.google.zxing.common.reedsolomon",
        "class_name": "ReedSolomonDecoder",
        "method_name": "decodeWithECCount",
        "test_code": "package com.google.zxing.common.reedsolomon;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ReedSolomonDecoderTest {\n    @Test\n    public void decodeWithECCountTest() {\n        int[] received = {4, 2, 1, 3};\n        GenericGF field = new GenericGF(0x11D, 256, 1);\n        ReedSolomonDecoder rsDecoder = new ReedSolomonDecoder(field);\n        int twoS = 2;\n        int result;\n        try {\n            result = rsDecoder.decodeWithECCount(received, twoS);\n            assertEquals(0, result);\n        } catch (ReedSolomonException e) {\n            e.printStackTrace();\n        }\n    }\n}",
        "package_metric": 59.87,
        "class_metric": 74.73,
        "method_metric": 86.96,
        "pitest": 39.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n        public void encodeTest() {\n            AztecCode result = Encoder.encode(\"Test data\", 20, 5, StandardCharsets.UTF_8);\n            assertNotNull(result);\n        }\n}",
        "package_metric": 73.24,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        AztecCode result = Encoder.encode(\"Test data\", 25, 5, StandardCharsets.UTF_8);\n        assertNotNull(result);\n        assertEquals(5, result.getLayers());\n    }\n    \n}",
        "package_metric": 73.47,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 26.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        AztecCode aztecCode = Encoder.encode(\"test data\", 50, 4, StandardCharsets.UTF_8);\n        // Add assertions here to check the result\n        assertTrue(aztecCode.getSize() > 0);\n    }\n    \n}",
        "package_metric": 73.47,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        String data = \"Test data\";\n        int minECCPercent = 25;\n        int userSpecifiedLayers = 0;\n        Charset charset = StandardCharsets.UTF_8;\n        AztecCode result = Encoder.encode(data, minECCPercent, userSpecifiedLayers, charset);\n        assertNotNull(result);\n    }\n}",
        "package_metric": 72.07,
        "class_metric": 69.66,
        "method_metric": 81.55,
        "pitest": 21.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        AztecCode result = Encoder.encode(\"test data\", 25, 4, Charset.defaultCharset());\n        // Add assertions here to validate the result\n    }\n}",
        "package_metric": 73.24,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 24.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        AztecCode result = Encoder.encode(\"Test Data\", 33, 2, StandardCharsets.UTF_8);\n        // Add assertions as needed\n        assertNotNull(result);\n    }\n}",
        "package_metric": 73.94,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        AztecCode result = Encoder.encode(\"Test Data\", 30, 5, Charset.forName(\"UTF-8\"));\n        // add assertion here for the result\n        assertNotNull(result);\n    }\n}",
        "package_metric": 73.94,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        AztecCode result = Encoder.encode(\"test data\", 35, 5, StandardCharsets.UTF_8);\n        assertNotNull(result);\n    }\n    \n}",
        "package_metric": 73.24,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        String testData = \"Hello\";\n        int minECCPercent = 25;\n        int userSpecifiedLayers = 5;\n        Charset charset = StandardCharsets.UTF_8;\n        AztecCode result = Encoder.encode(testData, minECCPercent, userSpecifiedLayers, charset);\n        assertNotNull(result);\n    }\n}",
        "package_metric": 72.77,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 24.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        // Given\n        String data = \"Test data\";\n        int minECCPercent = 25;\n        int userSpecifiedLayers = 6;\n        Charset charset = StandardCharsets.UTF_8;\n        \n        // When\n        AztecCode result = Encoder.encode(data, minECCPercent, userSpecifiedLayers, charset);\n        \n        // Then\n        assertNotNull(result);\n        // Add more assertions as needed\n    }\n}",
        "package_metric": 73.24,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        AztecCode result = Encoder.encode(\"testData\", 25, 8, StandardCharsets.UTF_8);\n        assertNotNull(result);\n    }\n}",
        "package_metric": 73.0,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n      String data = \"Hello, World!\";\n      int minECCPercent = 25;\n      int userSpecifiedLayers = 4;\n      Charset charset = StandardCharsets.UTF_8;\n    \n      AztecCode result = Encoder.encode(data, minECCPercent, userSpecifiedLayers, charset);\n    \n      assertNotNull(result);\n      // Add more assertions as needed\n    }\n}",
        "package_metric": 79.34,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest(){\n      String data = \"test\";\n      int minECCPercent = 25;\n      int userSpecifiedLayers = 6;\n      Charset charset = StandardCharsets.UTF_8;\n      AztecCode result = Encoder.encode(data, minECCPercent, userSpecifiedLayers, charset);\n      assertNotNull(result);\n    }\n}",
        "package_metric": 72.77,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        String data = \"test\";\n        int minECCPercent = 25;\n        int userSpecifiedLayers = 5;\n        Charset charset = StandardCharsets.UTF_8;\n        AztecCode result = Encoder.encode(data, minECCPercent, userSpecifiedLayers, charset);\n        assertNotNull(result);\n    }\n}",
        "package_metric": 72.77,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        String data = \"test data\";\n        int minECCPercent = 50;\n        int userSpecifiedLayers = 4;\n        Charset charset = StandardCharsets.UTF_8;\n        \n        AztecCode result = Encoder.encode(data, minECCPercent, userSpecifiedLayers, charset);\n        \n        assertNotNull(result);\n    }\n}",
        "package_metric": 73.24,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n     @Test\n        public void encodeTest() {\n            AztecCode encodedData = Encoder.encode(\"test\", 50, 8, Charset.defaultCharset());\n            assertNotNull(encodedData);\n        }\n}",
        "package_metric": 72.77,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n        public void encodeTest() {\n            String data = \"Hello, world!\";\n            int minECCPercent = 25;\n            int userSpecifiedLayers = 5;\n            Charset charset = StandardCharsets.UTF_8;\n            \n            AztecCode result = Encoder.encode(data, minECCPercent, userSpecifiedLayers, charset);\n            \n            assertNotNull(result);\n            // Add additional assertions based on the expected output\n        }\n}",
        "package_metric": 79.34,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 26.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        AztecCode result = Encoder.encode(\"Test Data\", 25, 8, StandardCharsets.UTF_8);\n        assertNotNull(result);\n    }\n}",
        "package_metric": 73.94,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n        AztecCode result = Encoder.encode(\"Test Data\", 20, 5, Charset.defaultCharset());\n        // Add assertions to validate the result\n    }\n    \n}",
        "package_metric": 73.94,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 24.0
    },
    {
        "project_name": "zxing",
        "file_path": "/home/joseph/java_project/zxing/core/src/test/java/com/google/zxing/aztec/encoder",
        "package_name": "com.google.zxing.aztec.encoder",
        "class_name": "Encoder",
        "method_name": "encode",
        "test_code": "package com.google.zxing.aztec.encoder;\n\nimport java.nio.charset.StandardCharsets;\n\n\n\nimport java.nio.charset.Charset;\n\n\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n\n\nimport com.google.zxing.common.reedsolomon.GenericGF;\n\n\nimport com.google.zxing.common.BitMatrix;\n\n\n\nimport com.google.zxing.common.BitArray;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class EncoderTest {\n    @Test\n    public void encodeTest() {\n      AztecCode result = Encoder.encode(\"test\", 25, 5, StandardCharsets.UTF_8);\n      assertNotNull(result);\n    }\n}",
        "package_metric": 72.77,
        "class_metric": 72.47,
        "method_metric": 84.525,
        "pitest": 25.0
    },
    {
        "project_name": "apollo",
        "file_path": "/home/joseph/java_project/apollo/apollo-portal/src/test/java/com/ctrip/framework/apollo/openapi/v1/controller",
        "package_name": "com.ctrip.framework.apollo.openapi.v1.controller",
        "class_name": "AppController",
        "method_name": "createApp",
        "test_code": "package com.ctrip.framework.apollo.openapi.v1.controller;\n\nimport java.util.List;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.springframework.util.StringUtils;\n\n\nimport org.springframework.security.access.prepost.PreAuthorize;\n\n\nimport javax.transaction.Transactional;\n\n\nimport javax.servlet.http.HttpServletRequest;\n\n\nimport java.util.Set;\n\n\nimport java.util.Arrays;\n\n\nimport com.ctrip.framework.apollo.portal.entity.model.AppModel;\n\n\nimport com.ctrip.framework.apollo.openapi.dto.OpenEnvClusterDTO;\n\n\nimport com.ctrip.framework.apollo.openapi.dto.OpenAppDTO;\n\n\nimport com.ctrip.framework.apollo.openapi.util.ConsumerAuthUtil;\n\n\nimport com.ctrip.framework.apollo.openapi.service.ConsumerService;\n\n\nimport com.ctrip.framework.apollo.openapi.dto.OpenCreateAppDTO;\n\n\nimport com.ctrip.framework.apollo.openapi.api.AppOpenApiService;\n\n\n\nimport com.ctrip.framework.apollo.common.exception.BadRequestException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AppControllerTest {\n    @Test\n    public void createAppTest() {\n        // TODO: Write the unit test for the createApp method\n        // Arrange\n        \n        // Act\n        \n        // Assert\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "apollo",
        "file_path": "/home/joseph/java_project/apollo/apollo-portal/src/test/java/com/ctrip/framework/apollo/openapi/v1/controller",
        "package_name": "com.ctrip.framework.apollo.openapi.v1.controller",
        "class_name": "AppController",
        "method_name": "createApp",
        "test_code": "package com.ctrip.framework.apollo.openapi.v1.controller;\n\nimport java.util.List;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.springframework.util.StringUtils;\n\n\nimport org.springframework.security.access.prepost.PreAuthorize;\n\n\nimport javax.transaction.Transactional;\n\n\nimport javax.servlet.http.HttpServletRequest;\n\n\nimport java.util.Set;\n\n\nimport java.util.Arrays;\n\n\nimport com.ctrip.framework.apollo.portal.entity.model.AppModel;\n\n\nimport com.ctrip.framework.apollo.openapi.dto.OpenEnvClusterDTO;\n\n\nimport com.ctrip.framework.apollo.openapi.dto.OpenAppDTO;\n\n\nimport com.ctrip.framework.apollo.openapi.util.ConsumerAuthUtil;\n\n\nimport com.ctrip.framework.apollo.openapi.service.ConsumerService;\n\n\nimport com.ctrip.framework.apollo.openapi.dto.OpenCreateAppDTO;\n\n\nimport com.ctrip.framework.apollo.openapi.api.AppOpenApiService;\n\n\n\nimport com.ctrip.framework.apollo.common.exception.BadRequestException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AppControllerTest {\n    @Test\n    public void createAppTest() {\n        OpenCreateAppDTO req = new OpenCreateAppDTO();\n        OpenAppDTO app = new OpenAppDTO();\n        app.setAppId(\"testAppId\");\n        req.setApp(app);\n        \n        // perform the createApp method\n        // assert the expected results\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "apollo",
        "file_path": "/home/joseph/java_project/apollo/apollo-portal/src/test/java/com/ctrip/framework/apollo/openapi/v1/controller",
        "package_name": "com.ctrip.framework.apollo.openapi.v1.controller",
        "class_name": "AppController",
        "method_name": "createApp",
        "test_code": "package com.ctrip.framework.apollo.openapi.v1.controller;\n\nimport java.util.List;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.springframework.util.StringUtils;\n\n\nimport org.springframework.security.access.prepost.PreAuthorize;\n\n\nimport javax.transaction.Transactional;\n\n\nimport javax.servlet.http.HttpServletRequest;\n\n\nimport java.util.Set;\n\n\nimport java.util.Arrays;\n\n\nimport com.ctrip.framework.apollo.portal.entity.model.AppModel;\n\n\nimport com.ctrip.framework.apollo.openapi.dto.OpenEnvClusterDTO;\n\n\nimport com.ctrip.framework.apollo.openapi.dto.OpenAppDTO;\n\n\nimport com.ctrip.framework.apollo.openapi.util.ConsumerAuthUtil;\n\n\nimport com.ctrip.framework.apollo.openapi.service.ConsumerService;\n\n\nimport com.ctrip.framework.apollo.openapi.dto.OpenCreateAppDTO;\n\n\nimport com.ctrip.framework.apollo.openapi.api.AppOpenApiService;\n\n\n\nimport com.ctrip.framework.apollo.common.exception.BadRequestException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AppControllerTest {\n    @Test\n    public void createAppTest() {\n        // Create request and set necessary data\n        // Call createApp method\n        // Assert the expected behavior\n    }\n    \n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "apollo",
        "file_path": "/home/joseph/java_project/apollo/apollo-common/src/test/java/com/ctrip/framework/apollo/common/controller",
        "package_name": "com.ctrip.framework.apollo.common.controller",
        "class_name": "GlobalDefaultExceptionHandler",
        "method_name": "printLog",
        "test_code": "package com.ctrip.framework.apollo.common.controller;\n\nimport org.springframework.web.client.HttpStatusCodeException;\n\n\nimport org.springframework.web.bind.annotation.ExceptionHandler;\n\n\nimport org.springframework.web.bind.annotation.ControllerAdvice;\n\n\nimport org.springframework.web.bind.MethodArgumentNotValidException;\n\n\nimport org.springframework.web.HttpRequestMethodNotSupportedException;\n\n\nimport org.springframework.web.HttpMediaTypeException;\n\n\nimport org.springframework.validation.ObjectError;\n\n\nimport org.springframework.security.access.AccessDeniedException;\n\n\nimport org.springframework.http.ResponseEntity;\n\n\nimport org.springframework.http.MediaType;\n\n\nimport org.springframework.http.HttpStatus;\n\n\nimport org.springframework.http.HttpHeaders;\n\n\nimport org.slf4j.event.Level;\n\n\nimport org.slf4j.LoggerFactory;\n\n\nimport org.slf4j.Logger;\n\n\nimport javax.validation.ConstraintViolationException;\n\n\nimport javax.servlet.http.HttpServletRequest;\n\n\nimport javax.servlet.ServletException;\n\n\nimport java.util.Optional;\n\n\nimport java.util.Map;\n\n\nimport java.util.HashMap;\n\n\nimport java.time.format.DateTimeFormatter;\n\n\nimport java.time.LocalDateTime;\n\n\nimport java.lang.reflect.Type;\n\n\nimport com.google.gson.reflect.TypeToken;\n\n\nimport com.google.gson.Gson;\n\n\nimport com.ctrip.framework.apollo.tracer.Tracer;\n\n\nimport com.ctrip.framework.apollo.common.exception.BadRequestException;\n\n\n\nimport com.ctrip.framework.apollo.common.exception.AbstractApolloHttpException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GlobalDefaultExceptionHandlerTest {\n    @Test\n    public void printLogTest() {\n        // given\n        GlobalDefaultExceptionHandler handler = new GlobalDefaultExceptionHandler();\n        \n        // when\n        // call the method printLog with appropriate arguments to test all log levels\n        \n        // then\n        // An assertion can be added based on the expected log output\n    }\n}",
        "package_metric": 5.62,
        "class_metric": 10.42,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "apollo",
        "file_path": "/home/joseph/java_project/apollo/apollo-common/src/test/java/com/ctrip/framework/apollo/common/utils",
        "package_name": "com.ctrip.framework.apollo.common.utils",
        "class_name": "BeanUtils",
        "method_name": "mapByKey",
        "test_code": "package com.ctrip.framework.apollo.common.utils;\n\nimport java.util.Set;\n\n\nimport java.util.Map;\n\n\nimport java.util.List;\n\n\nimport java.util.HashSet;\n\n\nimport java.util.HashMap;\n\n\nimport java.util.Collections;\n\n\nimport java.util.ArrayList;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.beans.PropertyDescriptor;\n\n\nimport org.springframework.util.CollectionUtils;\n\n\nimport org.springframework.beans.BeanWrapperImpl;\n\n\n\nimport org.springframework.beans.BeanWrapper;\n\n\n\nimport com.ctrip.framework.apollo.common.exception.BeanUtilsException;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BeanUtilsTest {\n    @Test\n    public void mapByKeyTest() {\n        String key = \"id\";\n        List<Object> list = new ArrayList<>();\n        // Add test data to the list\n    \n        Map<String, Object> expectedMap = new HashMap<>();\n        // Add expected mappings to the expectedMap\n    \n        Map<String, Object> resultMap = BeanUtils.mapByKey(key, list);\n        assertEquals(expectedMap, resultMap);\n    }\n}",
        "package_metric": 2.44,
        "class_metric": 3.92,
        "method_metric": 20.0,
        "pitest": 3.0
    },
    {
        "project_name": "apollo",
        "file_path": "/home/joseph/java_project/apollo/apollo-biz/src/test/java/com/ctrip/framework/apollo/biz/service",
        "package_name": "com.ctrip.framework.apollo.biz.service",
        "class_name": "NamespaceBranchService",
        "method_name": "updateRulesReleaseId",
        "test_code": "package com.ctrip.framework.apollo.biz.service;\n\n\nimport java.util.Map;\n\n\nimport org.springframework.transaction.annotation.Transactional;\n\n\nimport org.springframework.stereotype.Service;\n\n\nimport org.springframework.context.annotation.Lazy;\n\n\nimport com.google.common.collect.Maps;\n\n\nimport com.ctrip.framework.apollo.common.utils.UniqueKeyGenerator;\n\n\nimport com.ctrip.framework.apollo.common.utils.GrayReleaseRuleItemTransformer;\n\n\nimport com.ctrip.framework.apollo.common.exception.BadRequestException;\n\n\nimport com.ctrip.framework.apollo.common.constants.ReleaseOperationContext;\n\n\nimport com.ctrip.framework.apollo.common.constants.ReleaseOperation;\n\n\nimport com.ctrip.framework.apollo.common.constants.NamespaceBranchStatus;\n\n\nimport com.ctrip.framework.apollo.biz.repository.GrayReleaseRuleRepository;\n\n\nimport com.ctrip.framework.apollo.biz.entity.Release;\n\n\nimport com.ctrip.framework.apollo.biz.entity.Namespace;\n\n\nimport com.ctrip.framework.apollo.biz.entity.GrayReleaseRule;\n\n\nimport com.ctrip.framework.apollo.biz.entity.Cluster;\n\n\n\nimport com.ctrip.framework.apollo.biz.entity.Audit;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NamespaceBranchServiceTest {\n    @Test\n    public void updateRulesReleaseIdTest() {\n        // Create test data\n    \n        // Call the method to be tested\n    \n        // Validate the result\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "apollo",
        "file_path": "/home/joseph/java_project/apollo/apollo-biz/src/test/java/com/ctrip/framework/apollo/biz/service",
        "package_name": "com.ctrip.framework.apollo.biz.service",
        "class_name": "NamespaceBranchService",
        "method_name": "updateRulesReleaseId",
        "test_code": "package com.ctrip.framework.apollo.biz.service;\n\n\nimport java.util.Map;\n\n\nimport org.springframework.transaction.annotation.Transactional;\n\n\nimport org.springframework.stereotype.Service;\n\n\nimport org.springframework.context.annotation.Lazy;\n\n\nimport com.google.common.collect.Maps;\n\n\nimport com.ctrip.framework.apollo.common.utils.UniqueKeyGenerator;\n\n\nimport com.ctrip.framework.apollo.common.utils.GrayReleaseRuleItemTransformer;\n\n\nimport com.ctrip.framework.apollo.common.exception.BadRequestException;\n\n\nimport com.ctrip.framework.apollo.common.constants.ReleaseOperationContext;\n\n\nimport com.ctrip.framework.apollo.common.constants.ReleaseOperation;\n\n\nimport com.ctrip.framework.apollo.common.constants.NamespaceBranchStatus;\n\n\nimport com.ctrip.framework.apollo.biz.repository.GrayReleaseRuleRepository;\n\n\nimport com.ctrip.framework.apollo.biz.entity.Release;\n\n\nimport com.ctrip.framework.apollo.biz.entity.Namespace;\n\n\nimport com.ctrip.framework.apollo.biz.entity.GrayReleaseRule;\n\n\nimport com.ctrip.framework.apollo.biz.entity.Cluster;\n\n\n\nimport com.ctrip.framework.apollo.biz.entity.Audit;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NamespaceBranchServiceTest {\n    @Test\n    public void updateRulesReleaseIdTest() {\n        // Create a new GrayReleaseRule object\n        // Set the required properties for the new GrayReleaseRule object\n        // Call the updateRulesReleaseId method with the new GrayReleaseRule object\n        // Assert that the returned GrayReleaseRule object is not null\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        assertTrue(neuron.compareAndSetFeatures(new double[]{1.0, 2.0, 3.0}, new double[]{4.0, 5.0, 6.0}));\n    }\n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n        public void compareAndSetFeaturesTest() {\n            Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n            assertTrue(neuron.compareAndSetFeatures(new double[]{1.0, 2.0, 3.0}, new double[]{4.0, 5.0, 6.0}));\n            assertFalse(neuron.compareAndSetFeatures(new double[]{1.0, 2.0, 3.0}, new double[]{7.0, 8.0, 9.0}));\n        }\n}",
        "package_metric": 9.48,
        "class_metric": 57.14,
        "method_metric": 72.73,
        "pitest": 57.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        double[] expect = {1.0, 2.0, 3.0};\n        double[] update = {4.0, 5.0, 6.0};\n        assertTrue(neuron.compareAndSetFeatures(expect, update));\n    }\n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron testNeuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        double[] expect = new double[]{1.0, 2.0, 3.0};\n        double[] update = new double[]{4.0, 5.0, 6.0};\n        assertTrue(testNeuron.compareAndSetFeatures(expect, update));\n    }\n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n        @Test\n        public void compareAndSetFeaturesTest() {\n            Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n            \n            double[] expect = {1.0, 2.0, 3.0};\n            double[] update = {4.0, 5.0, 6.0};\n            \n            assertTrue(neuron.compareAndSetFeatures(expect, update));\n        }\n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        double[] expect = {1.0, 2.0, 3.0};\n        double[] update = {4.0, 5.0, 6.0};\n        assertTrue(neuron.compareAndSetFeatures(expect, update));\n    }\n    \n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        assertTrue(neuron.compareAndSetFeatures(new double[]{1.0, 2.0, 3.0}, new double[]{4.0, 5.0, 6.0}));\n        assertFalse(neuron.compareAndSetFeatures(new double[]{1.0, 2.0, 3.0}, new double[]{7.0, 8.0, 9.0}));\n    }\n}",
        "package_metric": 9.48,
        "class_metric": 57.14,
        "method_metric": 72.73,
        "pitest": 57.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        double[] expected = new double[]{1.0, 2.0, 3.0};\n        double[] updated = new double[]{4.0, 5.0, 6.0};\n        \n        boolean result = neuron.compareAndSetFeatures(expected, updated);\n        \n        assertTrue(result);\n    }\n    \n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        double[] expect = {1.0, 2.0, 3.0};\n        double[] update = {4.0, 5.0, 6.0};\n        \n        assertTrue(neuron.compareAndSetFeatures(expect, update));\n    }\n    \n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        double[] expect = {1.0, 2.0, 3.0};\n        double[] update = {3.0, 2.0, 1.0};\n        \n        assertTrue(neuron.compareAndSetFeatures(expect, update));\n    }\n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        double[] expect = {1.0, 2.0, 3.0};\n        double[] update = {3.0, 2.0, 1.0};\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        boolean result = neuron.compareAndSetFeatures(expect, update);\n        assertTrue(result);\n    }\n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        double[] expect = new double[]{1.0, 2.0, 3.0};\n        double[] update = new double[]{4.0, 5.0, 6.0};\n        boolean result = neuron.compareAndSetFeatures(expect, update);\n        assertTrue(result);\n    }\n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        double[] current = {1.0, 2.0, 3.0};\n        double[] expect = {1.0, 2.0, 3.0};\n        double[] update = {4.0, 5.0, 6.0};\n    \n        assertTrue(neuron.compareAndSetFeatures(expect, update));\n        assertFalse(neuron.compareAndSetFeatures(expect, update));\n    }\n    \n}",
        "package_metric": 9.48,
        "class_metric": 57.14,
        "method_metric": 72.73,
        "pitest": 57.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "compareAndSetFeatures",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void compareAndSetFeaturesTest() {\n        Neuron neuron = new Neuron(1, new double[]{1.0, 2.0, 3.0});\n        double[] expect = new double[]{1.0, 2.0, 3.0};\n        double[] update = new double[]{4.0, 5.0, 6.0};\n        boolean result = neuron.compareAndSetFeatures(expect, update);\n        assertTrue(result);\n    }\n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 63.64,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<>(1, \"one\");\n        Pair<Integer, String> pair2 = new Pair<>(1, \"one\");\n        Pair<Integer, String> pair3 = new Pair<>(2, \"two\");\n    \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair3 = new Pair<>(\"B\", 2);\n        \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<>(1, \"One\");\n        Pair<Integer, String> pair2 = new Pair<>(1, \"One\");\n        assertEquals(pair1, pair2);\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 21.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<>(1, \"One\");\n        Pair<Integer, String> pair2 = new Pair<>(1, \"One\");\n        assertEquals(pair1, pair2);\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 21.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<>(1, \"One\");\n        Pair<Integer, String> pair2 = new Pair<>(1, \"One\");\n        Pair<Integer, String> pair3 = new Pair<>(2, \"Two\");\n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<>(1, \"One\");\n        Pair<Integer, String> pair2 = new Pair<>(1, \"One\");\n        Pair<Integer, String> pair3 = new Pair<>(2, \"Two\");\n    \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"key\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"key\", 1);\n        Pair<String, Integer> pair3 = new Pair<>(\"differentKey\", 2);\n    \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"one\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"one\", 1);\n        Pair<String, Integer> pair3 = new Pair<>(\"two\", 2);\n      \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n    \n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> firstPair = new Pair<>(1, \"one\");\n        Pair<Integer, String> secondPair = new Pair<>(2, \"two\");\n    \n        assertFalse(firstPair.equals(secondPair));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 8.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"key\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"key\", 1);\n        Pair<String, Integer> pair3 = new Pair<>(\"key2\", 2);\n    \n        // Test for equal pairs\n        assertTrue(pair1.equals(pair2));\n        \n        // Test for non-equal pairs\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair3 = new Pair<>(\"B\", 2);\n        \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"test\", 5);\n        Pair<String, Integer> pair2 = new Pair<>(\"test\", 5);\n        Pair<String, Integer> pair3 = new Pair<>(\"test\", 10);\n        \n        assertTrue(pair1.equals(pair2), \"Pairs are equal\");\n        assertFalse(pair1.equals(pair3), \"Pairs are not equal\");\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"key1\", 10);\n        Pair<String, Integer> pair2 = new Pair<>(\"key1\", 10);\n        Pair<String, Integer> pair3 = new Pair<>(\"key2\", 20);\n        \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<Integer, String>(1, \"One\");\n        Pair<Integer, String> pair2 = new Pair<Integer, String>(1, \"One\");\n        \n        assertTrue(pair1.equals(pair2));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 21.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<>(1, \"One\");\n        Pair<Integer, String> pair2 = new Pair<>(1, \"One\");\n        assertTrue(pair1.equals(pair2));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 21.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> p1 = new Pair<>(1, \"One\");\n        Pair<Integer, String> p2 = new Pair<>(1, \"Two\");\n        assertFalse(p1.equals(null));\n        assertFalse(p1.equals(p2));\n        assertTrue(p1.equals(p1));\n    }\n}",
        "package_metric": 3.28,
        "class_metric": 50.0,
        "method_metric": 100.0,
        "pitest": 25.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"A\", 1);\n        assertTrue(pair1.equals(pair2));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 21.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<>(1, \"one\");\n        Pair<Integer, String> pair2 = new Pair<>(1, \"one\");\n        assertEquals(pair1, pair2);\n    }\n    \n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 21.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n     @Test\n        public void equalsTest() {\n            Pair<String, Integer> p1 = Pair.create(\"A\", 1);\n            Pair<String, Integer> p2 = Pair.create(\"A\", 1);\n            Pair<String, Integer> p3 = Pair.create(\"B\", 2);\n    \n            assertTrue(p1.equals(p2));\n            assertFalse(p1.equals(p3));\n        }\n}",
        "package_metric": 3.01,
        "class_metric": 45.83,
        "method_metric": 75.0,
        "pitest": 33.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> p1 = new Pair<>(1, \"one\");\n        Pair<Integer, String> p2 = new Pair<>(1, \"one\");\n        Pair<Integer, String> p3 = new Pair<>(2, \"two\");\n        \n        assertTrue(p1.equals(p2));\n        assertFalse(p1.equals(p3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair3 = new Pair<>(\"B\", 2);\n        \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n     @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair3 = new Pair<>(\"B\", 2);\n    \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, String> pair1 = new Pair<>(\"key\", \"value\");\n        Pair<String, String> pair2 = new Pair<>(\"key\", \"value\");\n        assertEquals(pair1, pair2);\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 21.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n        public void equalsTest() {\n            Pair<Integer, String> pair1 = new Pair<>(1, \"apple\");\n            Pair<Integer, String> pair2 = new Pair<>(1, \"apple\");\n            Pair<Integer, String> pair3 = new Pair<>(2, \"orange\");\n            \n            assertEquals(pair1, pair2);\n            assertNotEquals(pair1, pair3);\n        }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"A\", 1);\n        assertEquals(pair1, pair2);\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 21.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"A\", 1);\n        assertTrue(pair1.equals(pair2));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 21.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<String, Integer> pair1 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair3 = new Pair<>(\"B\", 2);\n        \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<>(1, \"A\");\n        Pair<Integer, String> pair2 = new Pair<>(1, \"A\");\n        Pair<Integer, String> pair3 = new Pair<>(2, \"B\");\n        \n        assertTrue(pair1.equals(pair2));\n        assertFalse(pair1.equals(pair3));\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "equals",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<>(1, \"Hello\");\n        Pair<Integer, String> pair2 = new Pair<>(1, \"Hello\");\n        Pair<Integer, String> pair3 = new Pair<>(2, \"World\");\n    \n        assertTrue(pair1.equals(pair2)); // Testing equality of pair1 and pair2\n        assertFalse(pair1.equals(pair3)); // Testing inequality of pair1 and pair3\n    }\n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 75.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowexp",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowexpTest() {\n        double x = 2.0; // Example input value\n        double[] result = new double[2]; // Placeholder for the result\n        double expectedResult = Math.exp(x); // Expected result using standard library\n    \n        double actualResult = AccurateMathCalc.slowexp(x, result); // Actual result using the slowexp method\n    \n        // Verify that the actual result matches the expected result within a small delta\n        assertEquals(expectedResult, actualResult, 0.0001);\n    }\n}",
        "package_metric": 2.65,
        "class_metric": 19.86,
        "method_metric": 100.0,
        "pitest": 12.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowexp",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowexpTest() {\n        double x = 2.0;\n        double[] result = new double[2];\n        double expected = Math.exp(x);\n        double actual = AccurateMathCalc.slowexp(x, result);\n        assertEquals(expected, actual, 0.0001);\n        assertEquals(expected, result[0] + result[1], 0.0001);\n    }\n    \n}",
        "package_metric": 2.65,
        "class_metric": 19.86,
        "method_metric": 100.0,
        "pitest": 12.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowexp",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowexpTest() {\n        double[] result = new double[2];\n        double x = 2.0; // example input\n        double expected = Math.exp(x);\n        \n        // Call the slowexp method\n        double actual = AccurateMathCalc.slowexp(x, result);\n        \n        // Check if the actual result matches the expected result\n        assertEquals(expected, actual, 0.0001);\n    }\n}",
        "package_metric": 2.65,
        "class_metric": 19.86,
        "method_metric": 100.0,
        "pitest": 12.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowexp",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowexpTest() {\n        double x = 4.0;\n        final double[] result = new double[2];\n        double expected = Math.exp(x);\n        double actual = AccurateMathCalc.slowexp(x, result);\n        assertEquals(expected, actual, 0.001);\n    }\n}",
        "package_metric": 2.65,
        "class_metric": 19.86,
        "method_metric": 100.0,
        "pitest": 12.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowexp",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowexpTest() {\n        double x = 2.0;\n        double[] result = new double[2];\n        double expected = Math.exp(x);\n        double actual = AccurateMathCalc.slowexp(x, result);\n        assertEquals(expected, actual, 0.0001);\n    }\n}",
        "package_metric": 2.65,
        "class_metric": 19.86,
        "method_metric": 100.0,
        "pitest": 12.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowexp",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n        public void slowexpTest() {\n            double x = 2.0;\n            double[] result = new double[2];\n            double expectedResult = Math.exp(x);\n    \n            // Call the method to be tested\n            double actualResult = AccurateMathCalc.slowexp(x, result);\n    \n            assertEquals(expectedResult, actualResult, 0.0001);\n        }\n}",
        "package_metric": 2.65,
        "class_metric": 19.86,
        "method_metric": 100.0,
        "pitest": 12.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowexp",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowexpTest() {\n        double x = 5.0;\n        double[] result = new double[2];\n        double actualResult = AccurateMathCalc.slowexp(x, result);\n        // add assertions here to check against expected values\n        // for example:\n        // assertEquals(expectedValue, actualResult);\n    }\n}",
        "package_metric": 2.65,
        "class_metric": 19.86,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowexp",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowexpTest() {\n        double x = 2.0;\n        double[] result = new double[2];\n        AccurateMathCalc.slowexp(x, result);\n        double expected = Math.exp(x);\n        double actual = result[0] + result[1];\n        assertEquals(expected, actual, 0.0001);\n    }\n}",
        "package_metric": 2.65,
        "class_metric": 19.86,
        "method_metric": 100.0,
        "pitest": 12.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        \n                Pair<String, Integer> pair = new Pair<>(\"test\", 5);\n                int expected = (pair.getFirst() == null ? 0 : pair.getFirst().hashCode());\n                final int h = (pair.getSecond() == null ? 0 : pair.getSecond().hashCode());\n                expected = 37 * expected + h ^ (h >>> 16);\n                int result = pair.hashCode();\n                assertEquals(expected, result);\n            \n    }\n    \n}",
        "package_metric": 2.73,
        "class_metric": 41.67,
        "method_metric": 100.0,
        "pitest": 38.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"test\", 100);\n        int expectedHashCode = pair.hashCode();\n        assertEquals(expectedHashCode, pair.hashCode());\n    }\n}",
        "package_metric": 2.19,
        "class_metric": 33.33,
        "method_metric": 100.0,
        "pitest": 0.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"test\", 5);\n        int expectedHashCode = pair.hashCode();\n        int actualHashCode = 37 * \"test\".hashCode() + 5 ^ (5 >>> 16);\n        assertEquals(expectedHashCode, actualHashCode);\n    }\n}",
        "package_metric": 2.19,
        "class_metric": 33.33,
        "method_metric": 100.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"test\", 5);\n        int expected = 37 * pair.getKey().hashCode() + pair.getValue().hashCode();\n        int result = pair.hashCode();\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 3.28,
        "class_metric": 50.0,
        "method_metric": 100.0,
        "pitest": 46.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"test\", 123);\n        int expected = pair.hashCode();\n        int actual = 37 * \"test\".hashCode() + 123 ^ (123 >>> 16);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.19,
        "class_metric": 33.33,
        "method_metric": 100.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"key\", 123);\n        int expectedHashCode = pair.hashCode();\n    \n        assertEquals(expectedHashCode, pair.hashCode());\n    }\n}",
        "package_metric": 2.19,
        "class_metric": 33.33,
        "method_metric": 100.0,
        "pitest": 0.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"key\", 5);\n        assertEquals(pair.hashCode(), pair.hashCode());\n    }\n}",
        "package_metric": 2.19,
        "class_metric": 33.33,
        "method_metric": 100.0,
        "pitest": 0.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n        public void hashCodeTest() {\n            Pair<String, Integer> pair = new Pair<>(\"key\", 123);\n            int expected = pair.hashCode();\n            assertEquals(expected, pair.hashCode());\n        }\n}",
        "package_metric": 2.19,
        "class_metric": 33.33,
        "method_metric": 100.0,
        "pitest": 0.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"test\", 123);\n        int expectedHashCode = (pair.getKey() == null ? 0 : pair.getKey().hashCode()) * 37 +\n                (pair.getValue() == null ? 0 : pair.getValue().hashCode());\n        int result = pair.hashCode();\n        assertEquals(expectedHashCode, result);\n    }\n}",
        "package_metric": 3.28,
        "class_metric": 50.0,
        "method_metric": 100.0,
        "pitest": 46.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        String key = \"testKey\";\n        String value = \"testValue\";\n        Pair pair = new Pair(key, value);\n        \n        int expectedResult = 37 * (key == null ? 0 : key.hashCode()) + \n                            (value == null ? 0 : value.hashCode()) ^ \n                            ((value == null ? 0 : value.hashCode()) >>> 16);\n        \n        assertEquals(expectedResult, pair.hashCode());\n    }\n}",
        "package_metric": 2.19,
        "class_metric": 33.33,
        "method_metric": 100.0,
        "pitest": 29.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core",
        "package_name": "org.apache.commons.math4.legacy.core",
        "class_name": "Pair",
        "method_name": "hashCode",
        "test_code": "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"Test\", 5);\n        int expectedHashCode = 37 * (pair.getKey() == null ? 0 : pair.getKey().hashCode()) + (pair.getValue() == null ? 0 : pair.getValue().hashCode()) ^ ((pair.getValue() == null ? 0 : pair.getValue().hashCode()) >>> 16);\n        int actualHashCode = pair.hashCode();\n        assertEquals(expectedHashCode, actualHashCode);\n    }\n}",
        "package_metric": 3.28,
        "class_metric": 50.0,
        "method_metric": 100.0,
        "pitest": 46.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double slowCosResult = AccurateMathCalc.slowCos(x, result);\n        // Add assertions here to verify the correctness of the slowCos method\n        // For example:\n        assertEquals(0.8775825618903728, slowCosResult, 1e-15);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 18.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double actual = AccurateMathCalc.slowCos(x, result);\n        double expected = Math.cos(x);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 18.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5; // example input\n        double[] result = new double[2]; // initialize result array\n        double actual = AccurateMathCalc.slowCos(x, result); // call the slowCos method\n        double expected = Math.cos(x); // compute expected result using standard library\n        assertEquals(expected, actual, 0.000001); // assert the actual result matches the expected result\n        // print out the whole test case\n        System.out.println(\"Input x: \" + x);\n        System.out.println(\"Expected Result: \" + expected);\n        System.out.println(\"Actual Result: \" + actual);\n        System.out.println(\"Result Array: {\" + result[0] + \", \" + result[1] + \"}\");\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5; // Example input for testing\n        double[] result = new double[2]; // Placeholder for storing the result in extended precision\n        double actual = AccurateMathCalc.slowCos(x, result); // Call the slowCos method with input and result placeholder\n        double expected = Math.cos(x); // The expected output using standard Math library method\n        assertEquals(expected, actual, 0.001); // Assert that the actual result matches the expected result within a tolerance\n        // Output the whole test case\n        System.out.println(\"Input x: \" + x);\n        System.out.println(\"Expected: \" + expected);\n        System.out.println(\"Actual: \" + actual);\n        System.out.println(\"Extended Precision Result: \" + result[0] + \" + \" + result[1]);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double actual = AccurateMathCalc.slowCos(x, result);\n        double expected = Math.cos(x);\n        double tolerance = 1e-15;\n        assertEquals(expected, actual, tolerance);\n        assertEquals(expected, result[0] + result[1], tolerance);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 19.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double expected = Math.cos(x);\n        double actual = AccurateMathCalc.slowCos(x, result);\n        assertEquals(expected, actual, 0.0001);\n        // Output the whole test case\n        System.out.println(\"Expected: \" + expected);\n        System.out.println(\"Actual: \" + actual);\n        System.out.println(\"Result[0]: \" + result[0]);\n        System.out.println(\"Result[1]: \" + result[1]);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n        @Test\n        public void slowCosTest() {\n            double x = 0.5;  // Example input for testing slowCos\n            final double delta = 1.0e-15;  // Tolerance for floating-point comparisons\n    \n            double[] result = new double[2];\n            double actual = AccurateMathCalc.slowCos(x, result);\n    \n            // Use the actual result to complete the test\n            double expected = Math.cos(x);\n            assertEquals(expected, actual, delta);\n        }\n    \n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 18.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        // Given\n        double x = 0.5;\n        double[] result = new double[2];\n        \n        // When\n        double cos = AccurateMathCalc.slowCos(x, result);\n        \n        // Then\n        assertEquals(0.8775825618903728, cos, 0.00001);\n        assertEquals(0.8775825618903728, result[0] + result[1], 0.00001);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = Math.PI / 4; // arbitrary value for x\n        double[] result = new double[2]; // placeholder for the result in extended precision\n        double expected = Math.cos(x); // expected value using standard Math.cos() function\n        \n        // Call the slowCos method\n        double actual = AccurateMathCalc.slowCos(x, result);\n        \n        // Assert expected value and actual value are equal\n        assertEquals(expected, actual);\n    }\n    \n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 20.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double actual = AccurateMathCalc.slowCos(x, result);\n        assertEquals(Math.cos(x), actual, 0.0001);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n        public void slowCosTest() {\n            double x = 0.5;\n            double[] result = new double[2];\n            double expected = Math.cos(x);\n            double actual = AccurateMathCalc.slowCos(x, result);\n            \n            assertEquals(expected, actual, 0.0001);\n        }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double expected = Math.cos(x);\n        double actual = AccurateMathCalc.slowCos(x, result);\n        assertEquals(expected, actual, 0.0001);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double[] result = new double[2];\n        double x = 0.5;\n        double actual = AccurateMathCalc.slowCos(x, result);\n        double expected = Math.cos(x);\n        assertEquals(expected, actual);\n        assertEquals(expected, result[0] + result[1]);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 19.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n        public void slowCosTest() {\n            double x = 0.5;\n            double[] result = new double[2];\n            double actual = AccurateMathCalc.slowCos(x, result);\n            double expected = Math.cos(x);\n            assertEquals(expected, actual, 0.0001);\n        }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    \n    @Test\n    public void slowCosTest() {\n        double x = 1.0;\n        double[] result = new double[2];\n        double actual = AccurateMathCalc.slowCos(x, result);\n        double expected = Math.cos(x);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 19.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = Math.PI / 4;\n        double[] result = new double[2];\n        double actual = AccurateMathCalc.slowCos(x, result);\n        double expected = Math.cos(x);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 20.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double expected = Math.cos(x);\n        double actual = AccurateMathCalc.slowCos(x, result);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 18.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double output = AccurateMathCalc.slowCos(x, result);\n        assertEquals(output, Math.cos(x));\n        assertEquals(result[0] + result[1], Math.cos(x), 0.0001);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 19.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double actual = AccurateMathCalc.slowCos(x, result);\n        double expected = Math.cos(x);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 18.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double[] result = new double[2];\n        double x = 0.5;\n        assertEquals(Math.cos(x), AccurateMathCalc.slowCos(x, result));\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 18.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double actual = AccurateMathCalc.slowCos(x, result);\n        double expected = Math.cos(x);\n        assertEquals(expected, actual, 0.0001);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double x = 0.5;\n        double[] result = new double[2];\n        double actual = AccurateMathCalc.slowCos(x, result);\n        double expected = Math.cos(x);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 18.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "slowCos",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void slowCosTest() {\n        double[] result = new double[2];\n        double x = 1.0;\n        double output = AccurateMathCalc.slowCos(x, result);\n        assertEquals(0.5403023058681398, output, 1e-15);\n    }\n}",
        "package_metric": 2.84,
        "class_metric": 21.3,
        "method_metric": 100.0,
        "pitest": 18.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "splitReciprocal",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void splitReciprocalTest() {\n        double[] input = {1.0, 2.0};\n        double[] expectedResult = new double[2];\n    \n        AccurateMathCalc.splitReciprocal(input, expectedResult);\n    \n        double[] actualResult = new double[2];\n        AccurateMathCalc.splitReciprocal(input, actualResult);\n    \n        assertArrayEquals(expectedResult, actualResult);\n    }\n}",
        "package_metric": 1.06,
        "class_metric": 7.94,
        "method_metric": 80.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-neuralnet/src/test/java/org/apache/commons/math4/neuralnet",
        "package_name": "org.apache.commons.math4.neuralnet",
        "class_name": "Neuron",
        "method_name": "containSameValues",
        "test_code": "package org.apache.commons.math4.neuralnet;\n\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\n\n\n\nimport org.apache.commons.numbers.core.Precision;\n\n\nimport java.util.concurrent.atomic.AtomicLong;\n\n\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NeuronTest {\n    @Test\n    public void containSameValuesTest() {\n        double[] current = new double[] {1.0, 2.0, 3.0};\n        double[] expect = new double[] {1.0, 2.0, 3.0};\n        Neuron neuron = new Neuron(1, current);\n        boolean result = neuron.compareAndSetFeatures(expect, current);\n        assertTrue(result);\n    }\n}",
        "package_metric": 8.53,
        "class_metric": 51.43,
        "method_metric": 57.14,
        "pitest": 43.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        double[][] testArray = new double[][]{\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0}\n        };\n        assertDoesNotThrow(() -> AccurateMathCalc.printarray(System.out, \"testArray\", 2, testArray));\n    }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        double[][] array2d = {{1.0, 2.0}, {3.0, 4.0}}; // example array data\n        assertDoesNotThrow(() -> AccurateMathCalc.printarray(System.out, \"Array2D\", 2, array2d));\n    }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        double[][] array = {{1.0, 2.0}, {3.0, 4.0}};\n        assertDoesNotThrow(() -> AccurateMathCalc.printarray(System.out, \"testArray\", 2, array));\n    }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        PrintStream out = System.out;\n        String name = \"testArray\";\n        int expectedLen = 2;\n        double[][] array2d = {{1.1, 2.2}, {3.3, 4.4}};\n    \n        AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n    }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n       double[][] array2d = {{1.0, 2.0}, {3.0, 4.0}};\n       PrintStream out = new PrintStream(System.out);\n       String name = \"testArray\";\n       int expectedLen = 2;\n       AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n    }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n        public void printarrayTest() {\n            double[][] array2d = {{1.0, 2.5, 3.2}, {4.7, 5.6, 6.0}};\n            PrintStream out = System.out;\n            String name = \"TestArray\";\n            int expectedLen = 2;\n            AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n        }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        double[][] array2d = {{1.0, 2.0}, {3.0, 4.0}};\n        AccurateMathCalc.printarray(System.out, \"Test Array\", 2, array2d);\n    }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        PrintStream out = System.out;\n        String name = \"Array\";\n        int expectedLen = 3;\n        double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}};\n        AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n    }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        double[][] testArray = {{1.1, 2.2, 3.3}, {4.4, 5.5, 6.6}};\n        PrintStream out = System.out;\n        String name = \"Test Array\";\n        int expectedLen = 2;\n        AccurateMathCalc.printarray(out, name, expectedLen, testArray);\n    }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};\n        AccurateMathCalc.printarray(System.out, \"Test Array\", 2, array2d);\n    }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-math",
        "file_path": "/home/joseph/java_project/commons-math/commons-math-core/src/test/java/org/apache/commons/math4/core/jdkmath",
        "package_name": "org.apache.commons.math4.core.jdkmath",
        "class_name": "AccurateMathCalc",
        "method_name": "printarray",
        "test_code": "package org.apache.commons.math4.core.jdkmath;\n\n\nimport java.io.PrintStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        PrintStream out = System.out;\n        String name = \"Test Name\";\n        int expectedLen = 2;\n        double[][] array2d = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n    }\n}",
        "package_metric": 0.82,
        "class_metric": 6.14,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] arr = {4, 2, 3, 1};\n        Integer[] sortedArr = quickSort.sort(arr);\n        Integer[] expectedArr = {1, 2, 3, 4};\n        assertArrayEquals(expectedArr, sortedArr);\n    }\n}",
        "package_metric": 2.09,
        "class_metric": 95.65,
        "method_metric": 100.0,
        "pitest": 71.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] input = {4, 2, 9, 6, 23, 12, 34, 0, 1};\n        Integer[] expected = {0, 1, 2, 4, 6, 9, 12, 23, 34};\n        QuickSort quickSort = new QuickSort();\n        quickSort.sort(input);\n        assertArrayEquals(expected, input);\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 82.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] arr = new Integer[] {64, 34, 25, 12, 22, 11, 90};\n        quickSort.sort(arr);\n        assertArrayEquals(new Integer[] {11, 12, 22, 25, 34, 64, 90}, arr);\n    }\n    \n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 82.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] arr = {64, 34, 25, 12, 22, 11, 90};\n        Integer[] expected = {11, 12, 22, 25, 34, 64, 90};\n        assertArrayEquals(expected, quickSort.sort(arr));\n    }\n    \n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 82.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] arr = new Integer[]{5, 3, 2, 7, 1, -1, 0};\n        Integer[] sortedArray = quickSort.sort(arr);\n        assertArrayEquals(new Integer[]{-1, 0, 1, 2, 3, 5, 7}, sortedArray);\n    }\n    \n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 82.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] input = {2, 5, 3, 1, 4};\n        QuickSort quickSort = new QuickSort();\n        Integer[] expected = {1, 2, 3, 4, 5};\n        assertArrayEquals(expected, quickSort.sort(input));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 75.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort= new QuickSort();\n        Integer[] unsorted= {3, 56, 2, 96, 5};\n        Integer[] expectedResult = {2, 3, 5, 56, 96};\n        Integer[] result = quickSort.sort(unsorted);\n        assertArrayEquals(expectedResult, result);\n    }\n}",
        "package_metric": 2.09,
        "class_metric": 95.65,
        "method_metric": 100.0,
        "pitest": 79.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort=new QuickSort();\n        Integer[] arr={4,3,1,5};\n        Integer[] expected={1,3,4,5};\n        quickSort.sort(arr);\n        assertArrayEquals(expected, arr);\n    }\n}",
        "package_metric": 2.09,
        "class_metric": 95.65,
        "method_metric": 100.0,
        "pitest": 75.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n            QuickSort quickSort = new QuickSort();\n            Integer[] input = {9, 7, 5, 11, 12, 2, 14, 3, 10, 6};\n            Integer[] expected = {2, 3, 5, 6, 7, 9, 10, 11, 12, 14};\n            assertArrayEquals(expected, quickSort.sort(input));\n    }\n    \n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 89.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] array = {4, 2, 1, 5, 3};\n        Integer[] sorted = quickSort.sort(array);\n        assertArrayEquals(new Integer[]{1, 2, 3, 4, 5}, sorted);\n    }\n    \n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 75.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n     @Test\n        public void sortTest() {\n            QuickSort sorter = new QuickSort();\n            Integer[] input = {4, 2, 9, 6, 23, 12, 34, 0, 1};\n            Integer[] expected = {0, 1, 2, 4, 6, 9, 12, 23, 34};\n            assertArrayEquals(expected, sorter.sort(input));\n        }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    \n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] input = {3, 6, 8, 1, 2, 4, 7, 5};\n        Integer[] expectedOutput = {1, 2, 3, 4, 5, 6, 7, 8};\n        assertArrayEquals(expectedOutput, quickSort.sort(input));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 82.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] array = {5, 2, 8, 4, 7, 1, 3, 6};\n        Integer[] expected = {1, 2, 3, 4, 5, 6, 7, 8};\n        assertArrayEquals(expected, quickSort.sort(array));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 89.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] unsortedArray = {9, 4, 7, 1, -2, 6, 5};\n        Integer[] expectedArray = {-2, 1, 4, 5, 6, 7, 9};\n        Integer[] sortedArray = quickSort.sort(unsortedArray);\n        assertArrayEquals(expectedArray, sortedArray);\n    }\n}",
        "package_metric": 2.09,
        "class_metric": 95.65,
        "method_metric": 100.0,
        "pitest": 89.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] array = {5, 2, 9, 1, 5};\n        Integer[] expected = {1, 2, 5, 5, 9};\n        assertArrayEquals(expected, quickSort.sort(array));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 75.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] array = {5, 3, 8, 6, 2, 7, 1, 4};\n        Integer[] expected = {1, 2, 3, 4, 5, 6, 7, 8};\n        assertArrayEquals(expected, quickSort.sort(array));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] unsortedArray = {5, 3, 8, 6, 2, 7, 1, 4};\n        Integer[] sortedArray = {1, 2, 3, 4, 5, 6, 7, 8};\n        assertArrayEquals(sortedArray, quickSort.sort(unsortedArray));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] inputArray = {9, 7, 5, 11, 12, 2, 14, 3, 10, 6};\n        Integer[] expectedArray = {2, 3, 5, 6, 7, 9, 10, 11, 12, 14};\n        assertArrayEquals(expectedArray, quickSort.sort(inputArray));\n    }\n    \n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 89.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] input = {5, 3, 8, 6, 2, 7, 1, 4};\n        Integer[] expected = {1, 2, 3, 4, 5, 6, 7, 8};\n        assertArrayEquals(expected, quickSort.sort(input));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] array = {5, 3, 1, 2, 4};\n        Integer[] expected = {1, 2, 3, 4, 5};\n        assertArrayEquals(expected, quickSort.sort(array));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    \n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] inputArray = {5, 3, 8, 4, 1, 2};\n        Integer[] expectedOutput = {1, 2, 3, 4, 5, 8};\n        assertArrayEquals(expectedOutput, quickSort.sort(inputArray));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 82.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] array = {5, 3, 8, 6, 2, 7, 1, 4};\n        QuickSort quickSort = new QuickSort();\n        Integer[] sortedArray = quickSort.sort(array);\n        Integer[] expected = {1, 2, 3, 4, 5, 6, 7, 8};\n        assertArrayEquals(expected, sortedArray);\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] testArray = {5, 2, 9, 1, 5, 6};\n        Integer[] expected = {1, 2, 5, 5, 6, 9};\n        assertArrayEquals(expected, quickSort.sort(testArray));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n      QuickSort quickSort = new QuickSort();\n      Integer[] inputArray = {4, 2, 5, 3, 1};\n      Integer[] expected = {1, 2, 3, 4, 5};\n      assertArrayEquals(expected, quickSort.sort(inputArray));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] inputArray = {4, 2, 6, 1, 5, 3};\n        Integer[] expectedOutput = {1, 2, 3, 4, 5, 6};\n        Integer[] actualOutput = quickSort.sort(inputArray);\n        assertArrayEquals(expectedOutput, actualOutput);\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] inputArray = {3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5};\n        QuickSort quickSort = new QuickSort();\n        Integer[] sortedArray = quickSort.sort(inputArray);\n        Integer[] expectedArray = {1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 9};\n        assertArrayEquals(expectedArray, sortedArray);\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 89.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] inputArray = {5, 3, 8, 2, 9, 1};\n        Integer[] expectedArray = {1, 2, 3, 5, 8, 9};\n        assertArrayEquals(expectedArray, quickSort.sort(inputArray));\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 82.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "QuickSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] inputArray = {5, 2, 7, 3, 9, 1};\n        QuickSort quickSort = new QuickSort();\n        quickSort.sort(inputArray);\n        Integer[] expectedArray = {1, 2, 3, 5, 7, 9};\n        assertArrayEquals(expectedArray, inputArray);\n    }\n}",
        "package_metric": 2.17,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 79.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n        public void sortTest() {\n            Integer[] unsorted = {12, 11, 13, 5, 6, 7};\n            HeapSort heapSort = new HeapSort();\n            heapSort.sort(unsorted);\n            Integer[] expected = {5, 6, 7, 11, 12, 13};\n            assertArrayEquals(expected, unsorted);\n        }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        HeapSort heapSort = new HeapSort();\n        Integer[] unsorted = {12, 11, 13, 5, 6, 7};\n        Integer[] sorted = heapSort.sort(unsorted);\n        Integer[] expected = {5, 6, 7, 11, 12, 13};\n        assertArrayEquals(expected, sorted);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] input = {4, 2, 9, 6, 23, 12, 34, 0, 1};\n        HeapSort heapSort = new HeapSort();\n        Integer[] expected = {0, 1, 2, 4, 6, 9, 12, 23, 34};\n        assertArrayEquals(expected, heapSort.sort(input));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] input = {4, 2, 9, 10, 1, 5};\n        HeapSort heapSort = new HeapSort();\n        Integer[] expected = {1, 2, 4, 5, 9, 10};\n        assertArrayEquals(expected, heapSort.sort(input));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {4, 7, 1, 9, 3, 5};\n        Integer[] expected = {1, 3, 4, 5, 7, 9};\n        HeapSort heapSort = new HeapSort();\n        Integer[] actual = heapSort.sort(unsorted);\n        assertArrayEquals(expected, actual);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] arr = {12, 4, 5, 7, 3, 1, 6};\n        HeapSort heapSort = new HeapSort();\n        heapSort.sort(arr);\n        assertArrayEquals(new Integer[]{1, 3, 4, 5, 6, 7, 12}, arr);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 84.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {12, 11, 13, 5, 6, 7};\n        Integer[] sorted = {5, 6, 7, 11, 12, 13};\n        assertArrayEquals(sorted, new HeapSort().sort(unsorted));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        HeapSort heapSort = new HeapSort();\n        Integer[] unsortedArray = {4, 2, 7, 1, 9, 5};\n        Integer[] sortedArray = heapSort.sort(unsortedArray);\n        Integer[] expectedArray = {1, 2, 4, 5, 7, 9};\n        assertArrayEquals(expectedArray, sortedArray);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        // Given\n        Integer[] unsorted = new Integer[]{4, 2, 0, 5, 3, 1};\n        \n        // When\n        HeapSort heapSort = new HeapSort();\n        Integer[] sorted = heapSort.sort(unsorted);\n        \n        // Then\n        Integer[] expected = new Integer[]{0, 1, 2, 3, 4, 5};\n        assertArrayEquals(expected, sorted);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 84.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] inputArray = {4, 3, 1, 5, 2};\n        Integer[] expectedOutput = {1, 2, 3, 4, 5};\n        HeapSort heapSort = new HeapSort();\n        assertArrayEquals(expectedOutput, heapSort.sort(inputArray));\n    }\n}",
        "package_metric": 1.86,
        "class_metric": 96.0,
        "method_metric": 100.0,
        "pitest": 84.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        HeapSort heapSort = new HeapSort();\n        Integer[] unsorted = {3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5};\n        Integer[] expected = {1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 9};\n    \n        assertArrayEquals(expected, heapSort.sort(unsorted));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n            HeapSort heapSort = new HeapSort();\n            Integer[] unsorted = {4, 2, 9, 6, 23, 12, 34, 0, 1};\n            Integer[] sorted = heapSort.sort(unsorted);\n            Integer[] expected = {0, 1, 2, 4, 6, 9, 12, 23, 34};\n            assertArrayEquals(expected, sorted);\n        }\n    \n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] arr = {9, 5, 7, 6, 1, 2};\n        HeapSort heapSort = new HeapSort();\n        Integer[] sortedArr = heapSort.sort(arr);\n        Integer[] expected = {1, 2, 5, 6, 7, 9};\n        assertArrayEquals(expected, sortedArr);\n    }\n    \n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 84.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        HeapSort heapSort = new HeapSort();\n        Integer[] unsorted = {6, 3, 8, 4, 1};\n        Integer[] expected = {1, 3, 4, 6, 8};\n        assertArrayEquals(expected, heapSort.sort(unsorted));\n    }\n}",
        "package_metric": 1.86,
        "class_metric": 96.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {9, 5, 1, 7, 3, 8, 4, 2, 6};\n        Integer[] expected = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n        assertArrayEquals(expected, new HeapSort().sort(unsorted));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] input = {5, 3, 8, 6, 2};\n        Integer[] expected = {2, 3, 5, 6, 8};\n        HeapSort heapSort = new HeapSort();\n        Integer[] result = heapSort.sort(input);\n        assertArrayEquals(expected, result);\n    }\n}",
        "package_metric": 1.86,
        "class_metric": 96.0,
        "method_metric": 100.0,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {3, 7, 2, 8, 1, 9};\n        Integer[] expected = {1, 2, 3, 7, 8, 9};\n        assertArrayEquals(expected, new HeapSort().sort(unsorted));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {4, 2, 6, 1, 7};\n        HeapSort hs = new HeapSort();\n        Integer[] sorted = hs.sort(unsorted);\n        Integer[] expected = {1, 2, 4, 6, 7};\n        assertArrayEquals(expected, sorted);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    \n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {4, 2, 6, 1, 5, 3};\n        Integer[] sorted = {1, 2, 3, 4, 5, 6};\n        HeapSort heapSort = new HeapSort();\n        assertArrayEquals(sorted, heapSort.sort(unsorted));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] input = { 5, 3, 8, 7, 1, 2, 4, 6 };\n        Integer[] expected = { 1, 2, 3, 4, 5, 6, 7, 8 };\n        assertArrayEquals(expected, new HeapSort().sort(input));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {5, 3, 8, 2, 7, 1};\n        Integer[] expected = {1, 2, 3, 5, 7, 8};\n        HeapSort heapSort = new HeapSort();\n        Integer[] sorted = heapSort.sort(unsorted);\n        assertArrayEquals(expected, sorted);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {3, 7, 1, 5, 4, 6, 2};\n        Integer[] expected = {1, 2, 3, 4, 5, 6, 7};\n        HeapSort heapSort = new HeapSort();\n        assertArrayEquals(expected, heapSort.sort(unsorted));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        HeapSort heapSort = new HeapSort();\n        Integer[] unsorted = {4, 2, 7, 3, 1, 5, 6};\n        Integer[] expected = {1, 2, 3, 4, 5, 6, 7};\n        assertArrayEquals(expected, heapSort.sort(unsorted));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {4, 2, 9, 6, 23, 12, 34, 0, 1};\n        Integer[] expected = {0, 1, 2, 4, 6, 9, 12, 23, 34};\n        HeapSort heapSort = new HeapSort();\n        assertArrayEquals(expected, heapSort.sort(unsorted));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        HeapSort heapSort = new HeapSort();\n        Integer[] unsorted = {12, 11, 13, 5, 6, 7};\n        Integer[] expected = {5, 6, 7, 11, 12, 13};\n        Integer[] result = heapSort.sort(unsorted);\n        assertArrayEquals(expected, result);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/sorts",
        "package_name": "com.thealgorithms.sorts",
        "class_name": "HeapSort",
        "method_name": "sort",
        "test_code": "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {4, 2, 9, 6, 23, 12, 34, 0, 1};\n        Integer[] expected = {0, 1, 2, 4, 6, 9, 12, 23, 34};\n        HeapSort heapSort = new HeapSort();\n        assertArrayEquals(expected, heapSort.sort(unsorted));\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 91.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<Integer> list = new CursorLinkedList<>();\n        list.append(10);\n        list.append(20);\n        list.append(30);\n        int index = list.indexOf(20);\n        assertEquals(1, index);\n    }\n    \n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<Integer> list = new CursorLinkedList<>();\n        list.append(5);\n        list.append(10);\n        list.append(15);\n        int actualIndex = list.indexOf(10);\n        assertEquals(1, actualIndex);\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<String> cursorLinkedList = new CursorLinkedList<>();\n        cursorLinkedList.append(\"Apple\");\n        cursorLinkedList.append(\"Banana\");\n        cursorLinkedList.append(\"Cherry\");\n        \n        assertEquals(0, cursorLinkedList.indexOf(\"Apple\"));\n        assertEquals(1, cursorLinkedList.indexOf(\"Banana\"));\n        assertEquals(2, cursorLinkedList.indexOf(\"Cherry\"));\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<Integer> list = new CursorLinkedList<>();\n        list.append(1);\n        list.append(2);\n        list.append(3);\n        int index = list.indexOf(2);\n        assertEquals(1, index);\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<Integer> list = new CursorLinkedList<>();\n        list.append(10);\n        list.append(20);\n        list.append(30);\n        \n        assertEquals(2, list.indexOf(30));\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<String> list = new CursorLinkedList<>();\n        list.append(\"first\");\n        list.append(\"second\");\n        list.append(\"third\");\n        \n        int index = list.indexOf(\"second\");\n        assertEquals(1, index);\n    }\n    \n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<Integer> list = new CursorLinkedList<>();\n        list.append(10);\n        list.append(20);\n        list.append(30);\n        assertEquals(0, list.indexOf(10));\n        assertEquals(1, list.indexOf(20));\n        assertEquals(2, list.indexOf(30));\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<Integer> list = new CursorLinkedList<>();\n        list.append(5);\n        list.append(10);\n        list.append(15);\n        assertEquals(1, list.indexOf(10));\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<Integer> list = new CursorLinkedList<>();\n        list.append(1);\n        list.append(2);\n        list.append(3);\n        assertEquals(1, list.indexOf(2));\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList cursorLinkedList = new CursorLinkedList();\n        cursorLinkedList.append(10);\n        cursorLinkedList.append(20);\n        cursorLinkedList.append(30);\n        assertEquals(1, cursorLinkedList.indexOf(20));\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<String> list = new CursorLinkedList<>();\n        list.append(\"a\");\n        list.append(\"b\");\n        list.append(\"c\");\n        int index = list.indexOf(\"b\");\n        assertEquals(1, index);\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList cursorLinkedList = new CursorLinkedList();\n        cursorLinkedList.append(5);\n        cursorLinkedList.append(10);\n        cursorLinkedList.append(15);\n        cursorLinkedList.append(20);\n        assertEquals(2, cursorLinkedList.indexOf(15));\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<Integer> list = new CursorLinkedList<>();\n        list.append(10);\n        list.append(20);\n        list.append(30);\n        assertEquals(1, list.indexOf(20));\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "CursorLinkedList",
        "method_name": "indexOf",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\n\nimport java.util.Objects;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CursorLinkedListTest {\n    @Test\n    public void indexOfTest() {\n        CursorLinkedList<String> list = new CursorLinkedList<>();\n        list.append(\"A\");\n        list.append(\"B\");\n        list.append(\"C\");\n        assertEquals(1, list.indexOf(\"B\"));\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 39.02,
        "method_metric": 85.71,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/backtracking",
        "package_name": "com.thealgorithms.backtracking",
        "class_name": "ArrayCombination",
        "method_name": "combination",
        "test_code": "package com.thealgorithms.backtracking;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArrayCombinationTest {\n    @Test\n    public void combinationTest() {\n        int n = 5;\n        int k = 2;\n        assertNotNull(ArrayCombination.combination(n, k));\n    }\n}",
        "package_metric": 7.64,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 63.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "TwinPrime",
        "method_name": "getTwinPrime",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TwinPrimeTest {\n    @Test\n    public void getTwinPrimeTest() {\n        assertEquals(19, TwinPrime.getTwinPrime(17));\n        assertEquals(-1, TwinPrime.getTwinPrime(19));\n    }\n}",
        "package_metric": 0.55,
        "class_metric": 75.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "TwinPrime",
        "method_name": "getTwinPrime",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TwinPrimeTest {\n    @Test\n        public void getTwinPrimeTest() {\n            int result = TwinPrime.getTwinPrime(3);\n            assertEquals(5, result);\n        }\n}",
        "package_metric": 0.37,
        "class_metric": 50.0,
        "method_metric": 66.67,
        "pitest": 83.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "TwinPrime",
        "method_name": "getTwinPrime",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TwinPrimeTest {\n    @Test\n        public void getTwinPrimeTest() {\n            int result = TwinPrime.getTwinPrime(3);\n            assertEquals(5, result);\n        }\n}",
        "package_metric": 0.37,
        "class_metric": 50.0,
        "method_metric": 66.67,
        "pitest": 83.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"5A0\", OctalToHexadecimal.decimalToHex(1440));\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        int decimal = 26;\n        String expectedResult = \"1A\";\n        String actualResult = OctalToHexadecimal.decimalToHex(decimal);\n        assertEquals(expectedResult, actualResult);\n    }\n    \n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        // Testing for positive decimal number\n        assertEquals(\"1A\", OctalToHexadecimal.decimalToHex(26));\n        // Testing for 0 decimal number\n        assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n        // Testing for negative decimal number\n        assertEquals(\"0\", OctalToHexadecimal.decimalToHex(-10));\n    }\n}",
        "package_metric": 2.12,
        "class_metric": 38.46,
        "method_metric": 100.0,
        "pitest": 44.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"1A\", OctalToHexadecimal.decimalToHex(26));\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        // Given\n        int inputDecimal = 123;\n        \n        // When\n        String actualHex = OctalToHexadecimal.decimalToHex(inputDecimal);\n        \n        // Then\n        String expectedHex = \"7B\";\n        assertEquals(expectedHex, actualHex);\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        // Test case 1: when input is 0\n        assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n        \n        // Test case 2: when input is a positive decimal number\n        assertEquals(\"1F\", OctalToHexadecimal.decimalToHex(31));\n    }\n}",
        "package_metric": 2.12,
        "class_metric": 38.46,
        "method_metric": 100.0,
        "pitest": 44.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"1A\", OctalToHexadecimal.decimalToHex(26));\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"1A\", OctalToHexadecimal.decimalToHex(26));\n    }\n    \n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"5A\", OctalToHexadecimal.decimalToHex(90));\n        assertEquals(\"1B\", OctalToHexadecimal.decimalToHex(27));\n        assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n    }\n}",
        "package_metric": 2.12,
        "class_metric": 38.46,
        "method_metric": 100.0,
        "pitest": 44.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"7F\", OctalToHexadecimal.decimalToHex(127));\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        String actual = OctalToHexadecimal.decimalToHex(15);\n        String expected = \"F\";\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        int decimal = 123;\n        String expected = \"7B\";\n        String actual = OctalToHexadecimal.decimalToHex(decimal);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        int decimal = 100;\n        String expectedHex = \"64\";\n        String actualHex = OctalToHexadecimal.decimalToHex(decimal);\n        assertEquals(expectedHex, actualHex);\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"1A\", OctalToHexadecimal.decimalToHex(26));\n        assertEquals(\"64\", OctalToHexadecimal.decimalToHex(100));\n        assertEquals(\"1F4\", OctalToHexadecimal.decimalToHex(500));\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"A\", OctalToHexadecimal.decimalToHex(10));\n        assertEquals(\"64\", OctalToHexadecimal.decimalToHex(100)); \n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        int decimal = 255;\n        String expectedValue = \"FF\";\n        String actualValue = OctalToHexadecimal.decimalToHex(decimal);\n        assertEquals(expectedValue, actualValue);\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"5A\", OctalToHexadecimal.decimalToHex(90));\n        assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n        assertEquals(\"1A7\", OctalToHexadecimal.decimalToHex(423));\n    }\n    \n}",
        "package_metric": 2.12,
        "class_metric": 38.46,
        "method_metric": 100.0,
        "pitest": 44.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "OctalToHexadecimal",
        "method_name": "decimalToHex",
        "test_code": "package com.thealgorithms.conversions;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"5A\", OctalToHexadecimal.decimalToHex(90));\n    }\n}",
        "package_metric": 1.91,
        "class_metric": 34.62,
        "method_metric": 90.0,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n        public void peekTest() {\n            StackArrayList stack = new StackArrayList();\n            stack.push(5);\n            assertEquals(5, stack.peek());\n        }\n    \n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(3);\n        assertEquals(3, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(1);\n        stack.push(2);\n        assertEquals(2, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(1);\n        stack.push(2);\n        stack.push(3);\n        assertEquals(3, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        assertEquals(5, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        assertEquals(5, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        assertThrows(EmptyStackException.class, () -> stack.peek());\n    }\n}",
        "package_metric": 3.38,
        "class_metric": 24.14,
        "method_metric": 66.67,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(10);\n        stack.push(20);\n        int expected = 20;\n        int actual = stack.peek();\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(1);\n        stack.push(2);\n        assertEquals(2, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        assertEquals(10, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        assertEquals(10, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        int result = stack.peek();\n        assertEquals(10, result);\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(10);\n        stack.push(20);\n        assertEquals(20, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        \n        assertEquals(5, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(1);\n        stack.push(2);\n        int result = stack.peek();\n        assertEquals(2, result);\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(10);\n        stack.push(20);\n        stack.push(30);\n        int result = stack.peek();\n        assertEquals(30, result);\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        assertEquals(5, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        assertEquals(10, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stackArrayList = new StackArrayList();\n        stackArrayList.push(5);\n        stackArrayList.push(10);\n        assertEquals(10, stackArrayList.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        int result = stack.peek();\n        assertEquals(10, result);\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        // Creating a new stack\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        assertEquals(10, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        // Create a new stack\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        stack.push(15);\n        \n        // Test the peek method\n        assertEquals(15, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(10);\n        stack.push(20);\n        assertEquals(20, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        assertEquals(10, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        int result = stack.peek();\n        assertEquals(10, result);\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        assertEquals(10, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(10);\n        stack.push(20);\n        assertEquals(20, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "StackArrayList",
        "method_name": "peek",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport java.util.EmptyStackException;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StackArrayListTest {\n    @Test\n    public void peekTest() {\n        StackArrayList stack = new StackArrayList();\n        stack.push(5);\n        stack.push(10);\n        assertEquals(10, stack.peek());\n    }\n}",
        "package_metric": 4.35,
        "class_metric": 31.03,
        "method_metric": 66.67,
        "pitest": 29.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        int input = 10;\n        int base = 2;\n        String expected = \"1010\";\n        String result = DecimalToAnyBase.convertToAnyBase(input, base);\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        int inp = 10;\n        int base = 2;\n        assertEquals(\"1010\", DecimalToAnyBase.convertToAnyBase(inp, base));\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        assertEquals(\"10\", DecimalToAnyBase.convertToAnyBase(2, 2));\n        assertEquals(\"1000\", DecimalToAnyBase.convertToAnyBase(8, 2));\n        assertEquals(\"101\", DecimalToAnyBase.convertToAnyBase(5, 2));\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        String expectedResult = \"10010\";\n        assertEquals(expectedResult, DecimalToAnyBase.convertToAnyBase(18, 2));\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        String result = DecimalToAnyBase.convertToAnyBase(25, 16);\n        assertEquals(\"19\", result);\n    }\n    \n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        int decInput = 100;\n        int base = 16;\n        String expected = \"64\";\n        String actual = DecimalToAnyBase.convertToAnyBase(decInput, base);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        // Given\n        int inp = 10;\n        int base = 2;\n    \n        // When\n        String result = DecimalToAnyBase.convertToAnyBase(inp, base);\n    \n        // Then\n        assertEquals(\"1010\", result);\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        int input = 15;\n        int base = 2;\n        String expected = \"1111\";\n        String actual = DecimalToAnyBase.convertToAnyBase(input, base);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        int input = 10;\n        int base = 2;\n        String expected = \"1010\";\n        String actual = DecimalToAnyBase.convertToAnyBase(input, base);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        int num = 15;\n        int base = 2;\n        String actual = DecimalToAnyBase.convertToAnyBase(num, base);\n        String expected = \"1111\";\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        String result = DecimalToAnyBase.convertToAnyBase(17, 2);\n        assertEquals(\"10001\", result);\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        int input = 15;\n        int base = 2;\n        String expected = \"1111\";\n        String actual = DecimalToAnyBase.convertToAnyBase(input, base);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        assertEquals(\"11001\", DecimalToAnyBase.convertToAnyBase(25, 2));\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n        public void convertToAnyBaseTest() {\n            assertEquals(\"1001\", DecimalToAnyBase.convertToAnyBase(9, 2));\n        }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        assertEquals(\"11001\", DecimalToAnyBase.convertToAnyBase(25, 2));\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        // Arrange\n        int inp = 10;\n        int base = 2;\n        \n        // Act\n        String result = DecimalToAnyBase.convertToAnyBase(inp, base);\n        \n        // Assert\n        assertEquals(\"1010\", result);\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        assertEquals(\"1101\", DecimalToAnyBase.convertToAnyBase(13, 2));\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        assertEquals(\"100\", DecimalToAnyBase.convertToAnyBase(4, 2));\n        assertEquals(\"11\", DecimalToAnyBase.convertToAnyBase(4, 3));\n        assertEquals(\"4\", DecimalToAnyBase.convertToAnyBase(4, 10));\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        assertEquals(\"1100100\", DecimalToAnyBase.convertToAnyBase(100, 2));\n    }\n}",
        "package_metric": 2.34,
        "class_metric": 45.83,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/conversions",
        "package_name": "com.thealgorithms.conversions",
        "class_name": "DecimalToAnyBase",
        "method_name": "convertToAnyBase",
        "test_code": "package com.thealgorithms.conversions;\n\nimport java.util.ArrayList;\n\n\nimport java.io.InputStreamReader;\n\n\n\nimport java.io.BufferedReader;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n        public void convertToAnyBaseTest() {\n            assertEquals(\"1111\", DecimalToAnyBase.convertToAnyBase(15, 2));\n            assertEquals(\"17\", DecimalToAnyBase.convertToAnyBase(15, 8));\n            assertEquals(\"F\", DecimalToAnyBase.convertToAnyBase(15, 16));\n        }\n}",
        "package_metric": 2.55,
        "class_metric": 50.0,
        "method_metric": 100.0,
        "pitest": 57.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/backtracking",
        "package_name": "com.thealgorithms.backtracking",
        "class_name": "MazeRecursion",
        "method_name": "setWay",
        "test_code": "package com.thealgorithms.backtracking;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MazeRecursionTest {\n    @Test\n        public void setWayTest() {\n            int[][] map = new int[8][7];\n            for (int i = 0; i < 7; i++) {\n                map[0][i] = 1;\n                map[7][i] = 1;\n            }\n            for (int i = 0; i < 8; i++) {\n                map[i][0] = 1;\n                map[i][6] = 1;\n            }\n            map[3][1] = 1;\n            map[3][2] = 1;\n            assertTrue(MazeRecursion.setWay(map, 1, 1));\n        }\n}",
        "package_metric": 2.87,
        "class_metric": 14.75,
        "method_metric": 60.0,
        "pitest": 8.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/backtracking",
        "package_name": "com.thealgorithms.backtracking",
        "class_name": "MazeRecursion",
        "method_name": "setWay",
        "test_code": "package com.thealgorithms.backtracking;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MazeRecursionTest {\n    @Test\n    public void setWayTest() {\n        int[][] map = {\n            {1, 1, 1, 1, 1, 1, 1},\n            {1, 0, 0, 0, 0, 0, 1},\n            {1, 1, 1, 0, 1, 1, 1},\n            {1, 1, 1, 0, 1, 1, 1},\n            {1, 0, 0, 0, 0, 0, 1},\n            {1, 1, 1, 1, 1, 0, 1},\n            {1, 1, 1, 1, 1, 0, 1}\n        };\n        assertTrue(MazeRecursion.setWay(map, 1, 1));\n    }\n}",
        "package_metric": 2.87,
        "class_metric": 14.75,
        "method_metric": 60.0,
        "pitest": 6.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/backtracking",
        "package_name": "com.thealgorithms.backtracking",
        "class_name": "MazeRecursion",
        "method_name": "setWay",
        "test_code": "package com.thealgorithms.backtracking;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MazeRecursionTest {\n    @Test\n    public void shouldFindPath() {\n        int[][] map = {\n            {1, 1, 1, 1, 1, 1, 1, 1},\n            {1, 0, 0, 0, 0, 0, 0, 1},\n            {1, 1, 1, 0, 1, 1, 1, 1},\n            {1, 1, 1, 0, 1, 1, 1, 1},\n            {1, 0, 0, 0, 0, 0, 1, 1},\n            {1, 0, 1, 0, 1, 1, 1, 1},\n            {1, 0, 0, 0, 0, 0, 0, 1},\n            {1, 1, 1, 1, 1, 1, 1, 1}\n        };\n        assertTrue(MazeRecursion.setWay(map, 1, 1));\n    }\n    \n}",
        "package_metric": 2.87,
        "class_metric": 14.75,
        "method_metric": 60.0,
        "pitest": 6.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "find",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void findTest() {\n        BinaryTree binaryTree = new BinaryTree();\n        binaryTree.put(10);\n        binaryTree.put(5);\n        binaryTree.put(15);\n        binaryTree.put(3);\n        \n        // Test 1: Key exists in the tree\n        BinaryTree.Node result1 = binaryTree.find(3);\n        assertNotNull(result1);\n        assertEquals(3, result1.data);\n        \n        // Test 2: Key does not exist in the tree, parent should be returned\n        BinaryTree.Node result2 = binaryTree.find(7);\n        assertNotNull(result2);\n        assertEquals(5, result2.data);\n    }\n}",
        "package_metric": 1.8,
        "class_metric": 21.3,
        "method_metric": 83.33,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "find",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n        public void findTest() {\n            // Create a BinaryTree object\n            BinaryTree binaryTree = new BinaryTree();\n            \n            // Add nodes to the binary tree\n            binaryTree.put(5);\n            binaryTree.put(3);\n            binaryTree.put(7);\n            binaryTree.put(2);\n            \n            // Call the find method to search for a node with key value 3\n            BinaryTree.Node resultNode = binaryTree.find(3);\n            \n            // Check if the resultNode data is equal to the expected value\n            assertEquals(3, resultNode.data);\n        }\n}",
        "package_metric": 1.8,
        "class_metric": 21.3,
        "method_metric": 83.33,
        "pitest": 16.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "find",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void findTest() {\n        BinaryTree tree = new BinaryTree();\n        tree.put(5);\n        tree.put(3);\n        tree.put(7);\n        assertEquals(3, tree.find(4).data);\n    }\n}",
        "package_metric": 1.74,
        "class_metric": 20.37,
        "method_metric": 75.0,
        "pitest": 13.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "find",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void findTest() {\n        BinaryTree.Node root = new BinaryTree.Node(10);\n        BinaryTree tree = new BinaryTree(root);\n        tree.put(5);\n        tree.put(15);\n        tree.put(3);\n        tree.put(7);\n        assertEquals(5, tree.find(5).data);\n        assertEquals(7, tree.find(7).data);\n    }\n}",
        "package_metric": 1.8,
        "class_metric": 21.3,
        "method_metric": 91.67,
        "pitest": 20.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(5, -8, 10, -4);\n        assertEquals(10, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(1, -5, 3, -7, 9);\n        assertEquals(9, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(10, -5, 8, -3, 6);\n        assertEquals(10, result);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 62.5,
        "method_metric": 71.43,
        "pitest": 75.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(-1, 2, 5, -6, 8);\n        assertEquals(8, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(-10, 20, -30, 40);\n        assertEquals(40, result);\n    }\n    \n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    \n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(5, -15, 10, -20, 25);\n        assertEquals(25, result);\n    }\n    \n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(2, -5, 8, -3, 6);\n        assertEquals(8, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(4, -11, 7, -8, 13, -5);\n        assertEquals(13, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(5, -3, 10, -2, 8);\n        assertEquals(10, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(-5, -2, -8, -10, -3);\n        assertEquals(-10, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(5, -7, 9, -2);\n        assertEquals(9, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(-10, 5, -15, 20);\n        assertEquals(20, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AbsoluteMax",
        "method_name": "getMaxValue",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int result = AbsoluteMax.getMaxValue(3, 5, -2, 9, -6);\n        assertEquals(9, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 75.0,
        "method_metric": 85.71,
        "pitest": 88.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        // Create a graph\n        AdjacencyList<Integer> graph = new AdjacencyList<>();\n        graph.addEdge(0, 1);\n        graph.addEdge(0, 2);\n        graph.addEdge(1, 3);\n        graph.addEdge(2, 3);\n    \n        // Create a topological sort object\n        TopologicalSort<Integer> topSort = new TopologicalSort<>(graph);\n    \n        // Test the topological sorting\n        assertArrayEquals(new Integer[] {0, 1, 2, 3}, topSort.topSortOrder().toArray(new Integer[0]));\n    }\n}",
        "package_metric": 5.21,
        "class_metric": 61.9,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        ArrayList<String> expectedResult = new ArrayList<>();\n        expectedResult.add(\"c\");\n        expectedResult.add(\"a\");\n        expectedResult.add(\"u\");\n        expectedResult.add(\"b\");\n        expectedResult.add(\"d\");\n        \n        AdjacencyList<String> graph = new AdjacencyList<>();\n        graph.addEdge(\"a\", \"b\");\n        graph.addEdge(\"c\", \"a\");\n        graph.addEdge(\"a\", \"d\");\n        graph.addEdge(\"b\", \"d\");\n        graph.addEdge(\"c\", \"u\");\n        graph.addEdge(\"u\", \"b\");\n        \n        TopologicalSort<String> topSort = new TopologicalSort<>(graph);\n        \n        ArrayList<String> actualResult = topSort.topSortOrder();\n        assertEquals(expectedResult, actualResult);\n    }\n    \n}",
        "package_metric": 5.21,
        "class_metric": 61.9,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        // Graph definition and initialization\n        AdjacencyList<String> graph = new AdjacencyList<>();\n        graph.addEdge(\"a\", \"b\");\n        graph.addEdge(\"c\", \"a\");\n        graph.addEdge(\"a\", \"d\");\n        graph.addEdge(\"b\", \"d\");\n        graph.addEdge(\"c\", \"u\");\n        graph.addEdge(\"u\", \"b\");\n    \n        TopologicalSort<String> topSort = new TopologicalSort<>(graph);\n    \n        // Output the order\n        ArrayList<String> expected = new ArrayList<>();\n        expected.add(\"c\");\n        expected.add(\"a\");\n        expected.add(\"u\");\n        expected.add(\"b\");\n        expected.add(\"d\");\n        ArrayList<String> actual = topSort.topSortOrder();\n    \n        assertArrayEquals(expected.toArray(), actual.toArray());\n    }\n}",
        "package_metric": 5.21,
        "class_metric": 61.9,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        ArrayList<String> expectedResult = new ArrayList<>();\n        expectedResult.add(\"c\");\n        expectedResult.add(\"a\");\n        expectedResult.add(\"u\");\n        expectedResult.add(\"b\");\n        expectedResult.add(\"d\");\n        \n        AdjacencyList<String> graph = new AdjacencyList<>();\n        graph.addEdge(\"a\", \"b\");\n        graph.addEdge(\"c\", \"a\");\n        graph.addEdge(\"a\", \"d\");\n        graph.addEdge(\"b\", \"d\");\n        graph.addEdge(\"c\", \"u\");\n        graph.addEdge(\"u\", \"b\");\n        \n        TopologicalSort<String> topSort = new TopologicalSort<>(graph);\n        ArrayList<String> result = topSort.topSortOrder();\n        \n        assertEquals(expectedResult, result);\n    }\n    \n}",
        "package_metric": 5.21,
        "class_metric": 61.9,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        AdjacencyList<Integer> list = new AdjacencyList<>();\n        list.addEdge(1, 2);\n        list.addEdge(1, 3);\n        list.addEdge(2, 3);\n        list.addEdge(3, 4);\n        \n        TopologicalSort<Integer> ts = new TopologicalSort<>(list);\n        ArrayList<Integer> actual = ts.topSortOrder();\n        ArrayList<Integer> expected = new ArrayList<>();\n        expected.add(1);\n        expected.add(2);\n        expected.add(3);\n        expected.add(4);\n        \n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 5.21,
        "class_metric": 61.9,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        AdjacencyList<String> graph = new AdjacencyList<>();\n        graph.addEdge(\"A\", \"B\");\n        graph.addEdge(\"B\", \"C\");\n        graph.addEdge(\"C\", \"D\");\n        TopologicalSort<String> topSort = new TopologicalSort<>(graph);\n        topSort.calculateInDegree();\n        ArrayList<String> expected = new ArrayList<>();\n        expected.add(\"A\");\n        expected.add(\"B\");\n        expected.add(\"C\");\n        expected.add(\"D\");\n        ArrayList<String> actual = topSort.topSortOrder();\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 4.98,
        "class_metric": 61.9,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        AdjacencyList<String> graph = new AdjacencyList<>();\n        graph.addEdge(\"A\", \"C\");\n        graph.addEdge(\"B\", \"C\");\n        graph.addEdge(\"B\", \"D\");\n        graph.addEdge(\"C\", \"E\");\n        graph.addEdge(\"D\", \"F\");\n        graph.addEdge(\"E\", \"F\");\n        \n        TopologicalSort<String> topSort = new TopologicalSort<>(graph);\n        topSort.calculateInDegree();\n        ArrayList<String> result = topSort.topSortOrder();\n        ArrayList<String> expected = new ArrayList<>();\n        expected.add(\"A\");\n        expected.add(\"B\");\n        expected.add(\"C\");\n        expected.add(\"D\");\n        expected.add(\"E\");\n        expected.add(\"F\");\n        assertArrayEquals(expected.toArray(), result.toArray());\n    }\n    \n}",
        "package_metric": 5.21,
        "class_metric": 61.9,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        AdjacencyList<Integer> graph = new AdjacencyList<>();\n        graph.addEdge(1, 2);\n        graph.addEdge(1, 3);\n        graph.addEdge(2, 3);\n        graph.addEdge(4, 1);\n        TopologicalSort<Integer> topSort = new TopologicalSort<>(graph);\n        topSort.calculateInDegree();\n        ArrayList<Integer> result = topSort.topSortOrder();\n        assertEquals(4, (int)result.get(0));\n        assertEquals(1, (int)result.get(1));\n        assertEquals(2, (int)result.get(2));\n        assertEquals(3, (int)result.get(3));\n    }\n    \n}",
        "package_metric": 5.21,
        "class_metric": 61.9,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        AdjacencyList<Integer> graph = new AdjacencyList<>();\n        graph.addEdge(1, 2);\n        graph.addEdge(2, 3);\n        graph.addEdge(3, 4);\n        \n        TopologicalSort<Integer> topSort = new TopologicalSort<>(graph);\n        topSort.calculateInDegree();\n        \n        ArrayList<Integer> expected = new ArrayList<>();\n        expected.add(1);\n        expected.add(2);\n        expected.add(3);\n        expected.add(4);\n        \n        ArrayList<Integer> result = topSort.topSortOrder();\n        \n        assertIterableEquals(expected, result);\n    }\n}",
        "package_metric": 4.98,
        "class_metric": 61.9,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        AdjacencyList<Integer> adjList = new AdjacencyList<>();\n        adjList.addEdge(1, 2);\n        adjList.addEdge(1, 3);\n        adjList.addEdge(2, 3);\n        adjList.addEdge(2, 4);\n        adjList.addEdge(3, 5);\n        \n        TopologicalSort<Integer> topSort = new TopologicalSort<>(adjList);\n        topSort.calculateInDegree();\n        \n        ArrayList<Integer> result = topSort.topSortOrder();\n        \n        ArrayList<Integer> expected = new ArrayList<>();\n        expected.add(1);\n        expected.add(2);\n        expected.add(3);\n        expected.add(4);\n        expected.add(5);\n        \n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 5.21,
        "class_metric": 61.9,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "AdjacencyList",
        "method_name": "topSortOrder",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.Queue;\n\n\nimport java.util.Map;\n\n\nimport java.util.LinkedList;\n\n\nimport java.util.LinkedHashMap;\n\n\nimport java.util.HashMap;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AdjacencyListTest {\n    @Test\n    public void topSortOrderTest() {\n        AdjacencyList<Integer> adjacencyList = new AdjacencyList<>();\n        adjacencyList.addEdge(1, 2);\n        \n        TopologicalSort<Integer> topologicalSort = new TopologicalSort<>(adjacencyList);\n        topologicalSort.calculateInDegree();\n        ArrayList<Integer> result = topologicalSort.topSortOrder();\n        \n        ArrayList<Integer> expected = new ArrayList<>();\n        expected.add(1);\n        expected.add(2);\n        \n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 4.75,
        "class_metric": 52.38,
        "method_metric": 0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar caesar = new Caesar();\n        String encryptedMessage = \"KHOORZRUOG\";\n        int shift = 3;\n        String expectedResult = \"HELLOWORLD\";\n        String actualResult = caesar.decode(encryptedMessage, shift);\n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "package_metric": 1.4,
        "class_metric": 33.33,
        "method_metric": 69.23,
        "pitest": 26.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar caesar = new Caesar();\n        String expectedDecodedMessage = \"HELLO\";\n        String encryptedMessage = \"MJQQT\";\n        int shift = 5;\n        String actualDecodedMessage = caesar.decode(encryptedMessage, shift);\n        assertEquals(expectedDecodedMessage, actualDecodedMessage);\n    }\n}",
        "package_metric": 1.4,
        "class_metric": 33.33,
        "method_metric": 69.23,
        "pitest": 23.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    \n    @Test\n    public void decodeTest() {\n        Caesar cipher = new Caesar();\n        String expected = \"HELLO\";\n        String encryptedMessage = \"IFMMP\";\n        int shift = 1;\n        String actual = cipher.decode(encryptedMessage, shift);\n        assertEquals(expected, actual);\n    }\n    \n}",
        "package_metric": 1.4,
        "class_metric": 33.33,
        "method_metric": 69.23,
        "pitest": 23.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar caesar = new Caesar();\n        String decryptedMessage = caesar.decode(\"Rovvy, Gybvn!\", 10);\n        assertEquals(\"Hello, World!\", decryptedMessage);\n    }\n}",
        "package_metric": 2.03,
        "class_metric": 48.48,
        "method_metric": 100.0,
        "pitest": 44.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar caesar = new Caesar();\n        String expected = \"hello\";\n        String encryptedMessage = \"uryyb\";\n        int shift = 13;\n        String actual = caesar.decode(encryptedMessage, shift);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.65,
        "class_metric": 39.39,
        "method_metric": 76.92,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar caesar = new Caesar();\n        String encryptedMessage = \"Wklv lv d whvw phvvdjh\";\n        int shift = 3;\n        String expected = \"This is a test message\";\n        assertEquals(expected, caesar.decode(encryptedMessage, shift));\n    }\n}",
        "package_metric": 2.03,
        "class_metric": 48.48,
        "method_metric": 100.0,
        "pitest": 42.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar cipher = new Caesar();\n        String encryptedMessage = \"Bcde\";\n        int shift = 1;\n        assertEquals(\"Abcd\", cipher.decode(encryptedMessage, shift));\n    }\n}",
        "package_metric": 1.9,
        "class_metric": 45.45,
        "method_metric": 92.31,
        "pitest": 37.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar cipher = new Caesar();\n        String encryptedMessage = \"KHOOR\";\n        int shift = 3;\n        String expected = \"HELLO\";\n        String actual = cipher.decode(encryptedMessage, shift);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.4,
        "class_metric": 33.33,
        "method_metric": 69.23,
        "pitest": 23.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n        public void decodeTest() {\n            Caesar caesar = new Caesar();\n            String expected = \"HELLO\";\n            String encryptedMessage = \"MJQQT\";\n            int shift = 5;\n            String actual = caesar.decode(encryptedMessage, shift);\n            assertEquals(expected, actual);\n        }\n}",
        "package_metric": 1.4,
        "class_metric": 33.33,
        "method_metric": 69.23,
        "pitest": 23.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar cipher = new Caesar();\n        assertEquals(\"The quick brown fox jumps over the lazy dog\",\n        cipher.decode(\"Wkh txlfn eurzq ira mxpsv ryhu wkh odcb grj\",\n        3));\n    }\n    \n}",
        "package_metric": 2.03,
        "class_metric": 48.48,
        "method_metric": 100.0,
        "pitest": 49.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"Rovvy, Gybvn!\";\n        int shift = 10;\n        String expected = \"Hello, World!\";\n        assertEquals(expected, new Caesar().decode(encryptedMessage, shift));\n    }\n}",
        "package_metric": 2.03,
        "class_metric": 48.48,
        "method_metric": 100.0,
        "pitest": 44.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n        public void decodeTest() {\n            Caesar cipher = new Caesar();\n            String message = \"Wklv lv d whvw phvvdjh.\";\n            int shift = 3;\n            assertEquals(\"This is a test message.\", cipher.decode(message, shift));\n        }\n}",
        "package_metric": 2.03,
        "class_metric": 48.48,
        "method_metric": 100.0,
        "pitest": 42.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar caesar = new Caesar();\n        assertEquals(\"DEF\", caesar.decode(\"GHI\", 3)); // Example test case\n        // Add more test cases to cover different scenarios\n    }\n}",
        "package_metric": 1.4,
        "class_metric": 33.33,
        "method_metric": 69.23,
        "pitest": 23.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "Caesar",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar cipher = new Caesar();\n        String encryptedMessage = \"Wklv lv d phvvdjh.\";\n        int shift = 3;\n        \n        String expected = \"This is a message.\";\n        String actual = cipher.decode(encryptedMessage, shift);\n        \n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.03,
        "class_metric": 48.48,
        "method_metric": 100.0,
        "pitest": 42.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        int number = 370;\n        Armstrong arm = new Armstrong();\n        boolean result = arm.isArmstrong(number);\n        assertTrue(result);\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(370));\n        assertTrue(armstrong.isArmstrong(1634));\n        assertFalse(armstrong.isArmstrong(123));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n        public void isArmstrongTest() {\n            boolean result = new Armstrong().isArmstrong(370);\n            assertTrue(result);\n        }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(370));\n        assertTrue(armstrong.isArmstrong(1634));\n        assertFalse(armstrong.isArmstrong(123));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n            Armstrong armstrong = new Armstrong();\n            assertTrue(armstrong.isArmstrong(1634));\n            assertFalse(armstrong.isArmstrong(1234));\n        }\n    \n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(370));\n        assertTrue(armstrong.isArmstrong(1634));\n        assertFalse(armstrong.isArmstrong(123));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        assertTrue(new Armstrong().isArmstrong(370));\n        assertTrue(new Armstrong().isArmstrong(1634));\n        assertFalse(new Armstrong().isArmstrong(123));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        \n        assertTrue(armstrong.isArmstrong(370));\n        assertTrue(armstrong.isArmstrong(1634));\n        \n        assertFalse(armstrong.isArmstrong(123));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        // Testing positive case\n        assertTrue(new Armstrong().isArmstrong(370));\n        assertTrue(new Armstrong().isArmstrong(1634));\n        \n        // Testing negative case\n        assertFalse(new Armstrong().isArmstrong(123));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n        public void isArmstrongTest() {\n            // Arrange\n            Armstrong armstrong = new Armstrong();\n            \n            // Act\n            boolean actual = armstrong.isArmstrong(370);\n            \n            // Assert\n            assertTrue(actual);\n        }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        \n        assertEquals(true, new Armstrong().isArmstrong(153));\n    }\n    \n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153));\n        assertFalse(armstrong.isArmstrong(123));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153));\n        assertFalse(armstrong.isArmstrong(154));\n    }\n    \n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    \n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153)); // 153 is an Armstrong number\n        assertFalse(armstrong.isArmstrong(154)); // 154 is not an Armstrong number\n    }\n    \n    \n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong arm = new Armstrong();\n        assertTrue(arm.isArmstrong(153));\n        assertFalse(arm.isArmstrong(154));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        // Given\n        Armstrong armstrong = new Armstrong();\n        \n        // When\n        boolean result1 = armstrong.isArmstrong(153);\n        boolean result2 = armstrong.isArmstrong(370);\n        \n        // Then\n        assertTrue(result1);\n        assertTrue(result2);\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        \n                // Arrange\n                Armstrong armstrong = new Armstrong();\n                \n                // Act\n                boolean result = armstrong.isArmstrong(153);\n                \n                // Assert\n                assertTrue(result);\n                assertEquals(true, result);\n    }\n    \n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        boolean result = armstrong.isArmstrong(153);\n        assertTrue(result);\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153));\n        assertTrue(armstrong.isArmstrong(9474));\n        assertFalse(armstrong.isArmstrong(123));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153));\n        assertFalse(armstrong.isArmstrong(123));\n        assertTrue(armstrong.isArmstrong(9474));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153));\n        assertFalse(armstrong.isArmstrong(154));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        boolean result = armstrong.isArmstrong(153);\n        assertTrue(result);\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153));\n        assertFalse(armstrong.isArmstrong(154));\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Armstrong",
        "method_name": "isArmstrong",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153)); // Test for Armstrong number\n        assertFalse(armstrong.isArmstrong(123)); // Test for non-Armstrong number\n    }\n}",
        "package_metric": 0.68,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int n = 3;\n        int result = HillCipher.determinant(matrix, n);\n        int expected = -0;\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{1, 2}, {3, 4}};\n        int expectedDeterminant = -2;\n        int actualDeterminant = HillCipher.determinant(matrix, 2);\n        assertEquals(expectedDeterminant, actualDeterminant);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] a = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int n = 3;\n        int result = HillCipher.determinant(a, n);\n        assertEquals(0, result);\n    }\n    \n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{1, 2}, {3, 4}};\n        int det = HillCipher.determinant(matrix, 2);\n        assertEquals(-2, det);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{4, 2}, {3, 1}};\n        int n = 2;\n        int result = HillCipher.determinant(matrix, n);\n        assertEquals(-2, result);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] testMatrix = {{1, 2}, {3, 4}};\n        int n = 2;\n        int expected = -2;\n        int actual = HillCipher.determinant(testMatrix, n);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int n = 3;\n        int result = HillCipher.determinant(matrix, n);\n        assertEquals(0, result);\n    }\n    \n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    \n    // determinant test\n    @Test\n    public void determinantTest() {\n        int[][] a = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int n = 3;\n        int expected = 0; // fill in the expected value\n        int actual = HillCipher.determinant(a, n);\n        assertEquals(expected, actual);\n    }\n    \n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n        public void determinantTest() {\n            int[][] matrix = {{1, 2}, {3, 4}};\n            int n = 2;\n            int result = HillCipher.determinant(matrix, n);\n            assertEquals(-2, result);\n        }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] a = {{1, 2}, {3, 4}};\n        int det = HillCipher.determinant(a, 2);\n        assertEquals(-2, det);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] a = {{1, 2}, {3, 4}};\n        int n = 2;\n        int result = HillCipher.determinant(a, n);\n        assertEquals(-2, result);\n    }\n    \n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = new int[][]{{1, 2}, {3, 4}};\n        int n = 2;\n        int result = HillCipher.determinant(matrix, n);\n        assertEquals(-2, result);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{1, 2}, {3, 4}};\n        int n = 2;\n        int result = HillCipher.determinant(matrix, n);\n        assertEquals(-2, result);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int expected = 0; // This is a placeholder for the expected value of the determinant\n        int result = HillCipher.determinant(matrix, 3);\n        assertEquals(expected, result);\n    }\n    \n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n        public void determinantTest() {\n            int[][] matrix = {{1, 2, 3},\n                              {4, 5, 6},\n                              {7, 8, 9}};\n            int result = HillCipher.determinant(matrix, 3);\n            assertEquals(0, result);\n        }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{2, 3}, {1, 4}};\n        int result = HillCipher.determinant(matrix, 2);\n        assertEquals(5, result);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 15.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] a = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int n = 3;\n        int result = HillCipher.determinant(a, n);\n        assertEquals(0, result);\n    }\n    \n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int n = 3;\n        int result = HillCipher.determinant(matrix, n);\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        assertEquals(0, HillCipher.determinant(matrix, 3));\n    }\n    \n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int det = HillCipher.determinant(matrix, 3);\n        assertEquals(0, det);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "HillCipher",
        "method_name": "determinant",
        "test_code": "package com.thealgorithms.ciphers;\n\n\nimport java.util.Scanner;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HillCipherTest {\n    @Test\n    public void determinantTest() {\n        int[][] testMatrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int result = HillCipher.determinant(testMatrix, 3);\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 2.28,
        "class_metric": 18.37,
        "method_metric": 100.0,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FFT",
        "method_name": "fft",
        "test_code": "package com.thealgorithms.maths;\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FFTTest {\n    @Test\n    public void fftTest() {\n        ArrayList<FFT.Complex> inputSignal = new ArrayList<>();\n        inputSignal.add(new FFT.Complex(1, 0));\n        inputSignal.add(new FFT.Complex(1, 0));\n        ArrayList<FFT.Complex> result = FFT.fft(inputSignal, false);\n        assertEquals(2, result.size());\n    }\n    \n}",
        "package_metric": 3.62,
        "class_metric": 86.67,
        "method_metric": 100.0,
        "pitest": 40.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void removeTest() {\n        BinaryTree tree = new BinaryTree();\n        tree.put(5);\n        tree.put(3);\n        tree.put(7);\n        tree.put(2);\n        tree.put(4);\n        tree.put(6);\n        tree.put(8);\n        \n        tree.remove(4);\n        assertFalse(tree.remove(9));\n    }\n}",
        "package_metric": 2.36,
        "class_metric": 29.63,
        "method_metric": 17.78,
        "pitest": 20.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void removeTest() {\n        BinaryTree tree = new BinaryTree();\n        tree.put(4);\n        tree.put(2);\n        tree.put(6);\n        tree.put(1);\n        tree.put(3);\n        tree.put(5);\n        tree.put(7);\n        assertTrue(tree.remove(2)); // Testing removal of node with one child\n        assertFalse(tree.remove(9)); // Testing removal of non-existent node\n        assertTrue(tree.remove(4)); // Testing removal of root node with two children\n        assertTrue(tree.remove(6)); // Testing removal of internal node with two children\n    }\n}",
        "package_metric": 3.91,
        "class_metric": 52.78,
        "method_metric": 57.78,
        "pitest": 38.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void removeTest() {\n        BinaryTree bt = new BinaryTree();\n        bt.put(5);\n        bt.put(3);\n        bt.put(7);\n        assertTrue(bt.remove(5));\n        assertFalse(bt.remove(10));\n    }\n}",
        "package_metric": 2.98,
        "class_metric": 38.89,
        "method_metric": 28.89,
        "pitest": 30.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void removeTest() {\n        BinaryTree tree = new BinaryTree();\n        tree.put(10);\n        tree.put(5);\n        tree.put(15);\n        tree.put(3);\n        tree.put(7);\n        tree.put(13);\n        tree.put(17);\n        assertTrue(tree.remove(3));\n        assertFalse(tree.remove(20));\n        assertTrue(tree.remove(15));\n        assertTrue(tree.remove(10));\n        assertFalse(tree.remove(10));\n    }\n}",
        "package_metric": 3.79,
        "class_metric": 50.93,
        "method_metric": 53.33,
        "pitest": 38.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void removeTest() {\n        BinaryTree tree = new BinaryTree();\n        tree.put(5);\n        tree.put(3);\n        tree.put(7);\n        tree.put(2);\n        tree.put(4);\n        tree.put(6);\n        tree.put(8);\n        assertTrue(tree.remove(5));\n    }\n}",
        "package_metric": 3.29,
        "class_metric": 43.52,
        "method_metric": 35.56,
        "pitest": 28.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n        @Test\n        public void removeTest() {\n            // Create a binary tree\n            BinaryTree bt = new BinaryTree();\n            \n            // Add nodes to the binary tree\n            bt.put(50);\n            bt.put(30);\n            bt.put(20);\n            bt.put(40);\n            bt.put(70);\n            bt.put(60);\n            bt.put(80);\n            \n            // Remove a node from the binary tree\n            boolean result = bt.remove(30);\n            \n            // Assert that the node was removed successfully\n            assertTrue(result);\n        }\n}",
        "package_metric": 3.11,
        "class_metric": 40.74,
        "method_metric": 28.89,
        "pitest": 25.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void removeTest() {\n        BinaryTree tree = new BinaryTree();\n        tree.put(10);\n        tree.put(5);\n        tree.put(15);\n        tree.put(3);\n        tree.put(7);\n        tree.put(12);\n        tree.put(20);\n        assertTrue(tree.remove(12));\n        assertFalse(tree.remove(8));\n        assertTrue(tree.remove(15));\n    }\n}",
        "package_metric": 2.8,
        "class_metric": 36.11,
        "method_metric": 33.33,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void removeTest() {\n        BinaryTree tree = new BinaryTree();\n        tree.put(5);\n        tree.put(3);\n        tree.put(7);\n        tree.put(2);\n        \n        assertTrue(tree.remove(3));\n        assertFalse(tree.remove(4));\n    }\n}",
        "package_metric": 2.48,
        "class_metric": 31.48,
        "method_metric": 24.44,
        "pitest": 25.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void removeTest() {\n        BinaryTree tree = new BinaryTree();\n        tree.put(5);\n        tree.put(3);\n        tree.put(7);\n        assertTrue(tree.remove(3));\n        assertFalse(tree.remove(4));\n    }\n    \n}",
        "package_metric": 2.3,
        "class_metric": 28.7,
        "method_metric": 17.78,
        "pitest": 25.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    @Test\n    public void removeTest() {\n        BinaryTree bt = new BinaryTree();\n        bt.put(5);\n        bt.put(3);\n        bt.put(7);\n        bt.put(2);\n        bt.put(4);\n        bt.put(6);\n        bt.put(8);\n        \n        assertTrue(bt.remove(2));\n        assertFalse(bt.remove(9));\n    }\n}",
        "package_metric": 2.36,
        "class_metric": 29.63,
        "method_metric": 17.78,
        "pitest": 25.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "BinaryTree",
        "method_name": "remove",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport java.util.Queue;\n\n\n\nimport java.util.LinkedList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BinaryTreeTest {\n    \n    @Test\n    public void removeTest() {\n        BinaryTree binaryTree = new BinaryTree();\n        binaryTree.put(5);\n        binaryTree.put(3);\n        binaryTree.put(8);\n        assertTrue(binaryTree.remove(3));\n        assertFalse(binaryTree.remove(10));\n    }\n    \n}",
        "package_metric": 2.36,
        "class_metric": 29.63,
        "method_metric": 17.78,
        "pitest": 25.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList singlyLinkedList = new SinglyLinkedList();\n        singlyLinkedList.insert(1);\n        singlyLinkedList.insert(2);\n        singlyLinkedList.insert(3);\n        singlyLinkedList.insert(4);\n        singlyLinkedList.insert(5);\n        Node middle = singlyLinkedList.middle();\n        assertEquals(3, middle.value);\n    }\n    \n}",
        "package_metric": 4.12,
        "class_metric": 15.96,
        "method_metric": 87.5,
        "pitest": 16.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        list.insert(1);\n        list.insert(2);\n        list.insert(3);\n        list.insert(4);\n        assertEquals(2, list.middle().value);\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 15.96,
        "method_metric": 87.5,
        "pitest": 17.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        Node head = new Node(1, new Node(2, new Node(3, new Node(4, new Node(5)))));\n        SinglyLinkedList list = new SinglyLinkedList();\n        list.setHead(head);\n        Node result = list.middle();\n        assertEquals(3, result.value);\n    }\n}",
        "package_metric": 2.29,
        "class_metric": 7.45,
        "method_metric": 87.5,
        "pitest": 4.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList singlyLinkedList = new SinglyLinkedList();\n        singlyLinkedList.insertHead(5);\n        singlyLinkedList.insertHead(7);\n        singlyLinkedList.insertHead(10);\n        singlyLinkedList.insert(3);\n        singlyLinkedList.insertNth(1, 4);\n        Node middleNode = singlyLinkedList.middle();\n        assertEquals(5, middleNode.value);\n    }\n}",
        "package_metric": 4.81,
        "class_metric": 19.15,
        "method_metric": 87.5,
        "pitest": 18.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        list.insert(1);\n        list.insert(2);\n        list.insert(3);\n        list.insert(4);\n        list.insert(5);\n        Node middleNode = list.middle();\n        assertEquals(3, middleNode.value);\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 15.96,
        "method_metric": 87.5,
        "pitest": 16.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        list.insert(1);\n        list.insert(2);\n        list.insert(3);\n        list.insert(4);\n        list.insert(5);\n        Node middle = list.middle();\n        assertEquals(3, middle.value);\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 15.96,
        "method_metric": 87.5,
        "pitest": 16.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        list.insert(1);\n        list.insert(2);\n        list.insert(3);\n        Node result = list.middle();\n        assertEquals(2, result.value);\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 15.96,
        "method_metric": 87.5,
        "pitest": 16.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        Node node1 = new Node(1);\n        Node node2 = new Node(2);\n        Node node3 = new Node(3);\n        list.setHead(node1);\n        node1.next = node2;\n        node2.next = node3;\n        Node middleNode = list.middle();\n        assertEquals(2, middleNode.value);\n    }\n}",
        "package_metric": 2.29,
        "class_metric": 7.45,
        "method_metric": 87.5,
        "pitest": 4.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        list.insert(1);\n        list.insert(2);\n        list.insert(3);\n        list.insert(4);\n        list.insert(5);\n        Node middleNode = list.middle();\n        assertEquals(3, middleNode.value);\n    }\n}",
        "package_metric": 4.12,
        "class_metric": 15.96,
        "method_metric": 87.5,
        "pitest": 16.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList singlyLinkedList = new SinglyLinkedList();\n        singlyLinkedList.insert(1);\n        singlyLinkedList.insert(2);\n        singlyLinkedList.insert(3);\n        assertEquals(2, singlyLinkedList.middle().value);\n    }\n    \n}",
        "package_metric": 4.12,
        "class_metric": 15.96,
        "method_metric": 87.5,
        "pitest": 16.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/lists",
        "package_name": "com.thealgorithms.datastructures.lists",
        "class_name": "SinglyLinkedList",
        "method_name": "middle",
        "test_code": "package com.thealgorithms.datastructures.lists;\n\nimport java.util.StringJoiner;\n\n\nimport java.util.NoSuchElementException;\n\n\n\nimport java.util.Iterator;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        // Add nodes to the list\n        \n        // Call middle() method\n        \n        // Verify the output with assertEquals()\n    }\n}",
        "package_metric": 0.57,
        "class_metric": 2.66,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        int n = 5;\n        int[] arr = {1, 3, 5, 7, 9};\n        SegmentTree st = new SegmentTree(n, arr);\n        assertEquals(25, st.getSum(0, 4));\n    }\n    \n}",
        "package_metric": 1.18,
        "class_metric": 50.0,
        "method_metric": 33.33,
        "pitest": 36.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        SegmentTree segmentTree = new SegmentTree(5, new int[]{1, 3, 5, 7, 9});\n        int result = segmentTree.getSum(0, 3);\n        assertEquals(16, result);\n    }\n}",
        "package_metric": 1.43,
        "class_metric": 60.53,
        "method_metric": 100.0,
        "pitest": 56.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        // Given\n        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n        SegmentTree segmentTree = new SegmentTree(arr.length, arr);\n        \n        // When\n        int actualSum = segmentTree.getSum(0, 3);\n        \n        // Then\n        int expectedSum = 10; // Sum of elements from index 0 to 3 is 10 (1 + 2 + 3 + 4)\n        assertEquals(expectedSum, actualSum);\n    }\n}",
        "package_metric": 1.43,
        "class_metric": 60.53,
        "method_metric": 100.0,
        "pitest": 59.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n        public void getSumTreeTest() {\n            // Arrange\n            int[] arr = {1, 2, 3, 4, 5};\n            SegmentTree segmentTree = new SegmentTree(5, arr);\n            int start = 1;\n            int end = 3;\n    \n            // Act\n            int result = segmentTree.getSum(start, end);\n    \n            // Assert\n            assertEquals(9, result);\n        }\n}",
        "package_metric": 1.43,
        "class_metric": 60.53,
        "method_metric": 100.0,
        "pitest": 55.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        SegmentTree segmentTree = new SegmentTree(5, new int[] {1, 3, 5, 7, 9});\n        int sum = segmentTree.getSum(1, 3);\n        assertEquals(15, sum);\n    }\n}",
        "package_metric": 1.43,
        "class_metric": 60.53,
        "method_metric": 100.0,
        "pitest": 55.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        int n = 5;\n        int[] arr = {1, 3, 5, 7, 9};\n        SegmentTree st = new SegmentTree(n, arr);\n        int result = st.getSum(0, 3);\n        assertEquals(16, result);\n    }\n}",
        "package_metric": 1.43,
        "class_metric": 60.53,
        "method_metric": 100.0,
        "pitest": 56.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n        SegmentTree segmentTree = new SegmentTree(arr.length, arr);\n        int result = segmentTree.getSum(2, 7);\n        assertEquals(33, result);\n    }\n}",
        "package_metric": 1.43,
        "class_metric": 60.53,
        "method_metric": 100.0,
        "pitest": 58.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        SegmentTree segmentTree = new SegmentTree(5, new int[]{1, 3, 5, 7, 9});\n        int expectedSum = 15;\n        int actualSum = segmentTree.getSum(1, 3);\n        assertEquals(expectedSum, actualSum);\n    }\n}",
        "package_metric": 1.43,
        "class_metric": 60.53,
        "method_metric": 100.0,
        "pitest": 55.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        SegmentTree segmentTree = new SegmentTree(5, new int[]{1, 3, 5, 7, 9});\n        int result = segmentTree.getSum(0, 3);\n        assertEquals(16, result);\n    }\n}",
        "package_metric": 1.43,
        "class_metric": 60.53,
        "method_metric": 100.0,
        "pitest": 56.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        SegmentTree segmentTree = new SegmentTree(5, new int[]{1, 3, 5, 7, 9});\n        int result = segmentTree.getSum(0, 4);\n        assertEquals(25, result);\n    }\n}",
        "package_metric": 1.18,
        "class_metric": 50.0,
        "method_metric": 33.33,
        "pitest": 36.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        int[] arr = {1, 3, 5, 7, 9, 11};\n        int n = arr.length;\n        SegmentTree tree = new SegmentTree(n, arr);\n        int sum = tree.getSum(1, 3);\n        assertEquals(15, sum);\n    }\n}",
        "package_metric": 1.43,
        "class_metric": 60.53,
        "method_metric": 100.0,
        "pitest": 55.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/trees",
        "package_name": "com.thealgorithms.datastructures.trees",
        "class_name": "SegmentTree",
        "method_name": "getSumTree",
        "test_code": "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        SegmentTree st = new SegmentTree(5, new int[]{1, 3, 5, 7, 9});\n        int start = 0;\n        int end = 4;\n        int expectedSum = 25; \n        int actualSum = st.getSum(start, end);\n        assertEquals(expectedSum, actualSum, \"Sum of elements from index 0 to 4 should be 25\");\n    }\n}",
        "package_metric": 1.18,
        "class_metric": 50.0,
        "method_metric": 33.33,
        "pitest": 36.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/bitmanipulation",
        "package_name": "com.thealgorithms.bitmanipulation",
        "class_name": "BitSwap",
        "method_name": "bitSwap",
        "test_code": "package com.thealgorithms.bitmanipulation;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitSwapTest {\n    @Test\n    public void bitSwapTest() {\n        int data = 8;\n        int posA = 1;\n        int posB = 3;\n        int expected = 2;\n        int result = BitSwap.bitSwap(data, posA, posB);\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 8.16,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/bitmanipulation",
        "package_name": "com.thealgorithms.bitmanipulation",
        "class_name": "BitSwap",
        "method_name": "bitSwap",
        "test_code": "package com.thealgorithms.bitmanipulation;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitSwapTest {\n    @Test\n    public void bitSwapTest() {\n        int data = 12; // Example data\n        int posA = 2; // Example position A\n        int posB = 3; // Example position B\n        int expectedResult = 12; // Expected result after bit swap\n        int actualResult = BitSwap.bitSwap(data, posA, posB);\n        assertEquals(expectedResult, actualResult);\n    }\n    \n}",
        "package_metric": 6.12,
        "class_metric": 66.67,
        "method_metric": 66.67,
        "pitest": 33.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/bitmanipulation",
        "package_name": "com.thealgorithms.bitmanipulation",
        "class_name": "BitSwap",
        "method_name": "bitSwap",
        "test_code": "package com.thealgorithms.bitmanipulation;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitSwapTest {\n    @Test\n    \n    public void bitSwapTest() {\n        int input = 5;\n        int posA = 1;\n        int posB = 2;\n        \n        int expected = 3;\n        int result = BitSwap.bitSwap(input, posA, posB);\n        \n        assertEquals(expected, result);\n    }\n    \n}",
        "package_metric": 8.16,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        assertEquals(9, AliquotSum.getAliquotSum(15));\n    }\n    \n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        assertEquals(9, AliquotSum.getAliquotSum(15));\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        assertEquals(9, AliquotSum.getAliquotSum(15));\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        assertEquals(9, AliquotSum.getAliquotSum(15));\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        // Given\n        int n = 15;\n        \n        // When\n        int result = AliquotSum.getAliquotSum(n);\n        \n        // Then\n        assertEquals(9, result);\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        int value1 = AliquotSum.getAliquotSum(24);\n        assertEquals(36, value1);\n        \n        int value2 = AliquotSum.getAliquotSum(-3);\n        assertEquals(-1, value2);\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 48.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        assertEquals(9, AliquotSum.getAliquotSum(15));\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        int n = 10;\n        int expectedSum = 8;\n        int actualSum = AliquotSum.getAliquotSum(n);\n        assertEquals(expectedSum, actualSum);\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        // Given\n        int input = 10;\n        int expected = 8;\n        \n        // When\n        int actual = AliquotSum.getAliquotSum(input);\n        \n        // Then\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        int result = AliquotSum.getAliquotSum(100);\n        int expected = 117;\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 52.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        int result = AliquotSum.getAliquotSum(100);\n        assertEquals(117, result);\n    }\n    \n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 52.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        assertEquals(16, AliquotSum.getAliquotSum(12));\n        assertEquals(15, AliquotSum.getAliquotSum(16));\n        assertEquals(-1, AliquotSum.getAliquotSum(-16));\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 57.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        int result = AliquotSum.getAliquotSum(100);\n        assertEquals(117, result);\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 52.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        int result1 = AliquotSum.getAliquotSum(100);\n        assertEquals(117, result1);\n    \n        int result2 = AliquotSum.getAliquotSum(12);\n        assertEquals(16, result2);\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 52.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "AliquotSum",
        "method_name": "getAliquotSum",
        "test_code": "package com.thealgorithms.maths;\n\n\nimport java.util.stream.IntStream;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        // Test case for n = 10\n        assertEquals(8, AliquotSum.getAliquotSum(10));\n        // Test case for n = 100\n        assertEquals(117, AliquotSum.getAliquotSum(100));\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 66.67,
        "method_metric": 100.0,
        "pitest": 52.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String message = \"Hello, World!\";\n        String cipherSmall = \"zyxwvutsrqponmlkjihgfedcba\";\n        String expected = \"Svool, Dliow!\";\n        String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.78,
        "class_metric": 48.28,
        "method_metric": 100.0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n       String message = \"Hello\";\n       String cipherSmall = \"bcdefghijklmnopqrstuvwxyza\";\n       assertEquals(\"Ifmmp\", SimpleSubstitutionCipher.encode(message, cipherSmall));\n    }\n}",
        "package_metric": 1.65,
        "class_metric": 44.83,
        "method_metric": 92.86,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    \n    @Test\n    public void encodeTest() {\n        String message = \"Hello, World!\";\n        String cipherSmall = \"zyxwvutsrqponmlkjihgfedcba\";\n    \n        String expectedResult = \"Svool, Dliow!\";\n        String actualResult = SimpleSubstitutionCipher.encode(message, cipherSmall);\n    \n        assertEquals(expectedResult, actualResult);\n    }\n    \n}",
        "package_metric": 1.78,
        "class_metric": 48.28,
        "method_metric": 100.0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String message = \"Hello, World!\";\n        String cipher = \"zyxwvutsrqponmlkjihgfedcba\";\n        String expected = \"Svool, Dliow!\";\n        String actual = SimpleSubstitutionCipher.encode(message, cipher);\n        assertEquals(expected, actual);\n    }\n    \n}",
        "package_metric": 1.78,
        "class_metric": 48.28,
        "method_metric": 100.0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String message = \"Hello\";\n        String cipherSmall = \"bcdefghijklmnopqrstuvwxyza\";\n        \n        String expected = \"Ifmmp\";\n        String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);\n        \n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.65,
        "class_metric": 44.83,
        "method_metric": 92.86,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String message = \"Hello World\";\n        String cipherSmall = \"zyxwvutsrqponmlkjihgfedcba\";\n        String expectedResult = \"Svool Dliow\";\n        String encodedResult = SimpleSubstitutionCipher.encode(message, cipherSmall);\n        assertEquals(expectedResult, encodedResult);\n    }\n}",
        "package_metric": 1.78,
        "class_metric": 48.28,
        "method_metric": 100.0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String inputMessage = \"Hello\";\n        String inputCipher = \"defghijklmnopqrstuvwxyzabc\";\n        String expectedOutput = \"Khoor\";\n    \n        String actualOutput = SimpleSubstitutionCipher.encode(inputMessage, inputCipher);\n        assertEquals(expectedOutput, actualOutput);\n    }\n}",
        "package_metric": 1.65,
        "class_metric": 44.83,
        "method_metric": 92.86,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String message = \"Hello World\";\n        String cipherSmall = \"zyxwvutsrqponmlkjihgfedcba\";\n        String expectedOutput = \"Svool Dliow\";\n        assertEquals(expectedOutput, SimpleSubstitutionCipher.encode(message, cipherSmall));\n    }\n}",
        "package_metric": 1.78,
        "class_metric": 48.28,
        "method_metric": 100.0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String message = \"hello\";\n        String cipherSmall = \"qwertyuiopasdfghjklzxcvbnm\";\n        String expected = \"itssg\";\n        String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.65,
        "class_metric": 44.83,
        "method_metric": 92.86,
        "pitest": 44.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String message = \"Hello World\";\n        String cipher = \"zyxwvutsrqponmlkjihgfedcba\";\n        String expected = \"Svool Dliow\";\n        String actual = SimpleSubstitutionCipher.encode(message, cipher);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.78,
        "class_metric": 48.28,
        "method_metric": 100.0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    \n    @Test\n    public void encodeTest() {\n        String message = \"hello\";\n        String cipherSmall = \"bcdefghijklmnopqrstuvwxyza\";\n        String expected = \"ifmmp\";\n        String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.65,
        "class_metric": 44.83,
        "method_metric": 92.86,
        "pitest": 44.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "encode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport java.util.Map;\n\n\n\nimport java.util.HashMap;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String result = SimpleSubstitutionCipher.encode(\"Hello World!\", \"bcdefghijklmnopqrstuvwxyza\");\n        assertEquals(\"Ifmmp Xpsme!\", result);\n    }\n}",
        "package_metric": 1.78,
        "class_metric": 48.28,
        "method_metric": 100.0,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            FindMax.findMax(new int[]{});\n        });\n    \n        assertEquals(8, FindMax.findMax(new int[]{2, 3, 7, 8}));\n        assertEquals(5, FindMax.findMax(new int[]{5}));\n        assertEquals(10, FindMax.findMax(new int[]{10, 6, 3, 9, 5}));\n    }\n}",
        "package_metric": 0.49,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] inputArray = {3, 2, 5, 8, 1};\n        int expectedResult = 8;\n        int actualResult = FindMax.findMax(inputArray);\n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] testArray = {3, 7, 2, 9, 8};\n        int expected = 9;\n        int actual = FindMax.findMax(testArray);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] inputArray = {4, 7, 5, 2, 8, 9, 3};\n        int expected = 9;\n        int actual = FindMax.findMax(inputArray);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] testArray = {3, 7, 2, 9, 11};\n        assertEquals(11, FindMax.findMax(testArray));\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {3, 5, 2, 8, 10};\n        int max = FindMax.findMax(array);\n        assertEquals(10, max);\n    }\n    \n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] testArray = {5, 3, 8, 2, 9, 1};\n        int expected = 9;\n        int actual = FindMax.findMax(testArray);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {2, 5, 8, 1, 3, 9, 4};\n        int result = FindMax.findMax(array);\n        assertEquals(9, result);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            int[] array = {};\n            FindMax.findMax(array);\n        }, \"Array must be non-empty.\");\n    }\n}",
        "package_metric": 0.18,
        "class_metric": 37.5,
        "method_metric": 37.5,
        "pitest": 14.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {3, 6, 1, 8, 2};\n        int expectedResult = 8;\n        int actualResult = FindMax.findMax(array);\n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n        public void findMaxTest() {\n            int[] testArray = {4, 8, 2, 10, 5};\n            int expectedResult = 10;\n            int actualResult = FindMax.findMax(testArray);\n            assertEquals(expectedResult, actualResult);\n        }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {3, 5, 2, 8, 10};\n        assertEquals(10, FindMax.findMax(array));\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] testArray = {5, 2, 9, 6, 3};\n        int expected = 9;\n        int actual = FindMax.findMax(testArray);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] testArray = {1, 5, 3, 9, 2};\n        int expected = 9;\n        int actual = FindMax.findMax(testArray);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {3, 7, 2, 10, 5};\n        int expected = 10;\n        int actual = FindMax.findMax(array);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {3, 7, 1, 9, 5};\n        int expected = 9;\n        int actual = FindMax.findMax(array);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] testArray = {3, 7, 2, 8, 5};\n        int expectedResult = 8;\n        int actualResult = FindMax.findMax(testArray);\n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {3, 7, 2, 8, 4, 5};\n        int result = FindMax.findMax(array);\n        assertEquals(8, result);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] arr = {3, 7, 2, 8, 4};\n        int result = FindMax.findMax(arr);\n        assertEquals(8, result);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n        public void findMaxTest() {\n            int[] testArray = {5, 10, 8, 3, 6};\n            int expected = 10;\n            int actual = FindMax.findMax(testArray);\n            assertEquals(expected, actual);\n        }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n        public void findMaxTest() {\n            int[] testArray = {5, 1, 9, 3, 7};\n            int expectedResult = 9;\n            int actualResult = FindMax.findMax(testArray);\n            assertEquals(expectedResult, actualResult);\n        }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {1, 3, 5, 7, 9, 2, 4, 6, 8};\n        int expected = 9;\n        int actual = FindMax.findMax(array);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n        public void findMaxTest() {\n            int[] testArray = {5, 3, 8, 6, 2, 7};\n            int expected = 8;\n            int actual = FindMax.findMax(testArray);\n            assertEquals(expected, actual);\n        }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n        public void findMaxTest() {\n            int[] array = {1, 3, 5, 7, 9};\n            int expected = 9;\n            int actual = FindMax.findMax(array);\n            assertEquals(expected, actual);\n        }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n        public void findMaxTest() {\n            int[] array = {3, 5, 2, 8, 6};\n            int expected = 8;\n            int actual = FindMax.findMax(array);\n            assertEquals(expected, actual);\n        }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {3, 7, 1, 9, 4};\n        int result = FindMax.findMax(array);\n        assertEquals(9, result);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "FindMax",
        "method_name": "findMax",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] testArray = {3, 8, 2, 10, 5};\n        int expected = 10;\n        int result = FindMax.findMax(testArray);\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.43,
        "class_metric": 87.5,
        "method_metric": 87.5,
        "pitest": 86.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"ABC\";\n        String expected = \"abc\";\n        String actual = Lower.toLowerCase(input);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"ABC\";\n        String expected = \"abc\";\n        String actual = Lower.toLowerCase(input);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n        public void toLowerCaseTest() {\n            String input = \"ABC\";\n            String expected = \"abc\";\n            assertEquals(expected, Lower.toLowerCase(input));\n        }\n        \n        @Test\n        public void toLowerCaseTest2() {\n            String input = \"ABC123\";\n            String expected = \"abc123\";\n            assertEquals(expected, Lower.toLowerCase(input));\n        }\n        \n        @Test\n        public void toLowerCaseTest3() {\n            String input = \"abcABC\";\n            String expected = \"abcabc\";\n            assertEquals(expected, Lower.toLowerCase(input));\n        }\n        \n        @Test\n        public void toLowerCaseTest4() {\n            String input = \"abc123ABC\";\n            String expected = \"abc123abc\";\n            assertEquals(expected, Lower.toLowerCase(input));\n        }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input1 = \"ABC\";\n        String expected1 = \"abc\";\n        String result1 = Lower.toLowerCase(input1);\n        assertEquals(expected1, result1);\n    \n        String input2 = \"ABC123\";\n        String expected2 = \"abc123\";\n        String result2 = Lower.toLowerCase(input2);\n        assertEquals(expected2, result2);\n    \n        String input3 = \"abcABC\";\n        String expected3 = \"abcabc\";\n        String result3 = Lower.toLowerCase(input3);\n        assertEquals(expected3, result3);\n    \n        String input4 = \"abc123ABC\";\n        String expected4 = \"abc123abc\";\n        String result4 = Lower.toLowerCase(input4);\n        assertEquals(expected4, result4);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n        public void toLowerCaseTest() {\n            String[] testStrings = {\"ABC\", \"ABC123\", \"abcABC\", \"abc123ABC\"};\n            String[] expectedResults = {\"abc\", \"abc123\", \"abcabc\", \"abc123abc\"};\n            for (int i = 0; i < testStrings.length; i++) {\n                assertEquals(expectedResults[i], Lower.toLowerCase(testStrings[i]));\n            }\n        }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String[] strings = {\"ABC\", \"ABC123\", \"abcABC\", \"abc123ABC\"};\n        for (String s : strings) {\n            assertEquals(Lower.toLowerCase(s), s.toLowerCase());\n        }\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String[] strings = {\"ABC\", \"ABC123\", \"abcABC\", \"abc123ABC\"};\n        for (String s : strings) {\n            assertEquals(s.toLowerCase(), Lower.toLowerCase(s));\n        }\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String[] strings = {\"ABC\", \"ABC123\", \"abcABC\", \"abc123ABC\"};\n        for (String s : strings) {\n            assertEquals(Lower.toLowerCase(s), s.toLowerCase());\n        }\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String actual = Lower.toLowerCase(\"ABC\");\n        assertEquals(\"abc\", actual);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"HELLO\";\n        String expected = \"hello\";\n        String actual = Lower.toLowerCase(input);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"Hello World\";\n        String expectedOutput = \"hello world\";\n        String actualOutput = Lower.toLowerCase(input);\n        assertEquals(expectedOutput, actualOutput);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"HelloWorld\";\n        String expected = \"helloworld\";\n        String actual = Lower.toLowerCase(input);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String result = Lower.toLowerCase(\"TestingLower\");\n        assertEquals(\"testinglower\", result);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"HelloWorld\";\n        String expectedResult = \"helloworld\";\n        String actualResult = Lower.toLowerCase(input);\n        assertEquals(expectedResult, actualResult);\n    }\n    \n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    \n        @Test\n        public void toLowerCaseTest() {\n            assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"));\n            assertEquals(\"world\", Lower.toLowerCase(\"World\"));\n        }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"Hello World\";\n        String expected = \"hello world\";\n        String result = Lower.toLowerCase(input);\n        assertEquals(expected, result, \"String should be converted to lowercase\");\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"));\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"Hello\";\n        String expected = \"hello\";\n        String actual = Lower.toLowerCase(input);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n        public void toLowerCaseTest() {\n            String input = \"Hello\";\n            String expected = \"hello\";\n            String actual = Lower.toLowerCase(input);\n            assertEquals(expected, actual);\n        }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    \n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"));\n    }\n    \n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello world\", Lower.toLowerCase(\"Hello World\"));\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"));\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"Hello World\";\n        String expectedOutput = \"hello world\";\n        String actualOutput = Lower.toLowerCase(input);\n        assertEquals(expectedOutput, actualOutput);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"HELLO\"));\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"this is a lowercase test\", Lower.toLowerCase(\"THIS IS A LOWERCASE TEST\"));\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"Hello\";\n        String expected = \"hello\";\n        String actual = Lower.toLowerCase(input);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"Hello World\";\n        String expectedOutput = \"hello world\";\n        String actualOutput = Lower.toLowerCase(input);\n        assertEquals(expectedOutput, actualOutput);\n    }\n    \n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "Lower",
        "method_name": "toLowerCase",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        String input = \"Hello\";\n        String expectedOutput = \"hello\";\n        String actualOutput = Lower.toLowerCase(input);\n        assertEquals(expectedOutput, actualOutput);\n    }\n}",
        "package_metric": 1.0,
        "class_metric": 60.0,
        "method_metric": 100.0,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"khoor\";\n        String cipherSmall = \"defghijklmnopqrstuvwxyzabc\";\n        String expectedResult = \"hello\";\n        String actualResult = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "package_metric": 1.65,
        "class_metric": 44.83,
        "method_metric": 92.86,
        "pitest": 44.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/ciphers",
        "package_name": "com.thealgorithms.ciphers",
        "class_name": "SimpleSubstitutionCipher",
        "method_name": "decode",
        "test_code": "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"khoor, zruog!\";\n        String cipherSmall = \"defghijklmnopqrstuvwxyzabc\";\n        assertEquals(\"hello, world!\", SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));\n    }\n}",
        "package_metric": 1.78,
        "class_metric": 48.28,
        "method_metric": 100.0,
        "pitest": 44.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/heaps",
        "package_name": "com.thealgorithms.datastructures.heaps",
        "class_name": "FibonacciHeap",
        "method_name": "insert",
        "test_code": "package com.thealgorithms.datastructures.heaps;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FibonacciHeapTest {\n    @Test\n    public void insertTest() {\n        FibonacciHeap heap = new FibonacciHeap();\n        heap.insert(5);\n        assertEquals(1, heap.size());\n    }\n}",
        "package_metric": 4.74,
        "class_metric": 11.18,
        "method_metric": 75.0,
        "pitest": 4.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/heaps",
        "package_name": "com.thealgorithms.datastructures.heaps",
        "class_name": "FibonacciHeap",
        "method_name": "insert",
        "test_code": "package com.thealgorithms.datastructures.heaps;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FibonacciHeapTest {\n    \n    @Test\n    public void insertTest() {\n        FibonacciHeap heap = new FibonacciHeap();\n        heap.insert(5);\n        assertEquals(1, heap.size());\n        assertTrue(heap.findMin().getKey() == 5);\n    }\n}",
        "package_metric": 5.15,
        "class_metric": 11.84,
        "method_metric": 75.0,
        "pitest": 5.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/heaps",
        "package_name": "com.thealgorithms.datastructures.heaps",
        "class_name": "FibonacciHeap",
        "method_name": "insert",
        "test_code": "package com.thealgorithms.datastructures.heaps;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FibonacciHeapTest {\n    @Test\n    public void insertTest() {\n        FibonacciHeap heap = new FibonacciHeap();\n        assertEquals(1, heap.insert(1).key);\n    }\n    \n}",
        "package_metric": 4.54,
        "class_metric": 10.53,
        "method_metric": 75.0,
        "pitest": 3.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/heaps",
        "package_name": "com.thealgorithms.datastructures.heaps",
        "class_name": "FibonacciHeap",
        "method_name": "insert",
        "test_code": "package com.thealgorithms.datastructures.heaps;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FibonacciHeapTest {\n    @Test\n    public void insertTest() {\n        FibonacciHeap heap = new FibonacciHeap();\n        heap.insert(5);\n        assertEquals(5, heap.findMin().getKey());\n    }\n}",
        "package_metric": 4.95,
        "class_metric": 11.18,
        "method_metric": 75.0,
        "pitest": 3.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n    public void pushTest() {\n        NodeStack<Integer> stack = new NodeStack<Integer>();\n        stack.push(1);\n        stack.push(2);\n        stack.push(3);\n        stack.push(4);\n        stack.push(5);\n        \n        assertEquals(5, stack.size());\n    }\n}",
        "package_metric": 12.56,
        "class_metric": 49.06,
        "method_metric": 100.0,
        "pitest": 37.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n    public void pushTest() {\n        NodeStack<Integer> testStack = new NodeStack<>();\n        testStack.push(1);\n        testStack.push(2);\n        testStack.push(3);\n        testStack.push(4);\n        assertEquals(4, testStack.size());\n        testStack.push(5);\n        assertEquals(5, testStack.size());\n    }\n}",
        "package_metric": 12.56,
        "class_metric": 49.06,
        "method_metric": 100.0,
        "pitest": 37.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n    public void pushTest() {\n        NodeStack<Integer> Stack = new NodeStack<Integer>();\n    \n        Stack.push(5);\n        Stack.push(3);\n        Stack.push(1);\n    \n        assertEquals(3,Stack.size());\n        assertEquals(false,Stack.isEmpty());\n        Stack.print();\n    }\n    \n}",
        "package_metric": 14.49,
        "class_metric": 56.6,
        "method_metric": 100.0,
        "pitest": 46.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n        public void pushTest() {\n            NodeStack<Integer> stack = new NodeStack<>();\n            stack.push(5);\n            stack.push(10);\n            stack.push(15);\n            assertEquals(3, stack.size());\n        }\n}",
        "package_metric": 12.56,
        "class_metric": 49.06,
        "method_metric": 100.0,
        "pitest": 37.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n    public void pushTest() {\n        NodeStack<Integer> nodeStack = new NodeStack<>();\n        nodeStack.push(5);\n        assertEquals(1, nodeStack.size());\n        nodeStack.push(10);\n        assertEquals(2, nodeStack.size());\n        assertEquals(10, nodeStack.peek());\n    }\n}",
        "package_metric": 13.53,
        "class_metric": 52.83,
        "method_metric": 100.0,
        "pitest": 40.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n    public void pushTest() {\n        NodeStack<Integer> stack = new NodeStack<>();\n        stack.push(5);\n        assertEquals(1, stack.size());\n    }\n}",
        "package_metric": 11.11,
        "class_metric": 43.4,
        "method_metric": 70.0,
        "pitest": 26.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n    public void pushTest() {\n        NodeStack<Integer> ns = new NodeStack<Integer>();\n        ns.push(5);\n        assertEquals(1, ns.size());\n    \n        ns.push(10);\n        assertEquals(2, ns.size());\n    \n        assertEquals(10, ns.peek());\n    \n        ns.pop();\n        assertEquals(1, ns.size());\n    \n        assertEquals(5, ns.peek());\n    }\n}",
        "package_metric": 16.43,
        "class_metric": 64.15,
        "method_metric": 100.0,
        "pitest": 60.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n    public void pushTest() {\n        NodeStack<Integer> ns = new NodeStack<>();\n        ns.push(5);\n        ns.push(10);\n        ns.push(15);\n        assertEquals(3, ns.size());\n        assertEquals(15, ns.peek());\n    }\n}",
        "package_metric": 13.53,
        "class_metric": 52.83,
        "method_metric": 100.0,
        "pitest": 43.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n    public void pushTest() {\n        NodeStack<Integer> stack = new NodeStack<>();\n        stack.push(5);\n        assertEquals(1, stack.size());\n        stack.push(10);\n        assertEquals(2, stack.size());\n    }\n}",
        "package_metric": 12.56,
        "class_metric": 49.06,
        "method_metric": 100.0,
        "pitest": 34.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n    public void pushTest() {\n        NodeStack<String> stack = new NodeStack<>();\n        stack.push(\"A\");\n        stack.push(\"B\");\n        stack.push(\"C\");\n        assertEquals(\"C\", stack.peek());\n    }\n}",
        "package_metric": 13.04,
        "class_metric": 50.94,
        "method_metric": 100.0,
        "pitest": 6.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/stacks",
        "package_name": "com.thealgorithms.datastructures.stacks",
        "class_name": "NodeStack",
        "method_name": "push",
        "test_code": "package com.thealgorithms.datastructures.stacks;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeStackTest {\n    @Test\n    public void pushTest() {\n        NodeStack<String> stack = new NodeStack<>();\n        stack.push(\"A\");\n        stack.push(\"B\");\n        assertEquals(\"B\", stack.peek());\n    }\n}",
        "package_metric": 13.04,
        "class_metric": 50.94,
        "method_metric": 100.0,
        "pitest": 6.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {1, 2, 3, 4, 5};\n        int expected = 3;\n        int actual = Average.average(numbers);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {3, 5, 8, 11, 14};\n        int expected = 8;\n        int actual = Average.average(numbers);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {5, 10, 15, 20};\n        int expected = 12;\n        int actual = Average.average(numbers);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {3, 6, 9};\n        int expected = 6;\n        int actual = Average.average(numbers);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] values = {2, 4, 6, 8, 10};\n        int expected = 6;\n        int actual = Average.average(values);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n        public void averageTest() {\n            int[] numbers = {1, 2, 3, 4, 5};\n            int result = Average.average(numbers);\n            assertEquals(3, result);\n        }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {2, 4, 6, 8, 10};\n        int expected = 6;\n        int actual = Average.average(numbers);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {2, 4, 6, 8, 10};\n        int expectedAverage = 6;\n        int actualAverage = Average.average(numbers);\n        assertEquals(expectedAverage, actualAverage);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {1, 2, 3, 4, 5};\n        int expectedAverage = 3;\n        int actualAverage = Average.average(numbers);\n        assertEquals(expectedAverage, actualAverage);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] arr = {5, 10, 15, 20};\n        assertEquals(12, Average.average(arr));\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] testNumbers = {5, 10, 15, 20};\n        assertEquals(12, Average.average(testNumbers));\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n       int[] numbers = {5, 10, 15, 20, 25};\n       int expected = 15;\n       int actual = Average.average(numbers);\n       assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {10, 20, 30, 40, 50};\n        int expected = 30;\n        int actual = Average.average(numbers);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] testArray = {2, 4, 6, 8};\n        assertEquals(5, Average.average(testArray));\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {1, 2, 3, 4, 5};\n        assertEquals(3, Average.average(numbers));\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {3, 5, 10, 6, 8};\n        assertEquals(6, Average.average(numbers));\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {10, 20, 30, 40, 50};\n        int expected = 30;\n        int actual = Average.average(numbers);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {1, 2, 3, 4, 5};\n        int expected = 3;\n        int result = Average.average(numbers);\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] testNumbers = {3, 5, 10, 15, 20};\n        int expectedAverage = 10;\n        int actualAverage = Average.average(testNumbers);\n        assertEquals(expectedAverage, actualAverage);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {1, 2, 3, 4, 5};\n        assertEquals(3, Average.average(numbers));\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] testNumbers = {5, 10, 15, 20, 25};\n        int result = Average.average(testNumbers);\n        assertEquals(15, result);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] testNumbers = {5, 10, 15, 20};\n        int expected = 12;\n        int actual = Average.average(testNumbers);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {10, 20, 30, 40, 50};\n        int expected = 30;\n        int result = Average.average(numbers);\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    \n    @Test\n    public void averageTest() {\n        int[] numbers = {3, 5, 7, 9, 11};\n        int expected = 7; // (3+5+7+9+11)/5 = 7\n        int actual = Average.average(numbers);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {1, 2, 3, 4, 5};\n        int expected = 3;\n        int actual = Average.average(numbers);\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] testArray = {5, 10, 15, 20, 25};\n        int expected = 15;\n        int result = Average.average(testArray);\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {10, 20, 30};\n        int expectedResult = 20;\n        int actualResult = Average.average(numbers);\n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n            int[] testArray = {5, 10, 15, 20};\n            int expectedAverage = 12; \n            assertEquals(expectedAverage, Average.average(testArray));\n            // Add any additional test cases as needed for different scenarios.\n    }\n    \n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {10, 20, 30, 40, 50};\n        int result = Average.average(numbers);\n        assertEquals(30, result);\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/maths",
        "package_name": "com.thealgorithms.maths",
        "class_name": "Average",
        "method_name": "average",
        "test_code": "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {5, 10, 15, 20, 25};\n        assertEquals(15, Average.average(numbers));\n    }\n}",
        "package_metric": 0.31,
        "class_metric": 38.46,
        "method_metric": 83.33,
        "pitest": 50.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "Graph",
        "method_name": "countGraphs",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.HashSet;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GraphTest {\n    @Test\n    public void countGraphsTest() {\n        Graph<Character> graphChars = new Graph<>();\n        graphChars.addEdge('a', 'b');\n        graphChars.addEdge('a', 'e');\n        graphChars.addEdge('b', 'e');\n        graphChars.addEdge('b', 'c');\n        graphChars.addEdge('c', 'd');\n        graphChars.addEdge('d', 'a');\n    \n        graphChars.addEdge('x', 'y');\n        graphChars.addEdge('x', 'z');\n    \n        graphChars.addEdge('w', 'w');\n    \n        assertEquals(3, graphChars.countGraphs());\n    }\n}",
        "package_metric": 4.75,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 90.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "Graph",
        "method_name": "countGraphs",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.HashSet;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GraphTest {\n    @Test\n    public void countGraphsTest() {\n        Graph<Integer> graphInts = new Graph<>();\n    \n        // Graph 1\n        graphInts.addEdge(1, 2);\n        graphInts.addEdge(2, 3);\n        graphInts.addEdge(2, 4);\n        graphInts.addEdge(3, 5);\n    \n        graphInts.addEdge(7, 8);\n        graphInts.addEdge(8, 10);\n        graphInts.addEdge(10, 8);\n    \n        assertEquals(2, graphInts.countGraphs());\n    }\n}",
        "package_metric": 4.75,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 90.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "Graph",
        "method_name": "countGraphs",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.HashSet;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GraphTest {\n    @Test\n    public void countGraphsTest() {\n        Graph<Integer> graphInts = new Graph<>();\n        graphInts.addEdge(1, 2);\n        graphInts.addEdge(2, 3);\n        graphInts.addEdge(2, 4);\n        graphInts.addEdge(3, 5);\n        graphInts.addEdge(7, 8);\n        graphInts.addEdge(8, 10);\n        graphInts.addEdge(10, 8);\n        assertEquals(2, graphInts.countGraphs());\n    }\n}",
        "package_metric": 4.75,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 90.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "Graph",
        "method_name": "countGraphs",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.HashSet;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GraphTest {\n    @Test\n    public void countGraphsTest() {\n        Graph<Integer> graph = new Graph<>();\n        graph.addEdge(1, 2);\n        graph.addEdge(2, 3);\n        graph.addEdge(4, 5);\n        assertEquals(2, graph.countGraphs());\n    }\n    \n}",
        "package_metric": 4.63,
        "class_metric": 97.06,
        "method_metric": 100.0,
        "pitest": 80.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "Graph",
        "method_name": "countGraphs",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.HashSet;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GraphTest {\n    @Test\n    public void countGraphsTest() {\n        Graph graph = new Graph();\n        graph.addEdge(\"A\", \"B\");\n        graph.addEdge(\"B\", \"C\");\n        graph.addEdge(\"D\", \"E\");\n        assertEquals(2, graph.countGraphs());\n    }\n}",
        "package_metric": 4.63,
        "class_metric": 97.06,
        "method_metric": 100.0,
        "pitest": 80.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "Graph",
        "method_name": "countGraphs",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.HashSet;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GraphTest {\n    @Test\n    public void countGraphsTest() {\n        Graph graph = new Graph();\n        graph.addEdge(\"A\", \"B\");\n        graph.addEdge(\"B\", \"C\");\n        graph.addEdge(\"C\", \"A\");\n        assertEquals(1, graph.countGraphs());\n    }\n}",
        "package_metric": 4.75,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 80.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "Graph",
        "method_name": "countGraphs",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.HashSet;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GraphTest {\n    @Test\n    public void countGraphsTest() {\n        Graph graph = new Graph();\n        graph.addEdge(\"A\", \"B\");\n        graph.addEdge(\"B\", \"C\");\n        \n        int actualResult = graph.countGraphs();\n        assertEquals(1, actualResult);\n    }\n}",
        "package_metric": 4.63,
        "class_metric": 97.06,
        "method_metric": 100.0,
        "pitest": 70.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "Graph",
        "method_name": "countGraphs",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.HashSet;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GraphTest {\n    @Test\n    public void countGraphsTest() {\n        Graph graph = new Graph();\n        graph.addEdge(\"A\", \"B\");\n        graph.addEdge(\"B\", \"C\");\n        graph.addEdge(\"C\", \"D\");\n        graph.addEdge(\"E\", \"F\");\n        assertEquals(2, graph.countGraphs());\n    }\n}",
        "package_metric": 4.63,
        "class_metric": 97.06,
        "method_metric": 100.0,
        "pitest": 90.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/datastructures/graphs",
        "package_name": "com.thealgorithms.datastructures.graphs",
        "class_name": "Graph",
        "method_name": "countGraphs",
        "test_code": "package com.thealgorithms.datastructures.graphs;\n\nimport java.util.Set;\n\n\nimport java.util.HashSet;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GraphTest {\n    @Test\n    public void countGraphsTest() {\n        Graph graph = new Graph();\n        \n        graph.addEdge(\"A\", \"B\");\n        graph.addEdge(\"B\", \"C\");\n        graph.addEdge(\"C\",\"D\");\n        graph.addEdge(\"E\",\"F\");\n        \n        int result = graph.countGraphs();\n        assertEquals(2, result);\n    }\n}",
        "package_metric": 4.63,
        "class_metric": 97.06,
        "method_metric": 100.0,
        "pitest": 90.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/backtracking",
        "package_name": "com.thealgorithms.backtracking",
        "class_name": "FloodFill",
        "method_name": "floodFill",
        "test_code": "package com.thealgorithms.backtracking;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FloodFillTest {\n    @Test\n    public void floodFillTest() {\n        int[][] image = {{1, 1, 1, 1}, \n                         {1, 1, 1, 0}, \n                         {1, 0, 0, 1}, \n                         {1, 2, 1, 1}};\n        int x = 1;\n        int y = 1;\n        int newColor = 2;\n        int oldColor = 1;\n        \n        FloodFill.floodFill(image, x, y, newColor, oldColor);\n        assertEquals(2, image[1][1]);\n        assertEquals(2, image[1][2]);\n    }\n}",
        "package_metric": 4.78,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 31.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/backtracking",
        "package_name": "com.thealgorithms.backtracking",
        "class_name": "FloodFill",
        "method_name": "floodFill",
        "test_code": "package com.thealgorithms.backtracking;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FloodFillTest {\n    @Test\n    public void floodFillTest() {\n        int[][] image = {{1, 2, 1, 3}, {2, 2, 2, 2}, {3, 3, 1, 3}};\n        int x = 1;\n        int y = 2;\n        int newColor = 4;\n        int oldColor = 2;\n    \n        FloodFill.floodFill(image, x, y, newColor, oldColor);\n    \n        int[][] expected = {{1, 4, 1, 3}, {4, 4, 4, 4}, {3, 3, 1, 3}};\n    \n        assertArrayEquals(expected, image);\n    }\n}",
        "package_metric": 4.78,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 41.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/backtracking",
        "package_name": "com.thealgorithms.backtracking",
        "class_name": "FloodFill",
        "method_name": "floodFill",
        "test_code": "package com.thealgorithms.backtracking;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FloodFillTest {\n    @Test\n    public void floodFillTest() {\n        int [][] image = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int x = 0;\n        int y = 0;\n        int newColor = 10;\n        int oldColor = 1;\n        final int expectedOutput[][] = {{10, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        FloodFill.floodFill(image, x, y, newColor, oldColor);\n        assertArrayEquals(expectedOutput, image);\n    }\n}",
        "package_metric": 4.78,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 31.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/backtracking",
        "package_name": "com.thealgorithms.backtracking",
        "class_name": "FloodFill",
        "method_name": "floodFill",
        "test_code": "package com.thealgorithms.backtracking;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FloodFillTest {\n    @Test\n    public void floodFillTest() {\n        int[][] image = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}};\n        int x = 1;\n        int y = 1;\n        int newColor = 2;\n        int oldColor = 1;\n    \n        FloodFill.floodFill(image, x, y, newColor, oldColor);\n    \n        assertArrayEquals(new int[][]{{0, 0, 0}, {0, 2, 0}, {0, 0, 0}}, image);\n    }\n}",
        "package_metric": 4.78,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 25.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/backtracking",
        "package_name": "com.thealgorithms.backtracking",
        "class_name": "FloodFill",
        "method_name": "floodFill",
        "test_code": "package com.thealgorithms.backtracking;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FloodFillTest {\n    @Test\n    public void floodFillTest() {\n        int[][] image = {\n            {1, 1, 1, 1, 1},\n            {1, 1, 1, 1, 0},\n            {1, 0, 0, 1, 1},\n            {1, 1, 1, 1, 1}\n        };\n        int x = 1;\n        int y = 1;\n        int newColor = 2;\n        int oldColor = image[x][y];\n        FloodFill.floodFill(image, x, y, newColor, oldColor);\n        // After the flood-fill operation, the modified image should be asserted\n        int[][] expected = {\n            {2, 2, 2, 2, 2},\n            {2, 2, 2, 2, 0},\n            {2, 0, 0, 2, 2},\n            {2, 2, 2, 2, 2}\n        };\n        // Asserting the expected modified image with the resultant after flood-fill operation\n        assertArrayEquals(expected, image);\n    }\n    \n}",
        "package_metric": 4.78,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 38.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/backtracking",
        "package_name": "com.thealgorithms.backtracking",
        "class_name": "FloodFill",
        "method_name": "floodFill",
        "test_code": "package com.thealgorithms.backtracking;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FloodFillTest {\n    @Test\n        public void floodFillTest() {\n            int[][] image = {\n                {1, 1, 1, 1, 1},\n                {1, 1, 1, 0, 1},\n                {1, 0, 0, 0, 1},\n                {1, 1, 1, 1, 1}\n            };\n            int x = 2;\n            int y = 2;\n            int newColor = 2;\n            int oldColor = 0;\n            \n            FloodFill.floodFill(image, x, y, newColor, oldColor);\n            \n            int[][] expected = {\n                {1, 1, 1, 1, 1},\n                {1, 1, 1, 2, 1},\n                {1, 2, 2, 2, 1},\n                {1, 1, 1, 1, 1}\n            };\n            \n            assertArrayEquals(expected, image);\n        }\n}",
        "package_metric": 4.78,
        "class_metric": 100.0,
        "method_metric": 100.0,
        "pitest": 31.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "HammingDistance",
        "method_name": "calculateHammingDistance",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HammingDistanceTest {\n    @Test\n    public void calculateHammingDistanceTest() {\n            String s1 = \"karolin\";\n            String s2 = \"kathrin\";\n            try {\n                assertEquals(3, HammingDistance.calculateHammingDistance(s1, s2));\n            } catch (Exception e) {\n                System.out.println(e.getMessage());\n            }\n        }\n    \n}",
        "package_metric": 1.16,
        "class_metric": 77.78,
        "method_metric": 87.5,
        "pitest": 57.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "HammingDistance",
        "method_name": "calculateHammingDistance",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HammingDistanceTest {\n    @Test\n    \n    public void calculateHammingDistanceTest() {\n        try {\n            int result = HammingDistance.calculateHammingDistance(\"karolin\", \"kathrin\");\n            assertEquals(3, result);\n        } catch (Exception e) {\n            fail(\"An exception should not have been thrown\");\n        }\n    }\n    \n}",
        "package_metric": 1.16,
        "class_metric": 77.78,
        "method_metric": 87.5,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "HammingDistance",
        "method_name": "calculateHammingDistance",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HammingDistanceTest {\n    @Test\n    public void calculateHammingDistanceTest() {\n        String s1 = \"karolin\";\n        String s2 = \"kathrin\";\n        try {\n            int result = HammingDistance.calculateHammingDistance(s1, s2);\n            assertEquals(3, result);\n        } catch (Exception e) {\n            fail(\"Exception not expected\" + e.getMessage());\n        }\n    }\n}",
        "package_metric": 1.16,
        "class_metric": 77.78,
        "method_metric": 87.5,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "HammingDistance",
        "method_name": "calculateHammingDistance",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HammingDistanceTest {\n    @Test\n    public void calculateHammingDistanceTest() {\n        try {\n            String s1 = \"karolin\";\n            String s2 = \"kathrin\";\n            int expected = 3;\n            int actual = HammingDistance.calculateHammingDistance(s1, s2);\n            assertEquals(expected, actual);\n        } catch (Exception e) {\n            fail(\"An exception was thrown\");\n        }\n    }\n}",
        "package_metric": 1.16,
        "class_metric": 77.78,
        "method_metric": 87.5,
        "pitest": 100.0
    },
    {
        "project_name": "Java",
        "file_path": "/home/joseph/java_project/Java/src/test/java/com/thealgorithms/strings",
        "package_name": "com.thealgorithms.strings",
        "class_name": "HammingDistance",
        "method_name": "calculateHammingDistance",
        "test_code": "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HammingDistanceTest {\n    @Test\n    public void calculateHammingDistanceTest() {\n        try {\n            int distance = HammingDistance.calculateHammingDistance(\"abcde\", \"abcdf\");\n            assertEquals(1, distance);\n        } catch (Exception e) {\n            fail(\"Unexpected exception occurred\");\n        }\n    }\n}",
        "package_metric": 1.16,
        "class_metric": 77.78,
        "method_metric": 87.5,
        "pitest": 100.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        ((DefaultPieDataset) dataset).setValue(\"Category1\", 10);\n        ((DefaultPieDataset) dataset).setValue(\"Category2\", 15);\n        double expected = 25.0;\n        double result = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(expected, result, 0);\n    }\n    \n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"A\", 1.0);\n        dataset.setValue(\"B\", 2.0);\n        dataset.setValue(\"C\", 3.0);\n        double expected = 6.0;\n        double result = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n            DefaultPieDataset dataset = new DefaultPieDataset();\n            dataset.setValue(\"A\", 10);\n            dataset.setValue(\"B\", 20);\n            double total = DatasetUtils.calculatePieDatasetTotal(dataset);\n            assertEquals(30, total);\n    }\n    \n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"A\", 10);\n        dataset.setValue(\"B\", 20);\n        dataset.setValue(\"C\", 30);\n        double total = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(60, total);\n    }\n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"A\", 10);\n        dataset.setValue(\"B\", 20);\n        dataset.setValue(\"C\", 30);\n        double result = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(60.0, result, 0.001);\n    }\n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        ((DefaultPieDataset) dataset).setValue(\"A\", 10.0);\n        ((DefaultPieDataset) dataset).setValue(\"B\", 20.0);\n        ((DefaultPieDataset) dataset).setValue(\"C\", 30.0);\n        double result = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(60.0, result, 0.0001);\n    }\n    \n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Create a test PieDataset\n        DefaultPieDataset testDataset = new DefaultPieDataset();\n        testDataset.setValue(\"A\", 10);\n        testDataset.setValue(\"B\", 20);\n        testDataset.setValue(\"C\", 30);\n        \n        // Call the method being tested\n        double result = DatasetUtils.calculatePieDatasetTotal(testDataset);\n        \n        // Verify the result\n        assertEquals(60, result, 0.0001);\n    }\n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"A\", 10);\n        dataset.setValue(\"B\", 20);\n        dataset.setValue(\"C\", 30);\n        \n        double total = DatasetUtils.calculatePieDatasetTotal(dataset);\n        \n        assertEquals(60, total, 0.0);\n    }\n    \n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Create a sample PieDataset\n        DefaultPieDataset pieDataset = new DefaultPieDataset();\n        pieDataset.setValue(\"A\", 10);\n        pieDataset.setValue(\"B\", 20);\n        pieDataset.setValue(\"C\", 30);\n        \n        // Test the calculatePieDatasetTotal method\n        double total = DatasetUtils.calculatePieDatasetTotal(pieDataset);\n        assertEquals(60, total);\n    }\n    \n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"A\", 25);\n        dataset.setValue(\"B\", 35);\n        double result = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(60.0, result);\n    }\n    \n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"A\", 25.0);\n        dataset.setValue(\"B\", 50.0);\n        dataset.setValue(\"C\", 75.0);\n        double total = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(150.0, total, 0.001);\n    }\n    \n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Category 1\", 100);\n        dataset.setValue(\"Category 2\", 200);\n        double result = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(300, result);\n    }\n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Java\", 50);\n        dataset.setValue(\"Python\", 30);\n        dataset.setValue(\"C++\", 20);\n        \n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n        \n        assertEquals(100.0, totalValue);\n    }\n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/general",
        "package_name": "org.jfree.data.general",
        "class_name": "DatasetUtils",
        "method_name": "calculatePieDatasetTotal",
        "test_code": "package org.jfree.data.general;\n\nimport org.jfree.data.xy.XYZDataset;\n\n\nimport org.jfree.data.xy.XYSeriesCollection;\n\n\nimport org.jfree.data.xy.XYSeries;\n\n\nimport org.jfree.data.xy.XYRangeInfo;\n\n\nimport org.jfree.data.xy.XYDomainInfo;\n\n\nimport org.jfree.data.xy.XYDataset;\n\n\nimport org.jfree.data.xy.TableXYDataset;\n\n\nimport org.jfree.data.xy.OHLCDataset;\n\n\nimport org.jfree.data.xy.IntervalXYDataset;\n\n\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\n\n\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\n\n\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\n\n\nimport org.jfree.data.function.Function2D;\n\n\nimport org.jfree.data.category.IntervalCategoryDataset;\n\n\nimport org.jfree.data.category.DefaultCategoryDataset;\n\n\nimport org.jfree.data.category.CategoryRangeInfo;\n\n\nimport org.jfree.data.category.CategoryDataset;\n\n\nimport org.jfree.data.RangeInfo;\n\n\nimport org.jfree.data.Range;\n\n\nimport org.jfree.data.KeyedValues;\n\n\nimport org.jfree.data.KeyToGroupMap;\n\n\nimport org.jfree.data.DomainOrder;\n\n\n\nimport org.jfree.data.DomainInfo;\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.jfree.chart.util.ArrayUtils;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Category A\", 20);\n        dataset.setValue(\"Category B\", 30);\n        dataset.setValue(\"Category C\", 50);\n        \n        double result = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(100, result, 0.001);\n    }\n    \n}",
        "package_metric": 3.22,
        "class_metric": 1.69,
        "method_metric": 100.0,
        "pitest": 1.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(1.0);\n        values.add(2.0);\n        values.add(3.0);\n        values.add(4.0);\n        \n        double expected = 1.5; \n        double actual = BoxAndWhiskerCalculator.calculateQ1(values);\n        \n        assertEquals(expected, actual, 0.001);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 10.14,
        "method_metric": 70.0,
        "pitest": 9.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(1.0);\n        values.add(3.0);\n        values.add(5.0);\n        values.add(7.0);\n        values.add(9.0);\n        double q1 = BoxAndWhiskerCalculator.calculateQ1(values);\n        assertEquals(3.0, q1, 0.0001);\n    }\n}",
        "package_metric": 2.08,
        "class_metric": 11.59,
        "method_metric": 80.0,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(10.0);\n        values.add(20.0);\n        values.add(30.0);\n        \n        double result = BoxAndWhiskerCalculator.calculateQ1(values);\n        \n        assertEquals(15.0, result, 0.001);\n    }\n    \n}",
        "package_metric": 2.01,
        "class_metric": 11.59,
        "method_metric": 80.0,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> testValues = new ArrayList<>();\n        testValues.add(10.0);\n        testValues.add(20.0);\n        testValues.add(30.0);\n        testValues.add(40.0);\n        \n        double expectedQ1 = 15.0;\n        double actualQ1 = BoxAndWhiskerCalculator.calculateQ1(testValues);\n        assertEquals(expectedQ1, actualQ1, 0.0001);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 10.14,
        "method_metric": 70.0,
        "pitest": 9.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> testValues = new ArrayList<>();\n        testValues.add(1.0);\n        testValues.add(2.0);\n        testValues.add(3.0);\n        testValues.add(4.0);\n        testValues.add(5.0);\n        \n        double q1 = BoxAndWhiskerCalculator.calculateQ1(testValues);\n        \n        assertEquals(2.0, q1);\n    }\n    \n}",
        "package_metric": 2.08,
        "class_metric": 11.59,
        "method_metric": 80.0,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(2.0);\n        values.add(4.0);\n        values.add(6.0);\n        values.add(8.0);\n        double result = BoxAndWhiskerCalculator.calculateQ1(values);\n        assertEquals(3.0, result, 0.001);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 10.14,
        "method_metric": 70.0,
        "pitest": 9.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(1.0);\n        values.add(2.0);\n        values.add(3.0);\n        double result = BoxAndWhiskerCalculator.calculateQ1(values);\n        assertEquals(1.5, result, 0.0001);\n    }\n}",
        "package_metric": 2.01,
        "class_metric": 11.59,
        "method_metric": 80.0,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(2.0);\n        values.add(4.0);\n        values.add(6.0);\n        values.add(8.0);\n        Collections.sort(values);\n    \n        double expected = 3.0;\n        double result = BoxAndWhiskerCalculator.calculateQ1(values);\n    \n        assertEquals(expected, result, 0.0001);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 10.14,
        "method_metric": 70.0,
        "pitest": 9.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(6.0);\n        values.add(2.0);\n        values.add(3.0);\n        values.add(7.0);\n        values.add(5.0);\n        \n        double result = BoxAndWhiskerCalculator.calculateQ1(values);\n        \n        assertEquals(3.0, result, 0.0001);\n    }\n}",
        "package_metric": 2.08,
        "class_metric": 11.59,
        "method_metric": 80.0,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    \n        @Test\n        public void calculateQ1Test() {\n            List<Double> values = new ArrayList<>();\n            values.add(10.0);\n            values.add(20.0);\n            values.add(30.0);\n            \n            double result = BoxAndWhiskerCalculator.calculateQ1(values);\n            \n            assertEquals(15.0, result, 0.0001);\n        }\n}",
        "package_metric": 2.01,
        "class_metric": 11.59,
        "method_metric": 80.0,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(1.0);\n        values.add(2.0);\n        values.add(3.0);\n        double result = BoxAndWhiskerCalculator.calculateQ1(values);\n        assertEquals(1.5, result, 0.0001); // Replace 1.5 with the expected Q1 value\n    }\n}",
        "package_metric": 2.01,
        "class_metric": 11.59,
        "method_metric": 80.0,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(1.0);\n        values.add(2.0);\n        values.add(3.0);\n        double result = BoxAndWhiskerCalculator.calculateQ1(values);\n        assertEquals(1.5, result, 0.001);\n    }\n}",
        "package_metric": 2.01,
        "class_metric": 11.59,
        "method_metric": 80.0,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(1.0);\n        values.add(2.0);\n        values.add(3.0);\n        double actual = BoxAndWhiskerCalculator.calculateQ1(values);\n        double expected = 1.5;\n        assertEquals(expected, actual, 0.001);\n    }\n}",
        "package_metric": 2.01,
        "class_metric": 11.59,
        "method_metric": 80.0,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> values = new ArrayList<>();\n        values.add(10.0);\n        values.add(20.0);\n        values.add(30.0);\n        values.add(40.0);\n      \n        double result = BoxAndWhiskerCalculator.calculateQ1(values);\n      \n        assertEquals(15.0, result, 0.00001);\n    }\n}",
        "package_metric": 1.94,
        "class_metric": 10.14,
        "method_metric": 70.0,
        "pitest": 9.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "BoxAndWhiskerCalculator",
        "method_name": "calculateQ1",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.chart.util.Args;\n\n\nimport java.util.List;\n\n\nimport java.util.Iterator;\n\n\nimport java.util.Collections;\n\n\n\nimport java.util.ArrayList;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BoxAndWhiskerCalculatorTest {\n    @Test\n    public void calculateQ1Test() {\n        List<Double> testList = new ArrayList<>();\n        testList.add(1.0);\n        testList.add(2.0);\n        testList.add(3.0);\n        double result = BoxAndWhiskerCalculator.calculateQ1(testList);\n        assertEquals(1.5, result, 0.0001);\n    }\n}",
        "package_metric": 2.01,
        "class_metric": 11.59,
        "method_metric": 80.0,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "Regression",
        "method_name": "getPowerRegression",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.data.xy.XYDataset;\n\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = {{1, 1}, {2, 4}, {3, 9}, {4, 16}, {5, 25}};\n        double[] expected = {1.0, 2.0};\n        double[] result = Regression.getPowerRegression(data);\n        assertArrayEquals(expected, result, 0.0001);\n    }\n}",
        "package_metric": 1.65,
        "class_metric": 13.37,
        "method_metric": 95.83,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "Regression",
        "method_name": "getPowerRegression",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.data.xy.XYDataset;\n\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = {{2, 4}, {3, 9}, {4, 16}, {5, 25}};\n        double[] expected = {1.0, 2.0};\n        double[] result = Regression.getPowerRegression(data);\n        assertArrayEquals(expected, result, 0.0001);\n    }\n}",
        "package_metric": 1.65,
        "class_metric": 13.37,
        "method_metric": 95.83,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "Regression",
        "method_name": "getPowerRegression",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.data.xy.XYDataset;\n\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = {{1, 1}, {2, 4}, {3, 9}, {4, 16}};\n        double[] expected = {1, 2};\n        double[] result = Regression.getPowerRegression(data);\n        assertArrayEquals(expected, result, 0.0001);\n    }\n}",
        "package_metric": 1.65,
        "class_metric": 13.37,
        "method_metric": 95.83,
        "pitest": 11.0
    },
    {
        "project_name": "jfreechart",
        "file_path": "/home/joseph/java_project/jfreechart/src/test/java/org/jfree/data/statistics",
        "package_name": "org.jfree.data.statistics",
        "class_name": "Regression",
        "method_name": "getPowerRegression",
        "test_code": "package org.jfree.data.statistics;\n\nimport org.jfree.data.xy.XYDataset;\n\n\n\nimport org.jfree.chart.util.Args;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = {{2, 4}, {3, 9}, {4, 16}, {5, 25}};\n        double[] expected = {1.000, 2.000};\n        double[] result = Regression.getPowerRegression(data);\n        assertArrayEquals(expected, result, 0.001);\n    }\n    \n}",
        "package_metric": 1.65,
        "class_metric": 13.37,
        "method_metric": 95.83,
        "pitest": 11.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "PriorRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        // Complete the source code for the PriorRegionTest\n        int priorRegion = Blobs.PriorRegion(0, 1, 100.0, 500.0, 0);\n        assertEquals(-1, priorRegion); // Expected output is -1\n    }\n    \n}",
        "package_metric": 0.26,
        "class_metric": 9.52,
        "method_metric": 90.91,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "PriorRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int Parent = 2;\n        int Color = 1;\n        double MinArea = 10.0;\n        double MaxArea = 20.0;\n        int Label = 5;\n        \n        int result = Blobs.PriorRegion(Parent, Color, MinArea, MaxArea, Label);\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.25,
        "class_metric": 9.23,
        "method_metric": 81.82,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "PriorRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int Parent = 1;\n        int Color = 1;\n        double MinArea = 1.0;\n        double MaxArea = 10.0;\n        int Label = 0; // Example label value\n    \n        int expected = -1; // Example expected value\n    \n        int result = Blobs.PriorRegion(Parent, Color, MinArea, MaxArea, Label);\n    \n        assertEquals(expected, result);\n    }\n}",
        "package_metric": 0.25,
        "class_metric": 9.23,
        "method_metric": 81.82,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "PriorRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int Parent = 1;\n        int Color = 0;\n        double MinArea = 10.0;\n        double MaxArea = 100.0;\n        int Label = 5;\n        int result = Blobs.PriorRegion(Parent, Color, MinArea, MaxArea, Label);\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.25,
        "class_metric": 9.23,
        "method_metric": 81.82,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "PriorRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int label = 1;\n        int result = Blobs.PriorRegion(1, 1, 0.0, 100.0, label);\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.25,
        "class_metric": 9.23,
        "method_metric": 81.82,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "PriorRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int result = Blobs.PriorRegion(0, 1, 10.0, 20.0, 1);\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.26,
        "class_metric": 9.52,
        "method_metric": 90.91,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "PriorRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int result = Blobs.PriorRegion(1, 2, 3.0, 4.0, 5);\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.25,
        "class_metric": 9.23,
        "method_metric": 81.82,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "PriorRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int expected = -1; // Since PriorRegion() returns -1 when there is no match\n        int actual = Blobs.PriorRegion(0, 1, 10.0, 100.0, 1); // Example input values\n        assertEquals(expected, actual);\n    }\n}",
        "package_metric": 0.26,
        "class_metric": 9.52,
        "method_metric": 90.91,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "PriorRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int result = Blobs.PriorRegion(5, 1, 10.0, 50.0, 3);\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.25,
        "class_metric": 9.23,
        "method_metric": 81.82,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "PriorRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int parent = 5;\n        int color = 3;\n        double minArea = 25.5;\n        double maxArea = 100.0;\n        int label = 2;\n        \n        int result = Blobs.PriorRegion(parent, color, minArea, maxArea, label);\n        \n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.25,
        "class_metric": 9.23,
        "method_metric": 81.82,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "ObjectFinder",
        "method_name": "locatePlanarObject",
        "test_code": "package org.bytedeco.javacv;\n\nimport java.util.logging.Logger;\n\n\nimport java.util.ArrayList;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\n\nimport java.nio.ByteBuffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ObjectFinderTest {\n    @Test\n    public void locatePlanarObjectTest() {\n        // Arrange\n        // Create the necessary objects and parameters for the test\n        \n        // Act\n        // Call the `locatePlanarObject` method with the necessary parameters\n        \n        // Assert\n        // Check the output and compare with expected results\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "cloneBufferArray",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneBufferArrayTest() {\n        Buffer[] srcBuffers = new Buffer[3];\n        Buffer[] clonedBuffers = new Buffer[3];\n        srcBuffers[0] = ByteBuffer.allocate(10);\n        srcBuffers[1] = ShortBuffer.allocate(10);\n        srcBuffers[2] = IntBuffer.allocate(10);\n    \n        // Add test assertions here\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "RealSenseFrameGrabber",
        "method_name": "grab",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.librealsense.global.RealSense;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.Loader;\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.ByteOrder;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.io.File;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RealSenseFrameGrabberTest {\n    @Test\n    public void grabTest() throws Exception {\n        // Write a test case to cover the grab() method in the RealSenseFrameGrabber class\n    }\n    \n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "JavaCV",
        "method_name": "homogToRt",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.opencv.global.opencv_imgproc;\n\n\nimport org.bytedeco.opencv.global.opencv_core;\n\n\nimport java.util.Arrays;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\n\nimport java.nio.ByteBuffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JavaCVTest {\n    @Test\n    public void homogToRtTest() {\n        // Fill in the test case here\n    }\n}",
        "package_metric": 0,
        "class_metric": 0,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "NextRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void NextRegionTest() {\n        int result = Blobs.NextRegion(1, 0, 10.0, 100.0, 0);\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.25,
        "class_metric": 9.23,
        "method_metric": 81.82,
        "pitest": 2.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Blobs",
        "method_name": "NextRegion",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void NextRegionTest() {\n        int result = Blobs.NextRegion(1, 2, 10.0, 50.0, 1);\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.22,
        "class_metric": 8.04,
        "method_metric": 45.45,
        "pitest": 1.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        Frame originalFrame = new Frame();\n        // Set up originalFrame with necessary parameters\n        // ...\n    \n        Frame clonedFrame = originalFrame.clone();\n    \n        // Add assertions to compare originalFrame and clonedFrame values\n        // ...\n    }\n}",
        "package_metric": 0.16,
        "class_metric": 13.16,
        "method_metric": 72.0,
        "pitest": 4.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        Frame frame = new Frame();\n        Frame clonedFrame = frame.clone();\n        assertEquals(frame.imageWidth, clonedFrame.imageWidth);\n        assertEquals(frame.imageHeight, clonedFrame.imageHeight);\n        assertEquals(frame.imageDepth, clonedFrame.imageDepth);\n        assertEquals(frame.imageChannels, clonedFrame.imageChannels);\n        assertEquals(frame.imageStride, clonedFrame.imageStride);\n        assertEquals(frame.keyFrame, clonedFrame.keyFrame);\n        assertEquals(frame.pictType, clonedFrame.pictType);\n        assertEquals(frame.streamIndex, clonedFrame.streamIndex);\n        assertEquals(frame.type, clonedFrame.type);\n        assertEquals(frame.samples, clonedFrame.samples);\n        assertEquals(frame.data, clonedFrame.data);\n        assertEquals(frame.timestamp, clonedFrame.timestamp);\n    }\n}",
        "package_metric": 0.16,
        "class_metric": 13.16,
        "method_metric": 72.0,
        "pitest": 5.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        Frame frame = new Frame();\n        Frame newFrame = frame.clone();\n        assertNotNull(newFrame);\n    }\n}",
        "package_metric": 0.16,
        "class_metric": 13.16,
        "method_metric": 72.0,
        "pitest": 5.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        Frame frame = new Frame();\n        // Initialize frame with required data\n        // Call the clone() method\n        // Assert the expected output with the actual output\n    }\n}",
        "package_metric": 0.02,
        "class_metric": 1.32,
        "method_metric": 0,
        "pitest": 0.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        Frame frame = new Frame();\n        Frame cloneFrame = frame.clone();\n        // Add assertions for the cloned frame properties here\n        assertEquals(frame.imageWidth, cloneFrame.imageWidth);\n        assertEquals(frame.imageHeight, cloneFrame.imageHeight);\n        // Add more assertions for other properties\n    }\n}",
        "package_metric": 0.16,
        "class_metric": 13.16,
        "method_metric": 72.0,
        "pitest": 5.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        Frame frame = new Frame();\n        Frame clonedFrame = frame.clone();\n        assertNotNull(clonedFrame);\n    }\n}",
        "package_metric": 0.16,
        "class_metric": 13.16,
        "method_metric": 72.0,
        "pitest": 5.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        // Create a new Frame object\n        Frame frame = new Frame();\n    \n        // Set attributes to the frame object\n        frame.imageWidth = 640;\n        frame.imageHeight = 480;\n        frame.imageDepth = Frame.DEPTH_BYTE;\n        frame.imageChannels = 3;\n        frame.imageStride = 1920;\n        frame.keyFrame = true;\n        frame.pictType = 'I';\n        frame.streamIndex = 1;\n        frame.type = Frame.Type.VIDEO;\n        frame.timestamp = 123456789;\n    \n        // Create a clone of the frame object\n        Frame clonedFrame = frame.clone();\n    \n        // Assert that the cloned frame has the same attributes as the original frame\n        assertEquals(frame.imageWidth, clonedFrame.imageWidth);\n        assertEquals(frame.imageHeight, clonedFrame.imageHeight);\n        assertEquals(frame.imageDepth, clonedFrame.imageDepth);\n        assertEquals(frame.imageChannels, clonedFrame.imageChannels);\n        assertEquals(frame.imageStride, clonedFrame.imageStride);\n        assertEquals(frame.keyFrame, clonedFrame.keyFrame);\n        assertEquals(frame.pictType, clonedFrame.pictType);\n        assertEquals(frame.streamIndex, clonedFrame.streamIndex);\n        assertEquals(frame.type, clonedFrame.type);\n        assertEquals(frame.timestamp, clonedFrame.timestamp);\n    }\n    \n}",
        "package_metric": 0.21,
        "class_metric": 13.16,
        "method_metric": 72.0,
        "pitest": 5.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        Frame frame = new Frame();\n        Frame clonedFrame = frame.clone();\n        // Add assertions for the expected properties of the cloned frame\n        assertNotNull(clonedFrame);\n        assertEquals(frame.imageWidth, clonedFrame.imageWidth);\n        assertEquals(frame.imageHeight, clonedFrame.imageHeight);\n        // Add more assertions for other properties of the cloned frame\n    }\n}",
        "package_metric": 0.16,
        "class_metric": 13.16,
        "method_metric": 72.0,
        "pitest": 5.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        // Create a new Frame\n        Frame originalFrame = new Frame();\n        // Populate the originalFrame with data\n        // ... (code to populate the originalFrame with data)\n        // Clone the originalFrame\n        Frame clonedFrame = originalFrame.clone();\n        // Assert that the clonedFrame is not the same as the originalFrame\n        assertNotSame(originalFrame, clonedFrame);\n        // Add additional assertions to check that the clonedFrame contains the expected data\n        // ... (additional assertions)\n    }\n    \n}",
        "package_metric": 0.16,
        "class_metric": 13.16,
        "method_metric": 72.0,
        "pitest": 4.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        Frame frame = new Frame();\n        Frame newFrame = frame.clone();\n        // Add assertion here to compare newFrame with the original frame\n        // Example: assertEquals(frame.<attribute>, newFrame.<attribute>);\n    }\n}",
        "package_metric": 0.16,
        "class_metric": 13.16,
        "method_metric": 72.0,
        "pitest": 4.0
    },
    {
        "project_name": "javacv",
        "file_path": "/home/joseph/java_project/javacv/src/test/java/org/bytedeco/javacv",
        "package_name": "org.bytedeco.javacv",
        "class_name": "Frame",
        "method_name": "clone",
        "test_code": "package org.bytedeco.javacv;\n\nimport org.bytedeco.javacpp.indexer.UShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.UByteIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ShortIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.LongIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.IntIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexer;\n\n\nimport org.bytedeco.javacpp.indexer.Indexable;\n\n\nimport org.bytedeco.javacpp.indexer.FloatIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.DoubleIndexer;\n\n\nimport org.bytedeco.javacpp.indexer.ByteIndexer;\n\n\nimport org.bytedeco.javacpp.ShortPointer;\n\n\nimport org.bytedeco.javacpp.Pointer;\n\n\nimport org.bytedeco.javacpp.LongPointer;\n\n\nimport org.bytedeco.javacpp.IntPointer;\n\n\nimport org.bytedeco.javacpp.FloatPointer;\n\n\nimport org.bytedeco.javacpp.DoublePointer;\n\n\n\nimport org.bytedeco.javacpp.BytePointer;\n\n\nimport java.util.EnumSet;\n\n\nimport java.nio.ShortBuffer;\n\n\nimport java.nio.LongBuffer;\n\n\nimport java.nio.IntBuffer;\n\n\nimport java.nio.FloatBuffer;\n\n\nimport java.nio.DoubleBuffer;\n\n\nimport java.nio.ByteBuffer;\n\n\n\nimport java.nio.Buffer;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FrameTest {\n    @Test\n    public void cloneTest() {\n        // Create a Frame object\n        Frame frame = new Frame();\n        // Call the clone method\n        Frame newFrame = frame.clone();\n        // Assert that the newFrame is not null\n        assertNotNull(newFrame);\n    }\n}",
        "package_metric": 0.16,
        "class_metric": 13.16,
        "method_metric": 72.0,
        "pitest": 5.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        int[] array1 = {1, 2, 3};\n        int[] array2 = {1, 2, 3};\n        int result = builder.append(array1, array2).toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n        public void appendTest() {\n            // Arrange\n            double[] array1 = {1.0, 2.0, 3.0};\n            double[] array2 = {1.0, 2.0, 3.0};\n            \n            CompareToBuilder builder = new CompareToBuilder();\n            \n            // Act\n            builder.append(array1, array2);\n            \n            // Assert\n            assertEquals(0, builder.toComparison());\n        }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    \n        public void appendTest() {\n            CompareToBuilder result = new CompareToBuilder();\n            \n            double[] array1 = {1.0, 2.0, 3.0};\n            double[] array2 = {1.0, 2.0, 3.0};\n            \n            result.append(array1, array2);\n            \n            int comparisonResult = result.toComparison();\n            assertEquals(0, comparisonResult);\n        }\n    \n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] arr1 = {1.0, 2.0, 3.0};\n        double[] arr2 = {1.0, 2.0, 3.0};\n        builder.append(arr1, arr2);\n        assertEquals(0, builder.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        builder.append(new double[]{10.5, 20.0}, new double[]{10.5, 20.0});\n        int result = builder.toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        int comparison = builder.append(new double[] {2.5, 3.0}, new double[] {2.5, 3.0}).toComparison();\n        assertEquals(0, comparison);\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        int result = builder.append(new double[]{2.0, 4.0, 6.0}, new double[]{2.0, 4.0, 6.0}).toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] lhs = {1.0, 2.0, 3.0};\n        double[] rhs = {1.0, 2.0, 3.0};\n        CompareToBuilder result = builder.append(lhs, rhs);\n    \n        assertEquals(0, result.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        int result = builder.append(new double[]{1.0, 2.0, 3.0}, new double[]{1.0, 2.0, 3.0}).toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        \n        CompareToBuilder builder = new CompareToBuilder();\n        builder.append(new double[] { 1.0, 2.0 }, new double[] { 1.0, 2.0 });\n        int result = builder.toComparison();\n        assertEquals(0, result);\n        \n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] lhs = {1.0, 2.0, 3.0};\n        double[] rhs = {1.0, 2.0, 3.0};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertNotNull(result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] lhs = {1.0, 2.0, 3.0};\n        double[] rhs = {1.0, 2.0, 3.0};\n        builder.append(lhs, rhs);\n        int comparisonResult = builder.toComparison();\n        assertEquals(0, comparisonResult);\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] arr1 = {1.0, 2.5, 3.7};\n        double[] arr2 = {1.0, 2.5, 3.7};\n        CompareToBuilder result = builder.append(arr1, arr2);\n        assertEquals(builder, result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] lhs = {1.0, 2.0, 3.0};\n        double[] rhs = {1.0, 2.0, 3.0};\n        assertEquals(builder.append(lhs, rhs), builder);\n        assertEquals(builder.toComparison(), 0);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] lhs = {1.2, 2.3, 3.4};\n        double[] rhs = {1.2, 2.3, 3.4};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(0, result.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] lhs = {1.0, 2.0, 3.0};\n        double[] rhs = {1.0, 2.0, 3.0};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] lhs = {1.0, 2.0, 3.0};\n        double[] rhs = {1.0, 2.0, 3.0};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        double[] lhs1 = new double[] { 1.0, 2.0, 3.0 };\n        double[] rhs1 = new double[] { 1.0, 2.0, 3.0 };\n        int result1 = new CompareToBuilder().append(lhs1, rhs1).toComparison();\n        assertEquals(0, result1);\n    \n        double[] lhs2 = new double[] { 1.5, 2.5, 3.5 };\n        double[] rhs2 = new double[] { 1.5, 2.5, 4.0 };\n        int result2 = new CompareToBuilder().append(lhs2, rhs2).toComparison();\n        assertEquals(-1, result2);\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 5.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        double[] lhs = {1.0, 2.0, 3.0};\n        double[] rhs = {1.0, 2.0, 3.0};\n        CompareToBuilder builder = new CompareToBuilder().append(lhs, rhs);\n        assertEquals(0, builder.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n        public void appendTest() {\n            CompareToBuilder builder = new CompareToBuilder();\n            builder.append(new double[]{1.5, 2.5}, new double[]{1.5, 2.5});\n            assertEquals(0, builder.toComparison());\n        }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] arr1 = {1.2, 3.4, 5.6};\n        double[] arr2 = {1.2, 3.4, 5.6};\n        builder.append(arr1, arr2);\n        assertEquals(0, builder.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] lhs = {1.0, 2.0, 3.0};\n        double[] rhs = {1.0, 2.0, 4.0};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(-1, result.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 4.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        double[] array1 = {2.3, 4.5, 6.7};\n        double[] array2 = {2.3, 4.5, 6.7};\n        compareToBuilder.append(array1, array2);\n        assertEquals(0, compareToBuilder.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        assertEquals(0, new CompareToBuilder().append(new double[]{1, 2, 3}, new double[]{1, 2, 3}).toComparison());\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n        public void appendTest() {\n            CompareToBuilder compareToBuilder = new CompareToBuilder();\n            double[] lhs = {1.0, 2.0, 3.0};\n            double[] rhs = {1.0, 2.0, 3.0};\n            compareToBuilder.append(lhs, rhs);\n            assertEquals(0, compareToBuilder.toComparison());\n        }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] arr1 = {1.1, 2.2, 3.3};\n        double[] arr2 = {1.1, 2.2, 3.3};\n        CompareToBuilder result = builder.append(arr1, arr2);\n        assertEquals(builder, result);\n    }\n    \n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    \n     public void appendTest() {\n         CompareToBuilder result = new CompareToBuilder();\n         double[] arr1 = {1.5, 2.0, 3.7};\n         double[] arr2 = {1.5, 2.0, 3.7};\n         result.append(arr1, arr2);\n         assertEquals(0, result.toComparison());\n     }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        double[] lhs = {1.0, 2.0, 3.0};\n        double[] rhs = {1.0, 2.0, 4.0};\n        compareToBuilder.append(lhs, rhs);\n        int result = compareToBuilder.toComparison();\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 4.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        double[] lhs = {1.0, 2.0, 3.0};\n        double[] rhs = {1.0, 2.0, 3.0};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        int result = builder.append(new byte[]{1, 2, 3}, new byte[]{1, 2, 3}).toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        compareToBuilder.append(new byte[] { 1, 2, 3 }, new byte[] { 1, 2, 3 });\n        assertEquals(0, compareToBuilder.toComparison());\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        builder.append((byte) 1, (byte) 2);\n        int result = builder.toComparison();\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 2.75,
        "method_metric": 75.0,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder cb = new CompareToBuilder();\n        cb.append(new byte[]{1, 2, 3}, new byte[]{1, 2, 3});\n        assertEquals(0, cb.toComparison());\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        assertEquals(0, builder.append((byte) 1, (byte) 1).toComparison());\n    }\n}",
        "package_metric": 0.37,
        "class_metric": 2.75,
        "method_metric": 75.0,
        "pitest": 0.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        builder.append(new byte[]{1, 2, 3}, new byte[]{1, 2, 3});\n        int result = builder.toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        int result = builder.append(new byte[]{1, 2, 3, 4}, new byte[]{1, 2, 3, 4}).toComparison();\n        assertTrue(result == 0, \"Comparison result should be 0\");\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = new byte[] {1, 2, 3};\n        byte[] rhs = new byte[] {1, 2, 3};\n        int result = builder.append(lhs, rhs).toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendByteArrays_ReturnsComparison() {\n        // Arrange\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 3};\n        \n        // Act\n        CompareToBuilder result = builder.append(lhs, rhs);\n        \n        // Assert\n        assertEquals(0, result.toComparison());\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 3};\n        assertEquals(compareToBuilder.append(lhs, rhs).toComparison(), 0);\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 3};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(0, result.toComparison());\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {4, 5, 6};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 0.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] array1 = { 1, 2, 3 };\n        byte[] array2 = { 1, 2, 3 };\n        CompareToBuilder result = builder.append(array1, array2);\n    \n        // Add assertions here to validate the result of the append method\n        // Example:\n        // assertEquals(expectedComparisonResult, result.toComparison());\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = new byte[]{1, 2, 3};\n        byte[] rhs = new byte[]{1, 2, 3};\n        assertEquals(builder.append(lhs, rhs), builder);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n        public void appendTest() {\n            CompareToBuilder builder = new CompareToBuilder();\n            byte[] lhs = {1, 2, 3};\n            byte[] rhs = {1, 2, 3};\n            CompareToBuilder result = builder.append(lhs, rhs);\n            assertEquals(builder, result);\n        }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        builder.append(new byte[]{1, 2, 3}, new byte[]{1, 2, 4});\n        int result = builder.toComparison();\n        assertEquals(-1, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 4.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 3};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 3};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n    }\n    \n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    \n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = new byte[]{1, 2, 3};\n        byte[] rhs = new byte[]{1, 2, 3};\n        assertEquals(builder.append(lhs, rhs), builder);\n    }\n    \n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = new byte[]{1, 2, 3};\n        byte[] rhs = new byte[]{1, 2, 3};\n        builder.append(lhs, rhs);\n        assertEquals(0, builder.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 4};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(-1, result.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 4.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 3};\n        \n        CompareToBuilder result = builder.append(lhs, rhs);\n        // Add assertion here for the expected result\n        // For example:\n        // assertEquals(builder, result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 4};\n        CompareToBuilder result = compareToBuilder.append(lhs, rhs);\n        assertEquals(-1, result.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 4.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 3};\n        int result = compareToBuilder.append(lhs, rhs).toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n       CompareToBuilder compareToBuilder = new CompareToBuilder();\n       byte[] lhs = {1, 2, 3};\n       byte[] rhs = {1, 2, 3};\n       CompareToBuilder result = compareToBuilder.append(lhs,rhs);\n       assertEquals(0, result.toComparison());\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 3};\n        CompareToBuilder result = compareToBuilder.append(lhs, rhs);\n        assertEquals(compareToBuilder, result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 3};\n        CompareToBuilder result = compareToBuilder.append(lhs, rhs);\n        assertNotNull(result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        byte[] lhs = {1, 2, 3};\n        byte[] rhs = {1, 2, 4};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        int expected = -1;\n        assertEquals(expected, result.toComparison());\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 62.5,
        "pitest": 4.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        builder.append(new boolean[]{true, false}, new boolean[]{true, false});\n        int result = builder.toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 43.75,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        int comparisonResult = compareToBuilder.append(new boolean[]{true, false}, new boolean[]{true, true}).toComparison();\n        assertEquals(-1, comparisonResult);\n    }\n}",
        "package_metric": 0.95,
        "class_metric": 7.06,
        "method_metric": 62.5,
        "pitest": 5.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {true, false, true};\n        builder.append(lhs, rhs);\n        int result = builder.toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 43.75,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] array1 = {true, false, true};\n        boolean[] array2 = {true, false, true};\n        builder.append(array1, array2);\n        int result = builder.toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 43.75,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        int comparisonExpected = 1;\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {false, true, false};\n        builder.append(lhs, rhs);\n        int result = builder.toComparison();\n        assertEquals(comparisonExpected, result);\n    }\n}",
        "package_metric": 0.9,
        "class_metric": 6.67,
        "method_metric": 56.25,
        "pitest": 4.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        compareToBuilder.append(true, false);\n        int result = compareToBuilder.toComparison();\n        assertEquals(1, result);\n    }\n}",
        "package_metric": 0.47,
        "class_metric": 3.53,
        "method_metric": 62.5,
        "pitest": 2.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] lhs = {true, false};\n        boolean[] rhs = {true, false};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 43.75,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    \n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] lhs = { true, false, true };\n        boolean[] rhs = { true, true, false };\n        builder.append(lhs, rhs);\n        int result = builder.toComparison();\n        assertEquals(-1, result);\n    }\n    \n}",
        "package_metric": 0.95,
        "class_metric": 7.06,
        "method_metric": 62.5,
        "pitest": 5.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {true, false, true};\n        int result = compareToBuilder.append(lhs, rhs).toComparison();\n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 43.75,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] array1 = {true, false, true};\n        boolean[] array2 = {true, false, true};\n        \n        builder.append(array1, array2);\n        int result = builder.toComparison();\n        \n        assertEquals(0, result);\n    }\n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 43.75,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] lhs = { true, false, true };\n        boolean[] rhs = { true, false, true };\n        builder.append(lhs, rhs);\n        int result = builder.toComparison();\n        assertEquals(0, result);\n    }\n    \n}",
        "package_metric": 0.79,
        "class_metric": 5.88,
        "method_metric": 43.75,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] arr1 = {true, false, true};\n        boolean[] arr2 = {true, true, false};\n        \n        CompareToBuilder result = builder.append(arr1, arr2);\n        \n        // Add assertions for the result\n        assertNotNull(result);\n    }\n}",
        "package_metric": 0.9,
        "class_metric": 6.67,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n        public void appendTest() {\n            CompareToBuilder builder = new CompareToBuilder();\n            boolean[] lhs = {true, false};\n            boolean[] rhs = {true, false};\n            CompareToBuilder result = builder.append(lhs, rhs);\n            assertEquals(builder, result);\n        }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 43.75,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n            CompareToBuilder builder = new CompareToBuilder();\n            boolean[] lhs = {true, false};\n            boolean[] rhs = {false, true};\n            CompareToBuilder result = builder.append(lhs, rhs);\n            // Add assertions here to validate the result\n            // For example:\n            // assertEquals(expectedComparison, result.toComparison());\n        }\n    \n}",
        "package_metric": 0.84,
        "class_metric": 6.27,
        "method_metric": 56.25,
        "pitest": 0.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {true, false, false};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertEquals(1, result.toComparison());\n    }\n}",
        "package_metric": 0.95,
        "class_metric": 7.06,
        "method_metric": 62.5,
        "pitest": 4.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    \n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        boolean[] array1 = {true, false, true};\n        boolean[] array2 = {true, true, false};\n        CompareToBuilder result = compareToBuilder.append(array1, array2);\n        assertEquals(-1, result.toComparison());\n    }\n}",
        "package_metric": 0.95,
        "class_metric": 7.06,
        "method_metric": 62.5,
        "pitest": 5.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n            CompareToBuilder builder = new CompareToBuilder();\n            boolean[] arr1 = {true, false, true};\n            boolean[] arr2 = {true, false, true};\n            builder.append(arr1, arr2);\n            int comparison = builder.build();\n            assertEquals(0, comparison);\n    }\n    \n}",
        "package_metric": 0.84,
        "class_metric": 6.27,
        "method_metric": 43.75,
        "pitest": 3.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {false, true, true};\n        CompareToBuilder result = compareToBuilder.append(lhs, rhs);\n        assertEquals(compareToBuilder, result);\n    }\n}",
        "package_metric": 0.84,
        "class_metric": 6.27,
        "method_metric": 56.25,
        "pitest": 0.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder cb = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {true, false, true};\n        CompareToBuilder result = cb.append(lhs, rhs);\n        assertNotNull(result);\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 43.75,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {true, true, false};\n        CompareToBuilder result = compareToBuilder.append(lhs, rhs);\n        assertEquals(compareToBuilder, result);\n    }\n}",
        "package_metric": 0.9,
        "class_metric": 6.67,
        "method_metric": 62.5,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        boolean[] arr1 = {true, false, true};\n        boolean[] arr2 = {true, false, true};\n    \n        CompareToBuilder result = compareToBuilder.append(arr1, arr2);\n        assertSame(compareToBuilder, result); // assert that the result is the same as the original object\n    }\n}",
        "package_metric": 0.74,
        "class_metric": 5.49,
        "method_metric": 43.75,
        "pitest": 1.0
    },
    {
        "project_name": "commons-lang",
        "file_path": "/home/joseph/java_project/commons-lang/src/test/java/org/apache/commons/lang3/builder",
        "package_name": "org.apache.commons.lang3.builder",
        "class_name": "CompareToBuilder",
        "method_name": "append",
        "test_code": "package org.apache.commons.lang3.builder;\n\nimport org.apache.commons.lang3.ObjectUtils;\n\n\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\nimport java.util.Objects;\n\n\nimport java.util.Comparator;\n\n\nimport java.util.Collection;\n\n\nimport java.lang.reflect.Modifier;\n\n\nimport java.lang.reflect.Field;\n\n\n\nimport java.lang.reflect.AccessibleObject;\n\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder result = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {false, true, false};\n        CompareToBuilder output = result.append(lhs, rhs);\n        assertEquals(output, result);\n    }\n}",
        "package_metric": 0.84,
        "class_metric": 6.27,
        "method_metric": 56.25,
        "pitest": 0.0
    }
]