{
    "project_name": "Java",
    "file_name": "AbsoluteMax.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/maths/AbsoluteMax.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.maths",
    "docstring": "/**\n     * Finds the absolute maximum value among the given numbers.\n     *\n     * @param numbers The numbers to compare.\n     * @return The absolute maximum value.\n     * @throws IllegalArgumentException If the input array is empty or null.\n     */",
    "source_code": "\npublic static int getMaxValue(int... numbers) {\n    if (numbers == null || numbers.length == 0) {\n        throw new IllegalArgumentException(\"Numbers array cannot be empty or null\");\n    }\n    int absMax = numbers[0];\n    for (int i = 1; i < numbers.length; i++) {\n        if (Math.abs(numbers[i]) > Math.abs(absMax)) {\n            absMax = numbers[i];\n        }\n    }\n    return absMax;\n}\n",
    "class_name": "AbsoluteMax",
    "method_name": "getMaxValue",
    "arguments": [
        "int numbers"
    ],
    "generate_test": [
        "@Test\npublic void getMaxValueTest() {\n    assertEquals(3, AbsoluteMax.getMaxValue(1, 2, 3, -4));\n}",
        "@Test\n    public void getMaxValueTest() {\n        assertEquals(5, AbsoluteMax.getMaxValue(3, -5, 2, -10, 5));\n        assertEquals(0, AbsoluteMax.getMaxValue(0, 0, 0, 0, 0));\n        assertThrows(IllegalArgumentException.class, () -> {\n            AbsoluteMax.getMaxValue();\n        });\n    }",
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(-5, -15, -50, 10, 20);\n    assertEquals(50, result);\n}",
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(1, -3, 5, -7);\n    assertEquals(7, result);\n}",
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(10, -15, 20, -25);\n    assertEquals(25, result);\n}",
        "@Test\n    public void getMaxValueTest() {\n        assertEquals(5, AbsoluteMax.getMaxValue(3, -5, 2, -8, 5));\n        assertEquals(-8, AbsoluteMax.getMaxValue(-3, -5, -2, -8, -5));\n        assertEquals(10, AbsoluteMax.getMaxValue(10, 10, 10, 10, 10));\n        assertThrows(IllegalArgumentException.class, () -> AbsoluteMax.getMaxValue());\n    }",
        "@Test\npublic void getMaxValueTest() {\n    assertEquals(5, AbsoluteMax.getMaxValue(-3, 5, 2, -7, 1));\n}",
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(3, -5, 2, -7, 9, -10);\n    assertEquals(10, result, \"Expected value is 10\");\n}",
        "public class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        assertEquals(5, AbsoluteMax.getMaxValue(-1, -5, 3, 5, -2));\n    }\n}",
        "@Test\n    public void getMaxValueTest() {\n        assertEquals(5, AbsoluteMax.getMaxValue(3, -5, 2, 14));\n    }"
    ]
}