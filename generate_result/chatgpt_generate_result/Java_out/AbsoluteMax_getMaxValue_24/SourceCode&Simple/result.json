{
    "project_name": "Java",
    "file_name": "AbsoluteMax.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/maths/AbsoluteMax.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.maths",
    "docstring": "/**\n     * Finds the absolute maximum value among the given numbers.\n     *\n     * @param numbers The numbers to compare.\n     * @return The absolute maximum value.\n     * @throws IllegalArgumentException If the input array is empty or null.\n     */",
    "source_code": "\npublic static int getMaxValue(int... numbers) {\n    if (numbers == null || numbers.length == 0) {\n        throw new IllegalArgumentException(\"Numbers array cannot be empty or null\");\n    }\n    int absMax = numbers[0];\n    for (int i = 1; i < numbers.length; i++) {\n        if (Math.abs(numbers[i]) > Math.abs(absMax)) {\n            absMax = numbers[i];\n        }\n    }\n    return absMax;\n}\n",
    "class_name": "AbsoluteMax",
    "method_name": "getMaxValue",
    "arguments": [
        "int numbers"
    ],
    "generate_test": [
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(5, -8, 10, -4);\n    assertEquals(10, result);\n}",
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(1, -5, 3, -7, 9);\n    assertEquals(9, result);\n}",
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(10, -5, 8, -3, 6);\n    assertEquals(10, result);\n}",
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(-1, 2, 5, -6, 8);\n    assertEquals(8, result);\n}",
        "int result = AbsoluteMax.getMaxValue(-10, 20, -30, 40);\nassertEquals(40, result);",
        "@Test\npublic void getMaxValueTest() {\n    assertThrows(IllegalArgumentException.class, () -> AbsoluteMax.getMaxValue());\n    assertEquals(5, AbsoluteMax.getMaxValue(3, 5, -2, 8, -4));\n}\n",
        "\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(5, -15, 10, -20, 25);\n    assertEquals(25, result);\n}",
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(3, -5, 2, -1);\n    assertEquals(5, result);\n}",
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(2, -5, 8, -3, 6);\n    assertEquals(8, result);\n}",
        "@Test\npublic void getMaxValueTest() {\n    int result = AbsoluteMax.getMaxValue(3, -5, 2, -7);\n    assertEquals(7, result);\n}"
    ]
}