Source code: 


public static int getMaxValue(int... numbers) {
    if (numbers == null || numbers.length == 0) {
        throw new IllegalArgumentException("Numbers array cannot be empty or null");
    }
    int absMax = numbers[0];
    for (int i = 1; i < numbers.length; i++) {
        if (Math.abs(numbers[i]) > Math.abs(absMax)) {
            absMax = numbers[i];
        }
    }
    return absMax;
}



No.1 generated result --------------------------

@Test
public void getMaxValueTest() {
    int result = AbsoluteMax.getMaxValue(5, -8, 10, -4);
    assertEquals(10, result);
}


No.2 generated result --------------------------

@Test
public void getMaxValueTest() {
    int result = AbsoluteMax.getMaxValue(1, -5, 3, -7, 9);
    assertEquals(9, result);
}


No.3 generated result --------------------------

@Test
public void getMaxValueTest() {
    int result = AbsoluteMax.getMaxValue(10, -5, 8, -3, 6);
    assertEquals(10, result);
}


No.4 generated result --------------------------

@Test
public void getMaxValueTest() {
    int result = AbsoluteMax.getMaxValue(-1, 2, 5, -6, 8);
    assertEquals(8, result);
}


No.5 generated result --------------------------

int result = AbsoluteMax.getMaxValue(-10, 20, -30, 40);
assertEquals(40, result);


No.6 generated result --------------------------

@Test
public void getMaxValueTest() {
    assertThrows(IllegalArgumentException.class, () -> AbsoluteMax.getMaxValue());
    assertEquals(5, AbsoluteMax.getMaxValue(3, 5, -2, 8, -4));
}



No.7 generated result --------------------------


public void getMaxValueTest() {
    int result = AbsoluteMax.getMaxValue(5, -15, 10, -20, 25);
    assertEquals(25, result);
}


No.8 generated result --------------------------

@Test
public void getMaxValueTest() {
    int result = AbsoluteMax.getMaxValue(3, -5, 2, -1);
    assertEquals(5, result);
}


No.9 generated result --------------------------

@Test
public void getMaxValueTest() {
    int result = AbsoluteMax.getMaxValue(2, -5, 8, -3, 6);
    assertEquals(8, result);
}


No.10 generated result --------------------------

@Test
public void getMaxValueTest() {
    int result = AbsoluteMax.getMaxValue(3, -5, 2, -7);
    assertEquals(7, result);
}


