Source code: 


public boolean isArmstrong(int number) {
    long sum = 0;
    String temp = Integer.toString(number); // Convert the given number to a string
    int power = temp.length(); // Extract the length of the number (number of digits)
    long originalNumber = number;

    while (originalNumber > 0) {
        long digit = originalNumber % 10;
        sum += (long) Math.pow(digit, power); // The digit raised to the power of the number of digits and added to the sum.
        originalNumber /= 10;
    }

    return sum == number;
}



No.1 generated result --------------------------

@Test
public void isArmstrongTest() {
    int number = 370;
    Armstrong arm = new Armstrong();
    boolean result = arm.isArmstrong(number);
    assertTrue(result);
}


No.2 generated result --------------------------

@Test
public void isArmstrongTest() {
    Armstrong armstrong = new Armstrong();
    assertTrue(armstrong.isArmstrong(370));
    assertTrue(armstrong.isArmstrong(1634));
    assertFalse(armstrong.isArmstrong(123));
}


No.3 generated result --------------------------

@Test
    public void isArmstrongTest() {
        boolean result = new Armstrong().isArmstrong(370);
        assertTrue(result);
    }


No.4 generated result --------------------------

@Test
public void isArmstrongTest() {
    Armstrong armstrong = new Armstrong();
    assertTrue(armstrong.isArmstrong(370));
    assertTrue(armstrong.isArmstrong(1634));
    assertFalse(armstrong.isArmstrong(123));
}


No.5 generated result --------------------------

public void isArmstrongTest() {
        Armstrong armstrong = new Armstrong();
        assertTrue(armstrong.isArmstrong(1634));
        assertFalse(armstrong.isArmstrong(1234));
    }


No.6 generated result --------------------------

@Test
public void isArmstrongTest() {
    Armstrong armstrong = new Armstrong();
    assertTrue(armstrong.isArmstrong(370));
    assertTrue(armstrong.isArmstrong(1634));
    assertFalse(armstrong.isArmstrong(123));
}


No.7 generated result --------------------------

@Test
public void isArmstrongTest() {
    assertTrue(new Armstrong().isArmstrong(370));
    assertTrue(new Armstrong().isArmstrong(1634));
    assertFalse(new Armstrong().isArmstrong(123));
}


No.8 generated result --------------------------

@Test
public void isArmstrongTest() {
    Armstrong armstrong = new Armstrong();
    
    assertTrue(armstrong.isArmstrong(370));
    assertTrue(armstrong.isArmstrong(1634));
    
    assertFalse(armstrong.isArmstrong(123));
}


No.9 generated result --------------------------

@Test
public void isArmstrongTest() {
    // Testing positive case
    assertTrue(new Armstrong().isArmstrong(370));
    assertTrue(new Armstrong().isArmstrong(1634));
    
    // Testing negative case
    assertFalse(new Armstrong().isArmstrong(123));
}


No.10 generated result --------------------------

@Test
    public void isArmstrongTest() {
        // Arrange
        Armstrong armstrong = new Armstrong();
        
        // Act
        boolean actual = armstrong.isArmstrong(370);
        
        // Assert
        assertTrue(actual);
    }


