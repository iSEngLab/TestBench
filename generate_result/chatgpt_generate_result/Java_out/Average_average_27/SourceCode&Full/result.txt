Source code: 


public static int average(int[] numbers) {
    if (numbers == null || numbers.length == 0) {
        throw new IllegalArgumentException("Numbers array cannot be empty or null");
    }
    long sum = 0;
    for (int number : numbers) {
        sum += number;
    }
    return (int) (sum / numbers.length);
}



No.1 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {1, 2, 3, 4, 5};
    int expected = 3;
    int actual = Average.average(numbers);
    assertEquals(expected, actual);
}


No.2 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {3, 5, 8, 11, 14};
    int expected = 8;
    int actual = Average.average(numbers);
    assertEquals(expected, actual);
}


No.3 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {5, 10, 15, 20};
    int expected = 12;
    int actual = Average.average(numbers);
    assertEquals(expected, actual);
}


No.4 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {3, 6, 9};
    int expected = 6;
    int actual = Average.average(numbers);
    assertEquals(expected, actual);
}


No.5 generated result --------------------------

@Test
public void averageTest() {
    int[] values = {2, 4, 6, 8, 10};
    int expected = 6;
    int actual = Average.average(values);
    assertEquals(expected, actual);
}


No.6 generated result --------------------------

@Test
    public void averageTest() {
        int[] numbers = {1, 2, 3, 4, 5};
        int result = Average.average(numbers);
        assertEquals(3, result);
    }


No.7 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {2, 4, 6, 8, 10};
    int expected = 6;
    int actual = Average.average(numbers);
    assertEquals(expected, actual);
}


No.8 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {2, 4, 6, 8, 10};
    int expectedAverage = 6;
    int actualAverage = Average.average(numbers);
    assertEquals(expectedAverage, actualAverage);
}


No.9 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {1, 2, 3, 4, 5};
    int expectedAverage = 3;
    int actualAverage = Average.average(numbers);
    assertEquals(expectedAverage, actualAverage);
}


No.10 generated result --------------------------

@Test
public void averageTest() {
    int[] arr = {5, 10, 15, 20};
    assertEquals(12, Average.average(arr));
}


