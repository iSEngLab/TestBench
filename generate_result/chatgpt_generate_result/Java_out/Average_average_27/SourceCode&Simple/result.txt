Source code: 


public static int average(int[] numbers) {
    if (numbers == null || numbers.length == 0) {
        throw new IllegalArgumentException("Numbers array cannot be empty or null");
    }
    long sum = 0;
    for (int number : numbers) {
        sum += number;
    }
    return (int) (sum / numbers.length);
}



No.1 generated result --------------------------

@Test
public void averageTest() {
    int[] testNumbers = {5, 10, 15, 20};
    assertEquals(12, Average.average(testNumbers));
}


No.2 generated result --------------------------

@Test
public void averageTest() {
   int[] numbers = {5, 10, 15, 20, 25};
   int expected = 15;
   int actual = Average.average(numbers);
   assertEquals(expected, actual);
}


No.3 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {10, 20, 30, 40, 50};
    int expected = 30;
    int actual = Average.average(numbers);
    assertEquals(expected, actual);
}


No.4 generated result --------------------------

@Test
public void averageTest() {
    int[] testArray = {2, 4, 6, 8};
    assertEquals(5, Average.average(testArray));
}


No.5 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {1, 2, 3, 4, 5};
    assertEquals(3, Average.average(numbers));
}


No.6 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {3, 5, 10, 6, 8};
    assertEquals(6, Average.average(numbers));
}


No.7 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {10, 20, 30, 40, 50};
    int expected = 30;
    int actual = Average.average(numbers);
    assertEquals(expected, actual);
}


No.8 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {1, 2, 3, 4, 5};
    int expected = 3;
    int result = Average.average(numbers);
    assertEquals(expected, result);
}


No.9 generated result --------------------------

@Test
public void averageTest() {
    int[] testNumbers = {3, 5, 10, 15, 20};
    int expectedAverage = 10;
    int actualAverage = Average.average(testNumbers);
    assertEquals(expectedAverage, actualAverage);
}


No.10 generated result --------------------------

@Test
public void averageTest() {
    int[] numbers = {1, 2, 3, 4, 5};
    assertEquals(3, Average.average(numbers));
}


