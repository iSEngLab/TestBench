{
    "project_name": "Java",
    "file_name": "Average.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/maths/Average.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.maths",
    "docstring": "/**\n     * find average value of an int array\n     *\n     * @param numbers the array contains element and the sum does not excess long\n     *                value limit\n     * @return average value\n     */",
    "source_code": "\npublic static int average(int[] numbers) {\n    if (numbers == null || numbers.length == 0) {\n        throw new IllegalArgumentException(\"Numbers array cannot be empty or null\");\n    }\n    long sum = 0;\n    for (int number : numbers) {\n        sum += number;\n    }\n    return (int) (sum / numbers.length);\n}\n",
    "class_name": "Average",
    "method_name": "average",
    "arguments": [
        "int[] numbers"
    ],
    "generate_test": [
        "@Test\npublic void averageTest() {\n    int[] testNumbers = {5, 10, 15, 20, 25};\n    int result = Average.average(testNumbers);\n    assertEquals(15, result);\n}",
        "@Test\npublic void averageTest() {\n    int[] testNumbers = {5, 10, 15, 20};\n    int expected = 12;\n    int actual = Average.average(testNumbers);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void averageTest() {\n    int[] numbers = {10, 20, 30, 40, 50};\n    int expected = 30;\n    int result = Average.average(numbers);\n    assertEquals(expected, result);\n}",
        "\n@Test\npublic void averageTest() {\n    int[] numbers = {3, 5, 7, 9, 11};\n    int expected = 7; // (3+5+7+9+11)/5 = 7\n    int actual = Average.average(numbers);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void averageTest() {\n    int[] numbers = {1, 2, 3, 4, 5};\n    int expected = 3;\n    int actual = Average.average(numbers);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void averageTest() {\n    int[] testArray = {5, 10, 15, 20, 25};\n    int expected = 15;\n    int result = Average.average(testArray);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void averageTest() {\n    int[] numbers = {10, 20, 30};\n    int expectedResult = 20;\n    int actualResult = Average.average(numbers);\n    assertEquals(expectedResult, actualResult);\n}",
        "    int[] testArray = {5, 10, 15, 20};\n    int expectedAverage = 12; \n    assertEquals(expectedAverage, Average.average(testArray));\n    // Add any additional test cases as needed for different scenarios.",
        "@Test\npublic void averageTest() {\n    int[] numbers = {10, 20, 30, 40, 50};\n    int result = Average.average(numbers);\n    assertEquals(30, result);\n}",
        "@Test\npublic void averageTest() {\n    int[] numbers = {5, 10, 15, 20, 25};\n    assertEquals(15, Average.average(numbers));\n}"
    ]
}