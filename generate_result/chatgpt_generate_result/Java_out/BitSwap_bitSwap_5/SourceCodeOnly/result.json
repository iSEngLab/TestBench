{
    "project_name": "Java",
    "file_name": "BitSwap.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/bitmanipulation/BitSwap.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.bitmanipulation",
    "docstring": null,
    "source_code": "/*\n * @brief Swaps the bits at the position posA and posB from data\n */\npublic static int bitSwap(int data, final int posA, final int posB) {\n    if (SingleBitOperations.getBit(data, posA) != SingleBitOperations.getBit(data, posB)) {\n        data ^= (1 << posA) ^ (1 << posB);\n    }\n    return data;\n}\n",
    "class_name": "BitSwap",
    "method_name": "bitSwap",
    "arguments": [
        "int data",
        "int posA",
        "int posB"
    ],
    "generate_test": [
        "@Test\npublic void bitSwapTest() {\n    int result = SingleBitOperations.bitSwap(9, 1, 3);\n    assertEquals(9, result);\n}",
        "int result = BitManipulation.bitSwap(15, 2, 4);\nassertEquals(23, result);",
        "@Test\npublic void bitSwapTest() {\n    int result = SingleBitOperations.bitSwap(15, 2, 4);\n    assertEquals(27, result);\n}",
        "@Test\npublic void bitSwapTest() {\n    assertEquals(13, SingleBitOperations.bitSwap(9, 0, 3));\n}",
        "@Test\npublic void bitSwapTest() {\n    int result = BitOperations.bitSwap(10, 1, 3);\n    assertEquals(10, result);\n}",
        "@Test\npublic void bitSwapTest() {\n    int result = BitManipulation.bitSwap(5, 1, 2);\n    assertEquals(6, result);\n}",
        "@Test\npublic void bitSwapTest() {\n    int data = 10; // Example data input\n    int posA = 1; // Example position A\n    int posB = 2; // Example position B\n    int result = BitManipulation.bitSwap(data, posA, posB);\n    assertEquals(12, result); // Example expected output after bit swap\n}",
        "@Test\npublic void bitSwapTest() {\n    int testData = 5; // arbitrary test data\n    int expectedOutput = 6; // expected output after bit swap\n    assertEquals(expectedOutput, SingleBitOperations.bitSwap(testData, 0, 1));\n}",
        "@Test\npublic void bitSwapTest() {\n    int data = 12; // example input\n    int posA = 2; // example position A\n    int posB = 4; // example position B\n    int expectedResult = 24; // expected result after swapping bits at position 2 and 4\n    \n    assertEquals(expectedResult, SingleBitOperations.bitSwap(data, posA, posB));\n}",
        "@Test\npublic void bitSwapTest() {\n    int data = 5;\n    assertEquals(6, SingleBitOperations.bitSwap(data, 0, 1));\n}"
    ]
}