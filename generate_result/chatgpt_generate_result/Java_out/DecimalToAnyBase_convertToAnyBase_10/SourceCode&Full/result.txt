Source code: 


public static String convertToAnyBase(int inp, int base) {
    ArrayList<Character> charArr = new ArrayList<>();

    while (inp > 0) {
        charArr.add(reVal(inp % base));
        inp /= base;
    }

    StringBuilder str = new StringBuilder(charArr.size());

    for (Character ch : charArr) {
        str.append(ch);
    }

    return str.reverse().toString();
}



No.1 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int input = 10;
    int base = 2;
    String expected = "1010";
    String result = DecimalToAnyBase.convertToAnyBase(input, base);
    assertEquals(expected, result);
}


No.2 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int inp = 10;
    int base = 2;
    assertEquals("1010", DecimalToAnyBase.convertToAnyBase(inp, base));
}


No.3 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    assertEquals("10", DecimalToAnyBase.convertToAnyBase(2, 2));
    assertEquals("1000", DecimalToAnyBase.convertToAnyBase(8, 2));
    assertEquals("101", DecimalToAnyBase.convertToAnyBase(5, 2));
}


No.4 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    assertEquals("11010", DecimalToAnyBase.convertToAnyBase(26, 2));
    assertEquals("1A", DecimalToAnyBase.convertToAnyBase(26, 16));
    assertEquals("33", DecimalToAnyBase.convertToAnyBase(110, 5));
}


No.5 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    String expectedResult = "10010";
    assertEquals(expectedResult, DecimalToAnyBase.convertToAnyBase(18, 2));
}


No.6 generated result --------------------------

String result = DecimalToAnyBase.convertToAnyBase(25, 16);
assertEquals("19", result);


No.7 generated result --------------------------

assertEquals("0", convertToAnyBase(0, 2));
assertEquals("1", convertToAnyBase(1, 2));
assertEquals("1000", convertToAnyBase(8, 2));
assertEquals("11111111", convertToAnyBase(255, 2));
assertEquals("1010", convertToAnyBase(10, 2));
assertEquals("11110000001001000000", convertToAnyBase(1000000, 2));


No.8 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    assertEquals("10", DecimalToAnyBase.convertToAnyBase(16, 2));
    assertEquals("1A", DecimalToAnyBase.convertToAnyBase(26, 16));
    assertEquals("11011", DecimalToAnyBase.convertToAnyBase(27, 2));
}


No.9 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
  assertEquals("17", DecimalToAnyBase.convertToAnyBase(15, 16));
  assertEquals("11000", DecimalToAnyBase.convertToAnyBase(24, 2));
}


No.10 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int decInput = 100;
    int base = 16;
    String expected = "64";
    String actual = DecimalToAnyBase.convertToAnyBase(decInput, base);
    assertEquals(expected, actual);
}


