Source code: 


public static int findMax(final int[] array) {
    int n = array.length;
    if (n == 0) {
        throw new IllegalArgumentException("Array must be non-empty.");
    }
    int max = array[0];
    for (int i = 1; i < n; i++) {
        if (array[i] > max) {
            max = array[i];
        }
    }
    return max;
}



No.1 generated result --------------------------

@Test
public void findMaxTest() {
    assertThrows(IllegalArgumentException.class, () -> {
        FindMax.findMax(new int[]{});
    });

    assertEquals(8, FindMax.findMax(new int[]{2, 3, 7, 8}));
    assertEquals(5, FindMax.findMax(new int[]{5}));
    assertEquals(10, FindMax.findMax(new int[]{10, 6, 3, 9, 5}));
}


No.2 generated result --------------------------

@Test
public void findMaxTest() {
    int[] inputArray = {3, 2, 5, 8, 1};
    int expectedResult = 8;
    int actualResult = FindMax.findMax(inputArray);
    assertEquals(expectedResult, actualResult);
}


No.3 generated result --------------------------

@Test
public void findMaxTest() {
    int[] testArray = {3, 7, 2, 9, 8};
    int expected = 9;
    int actual = FindMax.findMax(testArray);
    assertEquals(expected, actual);
}


No.4 generated result --------------------------

@Test
public void findMaxTest() {
    int[] inputArray = {4, 7, 5, 2, 8, 9, 3};
    int expected = 9;
    int actual = FindMax.findMax(inputArray);
    assertEquals(expected, actual);
}


No.5 generated result --------------------------

@Test
public void findMaxTest() {
    int[] testArray = {3, 7, 2, 9, 11};
    assertEquals(11, FindMax.findMax(testArray));
}


No.6 generated result --------------------------

int[] array = {3, 5, 2, 8, 10};
int max = FindMax.findMax(array);
assertEquals(10, max);


No.7 generated result --------------------------

@Test
public void findMaxTest() {
    int[] testArray = {5, 3, 8, 2, 9, 1};
    int expected = 9;
    int actual = FindMax.findMax(testArray);
    assertEquals(expected, actual);
}


No.8 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = {2, 5, 8, 1, 3, 9, 4};
    int result = FindMax.findMax(array);
    assertEquals(9, result);
}


No.9 generated result --------------------------

@Test
public void findMaxTest() {
    assertThrows(IllegalArgumentException.class, () -> {
        int[] array = {};
        FindMax.findMax(array);
    }, "Array must be non-empty.");
}


No.10 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = {3, 6, 1, 8, 2};
    int expectedResult = 8;
    int actualResult = FindMax.findMax(array);
    assertEquals(expectedResult, actualResult);
}


