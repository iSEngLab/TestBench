Source code: 


public static int findMax(final int[] array) {
    int n = array.length;
    if (n == 0) {
        throw new IllegalArgumentException("Array must be non-empty.");
    }
    int max = array[0];
    for (int i = 1; i < n; i++) {
        if (array[i] > max) {
            max = array[i];
        }
    }
    return max;
}



No.1 generated result --------------------------

@Test
public void findMaxTest() {
    int[] testArray = {5, 2, 8, 1, 6, 9};
    int result = Math.findMax(testArray);
    assertEquals(9, result);
}


No.2 generated result --------------------------

@Test
    public void findMaxTest() {
        int[] testArray = {5, 1, 9, 3, 7};
        int expectedResult = 9;
        int actualResult = FindMax.findMax(testArray);
        assertEquals(expectedResult, actualResult);
    }


No.3 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = {1, 3, 5, 7, 9, 2, 4, 6, 8};
    int expected = 9;
    int actual = FindMax.findMax(array);
    assertEquals(expected, actual);
}


No.4 generated result --------------------------

@Test
    public void findMaxTest() {
        int[] testArray = {5, 3, 8, 6, 2, 7};
        int expected = 8;
        int actual = FindMax.findMax(testArray);
        assertEquals(expected, actual);
    }


No.5 generated result --------------------------

@Test
public void findMaxTest() {
    int[] testArray = {5, 3, 9, 6, 8, 2};
    int expectedResult = 9;
    int actualResult = Math.findMax(testArray);
    assertEquals(expectedResult, actualResult);
}


No.6 generated result --------------------------

@Test
    public void findMaxTest() {
        int[] array = {1, 3, 5, 7, 9};
        int expected = 9;
        int actual = FindMax.findMax(array);
        assertEquals(expected, actual);
    }


No.7 generated result --------------------------

public static int[] testFindMax() {
    int[] testArray = {3, 6, 2, 8, 1, 9, 4};
    int expectedResult = 9;
    int actualResult = findMax(testArray);
    assertEquals(expectedResult, actualResult);
}


No.8 generated result --------------------------

@Test
    public void findMaxTest() {
        int[] array = {3, 5, 2, 8, 6};
        int expected = 8;
        int actual = FindMax.findMax(array);
        assertEquals(expected, actual);
    }


No.9 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = {3, 7, 1, 9, 4};
    int result = FindMax.findMax(array);
    assertEquals(9, result);
}


No.10 generated result --------------------------

@Test
public void findMaxTest() {
    int[] testArray = {3, 8, 2, 10, 5};
    int expected = 10;
    int result = FindMax.findMax(testArray);
    assertEquals(expected, result);
}


