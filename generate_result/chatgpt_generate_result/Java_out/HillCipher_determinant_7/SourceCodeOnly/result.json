{
    "project_name": "Java",
    "file_name": "HillCipher.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/ciphers/HillCipher.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.ciphers",
    "docstring": null,
    "source_code": "// Determinant calculator\npublic static int determinant(int[][] a, int n) {\n    int det = 0, sign = 1, p = 0, q = 0;\n\n    if (n == 1) {\n        det = a[0][0];\n    } else {\n        int[][] b = new int[n - 1][n - 1];\n        for (int x = 0; x < n; x++) {\n            p = 0;\n            q = 0;\n            for (int i = 1; i < n; i++) {\n                for (int j = 0; j < n; j++) {\n                    if (j != x) {\n                        b[p][q++] = a[i][j];\n                        if (q % (n - 1) == 0) {\n                            p++;\n                            q = 0;\n                        }\n                    }\n                }\n            }\n            det = det + a[0][x] * determinant(b, n - 1) * sign;\n            sign = -sign;\n        }\n    }\n    return det;\n}\n",
    "class_name": "HillCipher",
    "method_name": "determinant",
    "arguments": [
        "int[][] a",
        "int n"
    ],
    "generate_test": [
        "@Test\n    public void determinantTest() {\n        int[][] matrix = {{1, 2, 3},\n                          {4, 5, 6},\n                          {7, 8, 9}};\n        int result = HillCipher.determinant(matrix, 3);\n        assertEquals(0, result);\n    }",
        "@Test\npublic void determinantTest() {\n    int[][] matrix = {{2, 3}, {1, 4}};\n    int result = HillCipher.determinant(matrix, 2);\n    assertEquals(5, result);\n}",
        "int[][] a = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\nint n = 3;\nint result = HillCipher.determinant(a, n);\nassertEquals(0, result);",
        "@Test\npublic void determinantTest() {\n    int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n    int n = 3;\n    int result = HillCipher.determinant(matrix, n);\n    assertEquals(0, result);\n}",
        "int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\nassertEquals(0, HillCipher.determinant(matrix, 3));",
        "@Test\npublic void determinantTest() {\n    int[][] matrix = {{1, 2}, {3, 4}};\n    int n = 2;\n    int result = DeterminantCalculator.determinant(matrix, n);\n    assertEquals(-2, result);\n}",
        "@Test\npublic void determinantTest() {\n    int[][] matrix = {{1, 3, 5}, {2, 4, 6}, {7, 8, 9}};\n    int result = HillCipher.determinant(matrix, 3);\n    assertEquals(-18, result);\n}",
        "@Test\npublic void determinantTest() {\n    int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n    int det = HillCipher.determinant(matrix, 3);\n    assertEquals(0, det);\n}",
        "@Test\npublic void determinantTest() {\n    int[][] testMatrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n    int result = HillCipher.determinant(testMatrix, 3);\n    assertEquals(0, result);\n}",
        "@Test\npublic void determinantTest() {\n    int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n    assertEquals(-3, HillCipher.determinant(matrix, 3));\n}"
    ]
}