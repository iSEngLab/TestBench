{
    "project_name": "Java",
    "file_name": "OctalToHexadecimal.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/conversions/OctalToHexadecimal.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.conversions",
    "docstring": "/**\n     * This method converts a Decimal number to a Hexadecimal number\n     *\n     * @param d The Decimal Number\n     * @return The Hexadecimal number\n     */",
    "source_code": "\npublic static String decimalToHex(int d) {\n    String digits = \"0123456789ABCDEF\";\n    if (d <= 0) {\n        return \"0\";\n    }\n    String hex = \"\";\n    while (d > 0) {\n        int digit = d % 16;\n        hex = digits.charAt(digit) + hex;\n        d = d / 16;\n    }\n    return hex;\n}\n",
    "class_name": "OctalToHexadecimal",
    "method_name": "decimalToHex",
    "arguments": [
        "int d"
    ],
    "generate_test": [
        "@Test\npublic void decimalToHexTest() {\n    assertEquals(\"5A0\", OctalToHexadecimal.decimalToHex(1440));\n}",
        "public void decimalToHexTest() {\n    int decimal = 26;\n    String expectedResult = \"1A\";\n    String actualResult = OctalToHexadecimal.decimalToHex(decimal);\n    assertEquals(expectedResult, actualResult);\n}",
        "@Test\npublic void decimalToHexTest() {\n    // Testing for positive decimal number\n    assertEquals(\"1A\", OctalToHexadecimal.decimalToHex(26));\n    // Testing for 0 decimal number\n    assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n    // Testing for negative decimal number\n    assertEquals(\"0\", OctalToHexadecimal.decimalToHex(-10));\n}",
        "@Test\npublic void decimalToHexTest() {\n    assertEquals(\"1A\", OctalToHexadecimal.decimalToHex(26));\n}",
        "@Test\npublic void decimalToHexTest() {\n    // Given\n    int inputDecimal = 123;\n    \n    // When\n    String actualHex = OctalToHexadecimal.decimalToHex(inputDecimal);\n    \n    // Then\n    String expectedHex = \"7B\";\n    assertEquals(expectedHex, actualHex);\n}",
        "@Test\npublic void decimalToHexTest() {\n    // Test case 1: when input is 0\n    assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n    \n    // Test case 2: when input is a positive decimal number\n    assertEquals(\"1F\", OctalToHexadecimal.decimalToHex(31));\n}",
        "@Test\npublic void decimalToHexTest() {\n    assertEquals(\"1A\", OctalToHexadecimal.decimalToHex(26));\n}",
        "public void decimalToHexTest() {\n    assertEquals(\"1A\", OctalToHexadecimal.decimalToHex(26));\n}",
        "@Test\npublic void decimalToHexTest() {\n    assertEquals(\"5A\", OctalToHexadecimal.decimalToHex(90));\n    assertEquals(\"1B\", OctalToHexadecimal.decimalToHex(27));\n    assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n}",
        "@Test\npublic void decimalToHexTest() {\n    assertEquals(\"7F\", OctalToHexadecimal.decimalToHex(127));\n}"
    ]
}