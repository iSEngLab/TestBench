Source code: 


public static String decimalToHex(int d) {
    String digits = "0123456789ABCDEF";
    if (d <= 0) {
        return "0";
    }
    String hex = "";
    while (d > 0) {
        int digit = d % 16;
        hex = digits.charAt(digit) + hex;
        d = d / 16;
    }
    return hex;
}



No.1 generated result --------------------------

@Test
public void decimalToHexTest() {
    assertEquals("5A0", OctalToHexadecimal.decimalToHex(1440));
}


No.2 generated result --------------------------

public void decimalToHexTest() {
    int decimal = 26;
    String expectedResult = "1A";
    String actualResult = OctalToHexadecimal.decimalToHex(decimal);
    assertEquals(expectedResult, actualResult);
}


No.3 generated result --------------------------

@Test
public void decimalToHexTest() {
    // Testing for positive decimal number
    assertEquals("1A", OctalToHexadecimal.decimalToHex(26));
    // Testing for 0 decimal number
    assertEquals("0", OctalToHexadecimal.decimalToHex(0));
    // Testing for negative decimal number
    assertEquals("0", OctalToHexadecimal.decimalToHex(-10));
}


No.4 generated result --------------------------

@Test
public void decimalToHexTest() {
    assertEquals("1A", OctalToHexadecimal.decimalToHex(26));
}


No.5 generated result --------------------------

@Test
public void decimalToHexTest() {
    // Given
    int inputDecimal = 123;
    
    // When
    String actualHex = OctalToHexadecimal.decimalToHex(inputDecimal);
    
    // Then
    String expectedHex = "7B";
    assertEquals(expectedHex, actualHex);
}


No.6 generated result --------------------------

@Test
public void decimalToHexTest() {
    // Test case 1: when input is 0
    assertEquals("0", OctalToHexadecimal.decimalToHex(0));
    
    // Test case 2: when input is a positive decimal number
    assertEquals("1F", OctalToHexadecimal.decimalToHex(31));
}


No.7 generated result --------------------------

@Test
public void decimalToHexTest() {
    assertEquals("1A", OctalToHexadecimal.decimalToHex(26));
}


No.8 generated result --------------------------

public void decimalToHexTest() {
    assertEquals("1A", OctalToHexadecimal.decimalToHex(26));
}


No.9 generated result --------------------------

@Test
public void decimalToHexTest() {
    assertEquals("5A", OctalToHexadecimal.decimalToHex(90));
    assertEquals("1B", OctalToHexadecimal.decimalToHex(27));
    assertEquals("0", OctalToHexadecimal.decimalToHex(0));
}


No.10 generated result --------------------------

@Test
public void decimalToHexTest() {
    assertEquals("7F", OctalToHexadecimal.decimalToHex(127));
}


