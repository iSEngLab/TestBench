{
    "project_name": "Java",
    "file_name": "SimpleSubstitutionCipher.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/ciphers/SimpleSubstitutionCipher.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.ciphers",
    "docstring": "/**\n     * Decrypt message by replacing each element with its opposite character in\n     * cipher.\n     *\n     * @return message\n     */",
    "source_code": "\npublic static String decode(String encryptedMessage, String cipherSmall) {\n    StringBuilder decoded = new StringBuilder();\n\n    Map<Character, Character> cipherMap = new HashMap<>();\n\n    char beginSmallLetter = 'a';\n    char beginCapitalLetter = 'A';\n\n    cipherSmall = cipherSmall.toLowerCase();\n    String cipherCapital = cipherSmall.toUpperCase();\n\n    for (int i = 0; i < cipherSmall.length(); i++) {\n        cipherMap.put(cipherSmall.charAt(i), beginSmallLetter++);\n        cipherMap.put(cipherCapital.charAt(i), beginCapitalLetter++);\n    }\n\n    for (int i = 0; i < encryptedMessage.length(); i++) {\n        if (Character.isAlphabetic(encryptedMessage.charAt(i))) {\n            decoded.append(cipherMap.get(encryptedMessage.charAt(i)));\n        } else {\n            decoded.append(encryptedMessage.charAt(i));\n        }\n    }\n\n    return decoded.toString();\n}\n",
    "class_name": "SimpleSubstitutionCipher",
    "method_name": "decode",
    "arguments": [
        "String encryptedMessage",
        "String cipherSmall"
    ],
    "generate_test": [
        "@Test\npublic void decodeTest() {\n    String encryptedMessage = \"khoor\";\n    String cipherSmall = \"defghijklmnopqrstuvwxyzabc\";\n    String expectedResult = \"hello\";\n    String actualResult = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n    assertEquals(expectedResult, actualResult);\n}",
        "@Test\npublic void decodeTest() {\n    String decryptedMessage = SimpleSubstitutionCipher.decode(\"uv\", \"wxyzabcdefghijklmnopqrstuv\");\n    assertEquals(\"st\", decryptedMessage);\n}",
        "@Test\npublic void decodeTest() {\n    String encryptedMessage = \"Vmxf fmx Tmj'z Tmw Hmzf Omezmzo\";\n    String cipherSmall = \"hijklmnopqrstuvwxyzabcdefg\";\n    \n    String expectedResult = \"This is One's Own Alphabet\";\n    String actualResult = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n    \n    assertEquals(expectedResult, actualResult);\n}",
        "@Test\npublic void decodeTest() {\n    String encryptedMessage = \"lsoz\";\n    String cipherSmall = \"kqbpedgjcnrysvthxuzfaimow\";\n    String expectedResult = \"input\";\n\n    String actualResult = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n\n    assertEquals(expectedResult, actualResult);\n}",
        "\n        String result = SimpleSubstitutionCipher.decode(\"ytyty\", \"asgbu\");\n        assertEquals(\"audi\", result);\n        String result2 = SimpleSubstitutionCipher.decode(\"haha\", \"roeul\");\n        assertEquals(\"toto\", result2);",
        "@Test\npublic void decodeTest() {\n    assertEquals(\"Hello, World!\", SimpleSubstitutionCipher.decode(\"Urjjv, sljrl!\", \"bcduflmpvxezokniwqysgjhtr\"));\n}",
        "@Test\npublic void decodeTest() {\n    String encryptedMessage = \"pb uhdo qmysqom!\"\";\n    String cipherSmall = \"zyxwvutsrqponmlkjihgfedcba\";\n    String expectedOutput = \"cy what ordered!\";\n    \n    String actualOutput = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n    \n    assertEquals(expectedOutput, actualOutput);\n}",
        "@Test\npublic void decodeTest() {\n    String input = \"xqdp\";\n    String cipher = \"zab\";\n    String expected = \"wind\";\n    String actual = SimpleSubstitutionCipher.decode(input, cipher);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void decodeTest() {\n    String encryptedMessage = \"zkdsd\";\n    String cipherSmall = \"abcde\";\n    String expectedResult = \"world\";\n    assertEquals(expectedResult, SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));\n}",
        "\npublic void decodeTest() {\n    String encryptedMessage = \"kAkLM\";\n    String cipherSmall = \"xmpzgtsrlnoqkievbfcujwdyha\";\n    String expectedResult = \"wIngo\";\n    String actualResult = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n    assertEquals(expectedResult, actualResult);\n}"
    ]
}