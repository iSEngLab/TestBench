Source code: 


public static String decode(String encryptedMessage, String cipherSmall) {
    StringBuilder decoded = new StringBuilder();

    Map<Character, Character> cipherMap = new HashMap<>();

    char beginSmallLetter = 'a';
    char beginCapitalLetter = 'A';

    cipherSmall = cipherSmall.toLowerCase();
    String cipherCapital = cipherSmall.toUpperCase();

    for (int i = 0; i < cipherSmall.length(); i++) {
        cipherMap.put(cipherSmall.charAt(i), beginSmallLetter++);
        cipherMap.put(cipherCapital.charAt(i), beginCapitalLetter++);
    }

    for (int i = 0; i < encryptedMessage.length(); i++) {
        if (Character.isAlphabetic(encryptedMessage.charAt(i))) {
            decoded.append(cipherMap.get(encryptedMessage.charAt(i)));
        } else {
            decoded.append(encryptedMessage.charAt(i));
        }
    }

    return decoded.toString();
}



No.1 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "yfyl fvb";
    String cipherSmall = "qwertyuiopasdfghjklzxcvbnm";
    String expected = "test case";
    String actual = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);
    assertEquals(expected, actual);
}


No.2 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "Rovvy%";
    String cipherSmall = "defghijklmnopqrstuvwxyzabc";
    String expected = "Hello!";
    String actual = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);
    assertEquals(expected, actual);
}


No.3 generated result --------------------------

@Test
    public void decodeTest() {
        String encryptedMessage = "defendtheeastwallofthecastle";
        String cipherSmall = "phqgiumeaylnofdxjkrcvstzwb";
        String expectedResult = "gkfnghlkgnghftuhhnigosgngvf";
        
        assertEquals(expectedResult, SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));
    }


No.4 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "def";
    String cipherSmall = "bcadfe";
    String expected = "abc";
    String actual = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);
    assertEquals(expected, actual);
}


No.5 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "Kfaov vf xli qebob npj ljthpqiltk ebovfkd.";
    String cipherSmall = "cdefghijklmnopqrstuvwxyzab";
    String expected = "Happy is the only way forward.";
    String actual = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);
    assertEquals(expected, actual);
}


No.6 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "vukixlxy winvarix piwwmx";
    String cipherSmall = "apzgfho";
    String expectedDecodedMessage = "mysterious mountains";
    String actualDecodedMessage = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);
    assertEquals(expectedDecodedMessage, actualDecodedMessage);
}


No.7 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "Rvw, oev bbvc!!";
    String cipherSmall = "qwertyuiopasdfghjklzxcvbnm";
    String expected = "Hey, you work!!";
    String actual = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);
    assertEquals(expected, actual);
}


No.8 generated result --------------------------

@Test
public void decodeTest() {
    assertEquals("the quick brown fox jumps over the lazy dog", SimpleSubstitutionCipher.decode("wli tlska exptj fvz hovsk yli wpeb rap", "dcoders"));
}


No.9 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "yrkk zru";
    String cipherSmall = "bcdefghijklmnopqrstuvwxyza";
    String expected = "well done";
    String actual = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);
    assertEquals(expected, actual);
}


No.10 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "Rtk pgy.";
    String cipherSmall = "qwertyuiopasdfghjklzxcvbnm";
    String expected = "Hey man.";
    String actual = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);
    assertEquals(expected, actual);
}


