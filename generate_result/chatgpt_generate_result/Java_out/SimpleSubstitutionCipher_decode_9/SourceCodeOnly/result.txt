Source code: 


public static String decode(String encryptedMessage, String cipherSmall) {
    StringBuilder decoded = new StringBuilder();

    Map<Character, Character> cipherMap = new HashMap<>();

    char beginSmallLetter = 'a';
    char beginCapitalLetter = 'A';

    cipherSmall = cipherSmall.toLowerCase();
    String cipherCapital = cipherSmall.toUpperCase();

    for (int i = 0; i < cipherSmall.length(); i++) {
        cipherMap.put(cipherSmall.charAt(i), beginSmallLetter++);
        cipherMap.put(cipherCapital.charAt(i), beginCapitalLetter++);
    }

    for (int i = 0; i < encryptedMessage.length(); i++) {
        if (Character.isAlphabetic(encryptedMessage.charAt(i))) {
            decoded.append(cipherMap.get(encryptedMessage.charAt(i)));
        } else {
            decoded.append(encryptedMessage.charAt(i));
        }
    }

    return decoded.toString();
}



No.1 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "FgnSQRWVqVTgY5r47Ff2hqzNxGrcX6xzSy";
    String cipherSmall = "khoqgvmnzlapfdiebrwystucxj";
    assertEquals("SomeSecretMessage1234", decode(encryptedMessage, cipherSmall));
}


No.2 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "Bmj af b tmfq.";
    String cipherSmall = "xyzabcdefghijklmnopqrstuvw";
    String expected = "You are a hero.";
    assertEquals(expected, SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));
}


No.3 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "defend the east wall of the castle";
    String cipherSmall = "phqgiumeaylnofdxjkrcvstzwb";
    
    String expected = "giuifg cei iprc tpnn du cei qprcni";
    String actual = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);
    
    assertEquals(expected, actual);
}


No.4 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "abc";
    String cipherSmall = "zyx";

    String expectedResult = "zyx";
    String actualResult = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);

    assertEquals(expectedResult, actualResult);
}


No.5 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "Ebiil Tloia";
    String cipher = "qwertyuiopasdfghjklzxcvbnm";
    String expected = "Hello World";
    String actual = SimpleSubstitutionCipher.decode(encryptedMessage, cipher);
    assertEquals(expected, actual);
}


No.6 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "khoor, zruog!";
    String cipherSmall = "defghijklmnopqrstuvwxyzabc";
    assertEquals("hello, world!", SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));
}


No.7 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "Qixiepq we awr fqfargpiad";
    String cipherSmall = "bqngfwvcjlmrodhixytkaupzes";
    String expectedResult = "Developer is an essential";
    assertEquals(expectedResult, SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));
}


No.8 generated result --------------------------

@Test
public void decodeTest() {
    String encryptedMessage = "KICSKKSI";
    String cipherSmall = "defghijklmnopqrstuvwxyzcba";
    String expected = "HELLOWORLD";
    assertEquals(expected, SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));
}


No.9 generated result --------------------------

@Test
public void decodeTest() {
    assertEquals("Hello, World!", SimpleSubstitutionCipher.decode("Uryyb, Jbeyq!", "qwertyuiopasdfghjklzxcvbnm"));
}


No.10 generated result --------------------------

@Test
public void decodeTest() {
    assertEquals("a", SimpleSubstitutionCipher.decode("a", "b"));
}


