{
    "project_name": "Java",
    "file_name": "TwinPrime.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/maths/TwinPrime.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.maths",
    "docstring": "/**\n     * This method returns twin prime of the integer value passed as argument\n     *\n     * @param input_number Integer value of which twin prime is to be found\n     * @return (number + 2) if number and (number + 2) are prime, -1 otherwise\n     */",
    "source_code": "\nstatic int getTwinPrime(int inputNumber) {\n\n    // if inputNumber and (inputNumber + 2) are both prime\n    // then return (inputNumber + 2) as a result\n    if (PrimeCheck.isPrime(inputNumber) && PrimeCheck.isPrime(inputNumber + 2)) {\n        return inputNumber + 2;\n    }\n    // if any one from inputNumber and (inputNumber + 2) or if both of them are not prime\n    // then return -1 as a result\n    return -1;\n}\n",
    "class_name": "TwinPrime",
    "method_name": "getTwinPrime",
    "arguments": [
        "int inputNumber"
    ],
    "generate_test": [
        "@Test\npublic void getTwinPrimeTest() {\n    assertEquals(3, TwinPrime.getTwinPrime(1));\n    assertEquals(5, TwinPrime.getTwinPrime(3));\n    assertEquals(11, TwinPrime.getTwinPrime(7));\n    assertEquals(17, TwinPrime.getTwinPrime(13));\n    assertEquals(19, TwinPrime.getTwinPrime(17));\n    assertEquals(-1, TwinPrime.getTwinPrime(10));\n}",
        "@Test\npublic void getTwinPrimeTest() {\n    assertEquals(5, TwinPrime.getTwinPrime(3));\n    assertEquals(11, TwinPrime.getTwinPrime(7));\n    assertEquals(-1, TwinPrime.getTwinPrime(6));\n    assertEquals(-1, TwinPrime.getTwinPrime(9));\n}",
        "@Test\npublic void getTwinPrimeTest() {\n    assertEquals(3, TwinPrime.getTwinPrime(1));\n    assertEquals(5, TwinPrime.getTwinPrime(3));\n    assertEquals(-1, TwinPrime.getTwinPrime(8));\n}",
        "@Test\npublic void getTwinPrimeTest() {\n    assertEquals(11, TwinPrime.getTwinPrime(7));\n    assertEquals(5, TwinPrime.getTwinPrime(3));\n    assertEquals(-1, TwinPrime.getTwinPrime(10));\n}",
        "@Test\npublic void getTwinPrimeTest() {\n    assertEquals(3, TwinPrime.getTwinPrime(1));\n    assertEquals(7, TwinPrime.getTwinPrime(3));\n    assertEquals(13, TwinPrime.getTwinPrime(11));\n    assertEquals(19, TwinPrime.getTwinPrime(17));\n    assertEquals(29, TwinPrime.getTwinPrime(23));\n    assertEquals(-1, TwinPrime.getTwinPrime(16));\n}",
        "@Test\npublic void getTwinPrimeTest() {\n    assertEquals(3, TwinPrime.getTwinPrime(1));\n    assertEquals(5, TwinPrime.getTwinPrime(3));\n    assertEquals(7, TwinPrime.getTwinPrime(5));\n    assertEquals(11, TwinPrime.getTwinPrime(7));\n    assertEquals(17, TwinPrime.getTwinPrime(11));\n    assertEquals(-1, TwinPrime.getTwinPrime(8));\n}",
        "@Test\npublic void getTwinPrimeTest() {\n    assertEquals(3, TwinPrime.getTwinPrime(1));\n    assertEquals(5, TwinPrime.getTwinPrime(3));\n    assertEquals(7, TwinPrime.getTwinPrime(5));\n    assertEquals(11, TwinPrime.getTwinPrime(7));\n    assertEquals(13, TwinPrime.getTwinPrime(11));\n    assertEquals(-1, TwinPrime.getTwinPrime(4));\n    assertEquals(-1, TwinPrime.getTwinPrime(8));\n    assertEquals(-1, TwinPrime.getTwinPrime(10));\n}",
        "@Test\npublic void getTwinPrimeTest() {\n    assertEquals(3, TwinPrime.getTwinPrime(1));\n    assertEquals(11, TwinPrime.getTwinPrime(3));\n    assertEquals(17, TwinPrime.getTwinPrime(11));\n    assertEquals(-1, TwinPrime.getTwinPrime(4));\n}",
        "@Test\n    public void getTwinPrimeTest() {\n        int result = TwinPrime.getTwinPrime(3);\n        assertEquals(5, result);\n    }",
        "@Test\npublic void getTwinPrimeTest() {\n    assertEquals(3, TwinPrime.getTwinPrime(1));\n    assertEquals(11, TwinPrime.getTwinPrime(11));\n    assertEquals(101, TwinPrime.getTwinPrime(101));\n    assertEquals(-1, TwinPrime.getTwinPrime(4));\n}"
    ]
}