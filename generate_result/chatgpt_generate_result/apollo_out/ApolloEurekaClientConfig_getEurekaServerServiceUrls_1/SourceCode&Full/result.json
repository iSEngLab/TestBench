{
    "project_name": "apollo",
    "file_name": "ApolloEurekaClientConfig.java",
    "relative_path": "apollo/apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/eureka/ApolloEurekaClientConfig.java",
    "execute_path": "apollo",
    "package": "com.ctrip.framework.apollo.biz.eureka",
    "docstring": "/**\n   * Assert only one zone: defaultZone, but multiple environments.\n   */",
    "source_code": "\n@Override\npublic List<String> getEurekaServerServiceUrls(String myZone) {\n  List<String> urls = bizConfig.eurekaServiceUrls();\n  return CollectionUtils.isEmpty(urls) ? super.getEurekaServerServiceUrls(myZone) : urls;\n}\n",
    "class_name": "ApolloEurekaClientConfig",
    "method_name": "getEurekaServerServiceUrls",
    "arguments": [
        "String myZone"
    ],
    "generate_test": [
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    ApolloEurekaClientConfig config = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n    List<String> expected = Arrays.asList(\"http://example.com\");\n    List<String> actual = config.getEurekaServerServiceUrls(\"testZone\");\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    // Given\n    ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig();\n    String myZone = \"testZone\";\n    \n    // When\n    List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(myZone);\n    \n    // Then\n    assertNotNull(result);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n    List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n    // Add assertions here\n    assertEquals(Collections.emptyList(), result);  // example assertion\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    // Given\n    ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig(bizConfig, refreshScope);\n    String myZone = \"testZone\";\n    \n    // When\n    List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(myZone);\n    \n    // Then\n    assertNotNull(result);\n    // Add more assertions as needed...\n}",
        "List<String> urls = Arrays.asList(\"http://example.com\", \"http://test.com\");\nList<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\nassertEquals(urls, result);",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    // Create an instance of ApolloEurekaClientConfig\n    ApolloEurekaClientConfig config = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n    \n    // Create a test case for when the list of service urls is empty\n    List<String> emptyUrls = new ArrayList<>();\n    when(config.getEurekaServerServiceUrls(\"myZone\")).thenReturn(emptyUrls);\n    List<String> result1 = config.getEurekaServerServiceUrls(\"myZone\");\n    assertTrue(result1.isEmpty());\n    \n    // Create a test case for when the list of service urls is not empty\n    List<String> nonEmptyUrls = Arrays.asList(\"url1\", \"url2\");\n    when(config.getEurekaServerServiceUrls(\"myZone\")).thenReturn(nonEmptyUrls);\n    List<String> result2 = config.getEurekaServerServiceUrls(\"myZone\");\n    assertArrayEquals(nonEmptyUrls.toArray(), result2.toArray());\n}\n",
        "\n    @Test\n    public void getEurekaServerServiceUrlsTest() {\n        String myZone = \"testZone\";\n        List<String> expectedUrls = Arrays.asList(\"url1\", \"url2\", \"url3\");\n        BizConfig mockBizConfig = mock(BizConfig.class);\n        EurekaClientConfigBean eurekaClientConfigBean = new ApolloEurekaClientConfig(mockBizConfig, mock(RefreshScope.class));\n        \n        when(mockBizConfig.eurekaServiceUrls()).thenReturn(expectedUrls);\n        List<String> actualUrls = eurekaClientConfigBean.getEurekaServerServiceUrls(myZone);\n        \n        assertEquals(expectedUrls, actualUrls);\n    }\n}",
        "@Test\n public void getEurekaServerServiceUrlsTest() {\n   ApolloEurekaClientConfig config = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n   String myZone = \"testZone\";\n   List<String> result = config.getEurekaServerServiceUrls(myZone);\n   assertNotNull(result);\n }",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    ApolloEurekaClientConfig eurekaClientConfig = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n    List<String> urls = eurekaClientConfig.getEurekaServerServiceUrls(\"defaultZone\");\n    assertNotNull(urls);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    // Test case 1\n    ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig(bizConfig, refreshScope);\n    List<String> urls = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n    assertNotNull(urls);\n}"
    ]
}