{
    "project_name": "apollo",
    "file_name": "ApolloEurekaClientConfig.java",
    "relative_path": "apollo/apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/eureka/ApolloEurekaClientConfig.java",
    "execute_path": "apollo",
    "package": "com.ctrip.framework.apollo.biz.eureka",
    "docstring": "/**\n   * Assert only one zone: defaultZone, but multiple environments.\n   */",
    "source_code": "\n@Override\npublic List<String> getEurekaServerServiceUrls(String myZone) {\n  List<String> urls = bizConfig.eurekaServiceUrls();\n  return CollectionUtils.isEmpty(urls) ? super.getEurekaServerServiceUrls(myZone) : urls;\n}\n",
    "class_name": "ApolloEurekaClientConfig",
    "method_name": "getEurekaServerServiceUrls",
    "arguments": [
        "String myZone"
    ],
    "generate_test": [
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n    List<String> urls = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n    List<String> expectedResult = List.of(\"url1\", \"url2\", \"url3\");\n    assertEquals(expectedResult, urls);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    // Given\n    ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig();\n    String myZone = \"testZone\";\n    \n    // When\n    List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(myZone);\n    \n    // Then\n    assertNotNull(result);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    ApolloEurekaClientConfig eurekaClientConfig = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n    List<String> urls = eurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n    assertNotNull(urls);\n}",
        "public void getEurekaServerServiceUrlsTest() {\n    // given\n    ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig(bizConfig, refreshScope);\n    \n    // when\n    List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n    \n    // then\n    assertEquals(expectedResult, result);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  // Create an instance of ApolloEurekaClientConfig\n  ApolloEurekaClientConfig eurekaClientConfig = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n  \n  // Create a test case for CollectionUtils.isEmpty(urls)\n  List<String> urlsEmpty = Collections.emptyList();\n  assertArrayEquals(urlsEmpty, eurekaClientConfig.getEurekaServerServiceUrls(\"testZone\"));\n  \n  // Create a test case for !CollectionUtils.isEmpty(urls)\n  List<String> urls = Arrays.asList(\"http://service1\", \"http://service2\");\n  assertArrayEquals(urls, eurekaClientConfig.getEurekaServerServiceUrls(\"testZone\"));  \n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  List<String> urls = Arrays.asList(\"http://eureka-service1\", \"http://eureka-service2\");\n  ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n  List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n  assertEquals(urls, result);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n  List<String> urls = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n  assertEquals(<expectedList>, urls);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    ApolloEurekaClientConfig eurekaClientConfig = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n    List<String> urls = eurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n    assertNotNull(urls);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    // Context\n    String myZone = \"test\";\n\n    // Create ApolloEurekaClientConfig object\n    ApolloEurekaClientConfig eurekaClientConfig = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n\n    // Execute the method\n    List<String> result = eurekaClientConfig.getEurekaServerServiceUrls(myZone);\n\n    // Verify the result\n    assertNotNull(result);\n    assertTrue(result instanceof List);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig(new BizConfig(), new RefreshScope());\n    List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n    assertNotNull(result);\n}"
    ]
}