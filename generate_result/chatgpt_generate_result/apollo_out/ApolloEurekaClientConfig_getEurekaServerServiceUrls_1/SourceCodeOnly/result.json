{
    "project_name": "apollo",
    "file_name": "ApolloEurekaClientConfig.java",
    "relative_path": "apollo/apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/eureka/ApolloEurekaClientConfig.java",
    "execute_path": "apollo",
    "package": "com.ctrip.framework.apollo.biz.eureka",
    "docstring": "/**\n   * Assert only one zone: defaultZone, but multiple environments.\n   */",
    "source_code": "\n@Override\npublic List<String> getEurekaServerServiceUrls(String myZone) {\n  List<String> urls = bizConfig.eurekaServiceUrls();\n  return CollectionUtils.isEmpty(urls) ? super.getEurekaServerServiceUrls(myZone) : urls;\n}\n",
    "class_name": "ApolloEurekaClientConfig",
    "method_name": "getEurekaServerServiceUrls",
    "arguments": [
        "String myZone"
    ],
    "generate_test": [
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  ApolloEurekaClientConfig config = new ApolloEurekaClientConfig();\n  List<String> result = config.getEurekaServerServiceUrls(\"testZone\");\n  assertEquals(expectedList, result);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  // Arrange\n  ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig();\n  String myZone = \"testZone\";\n  // Act\n  List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(myZone);\n  // Assert\n  assertNotNull(result);\n}\n",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  ApolloEurekaClientConfig config = new ApolloEurekaClientConfig();\n  List<String> urls = config.getEurekaServerServiceUrls(\"testZone\");\n  assertNotNull(urls);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  List<String> urls = new ArrayList<>();\n  urls.add(\"http://eureka-service-url1.com\");\n  urls.add(\"http://eureka-service-url2.com\");\n  ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig();\n  List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n  assertEquals(urls, result);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig();\n  List<String> urls = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n  assertNotNull(urls);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n    ApolloEurekaClientConfig config = new ApolloEurekaClientConfig();\n    List<String> myUrls = new ArrayList<>();\n    myUrls.add(\"http://example.com\");\n    List<String> result = config.getEurekaServerServiceUrls(\"myZone\");\n    assertEquals(myUrls, result);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig();\n  List<String> urls = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n  assertNotNull(urls);\n}\n",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  ApolloEurekaClientConfig config = new ApolloEurekaClientConfig();\n  String myZone = \"testZone\";\n  List<String> testUrls = new ArrayList<>();\n  testUrls.add(\"http://testurl1\");\n  testUrls.add(\"http://testurl2\");\n  config.setBizConfig(new BizConfig()); // Mock bizConfig\n  when(config.getBizConfig().eurekaServiceUrls()).thenReturn(testUrls);\n  \n  List<String> result = config.getEurekaServerServiceUrls(myZone);\n  assertEquals(testUrls, result);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  String myZone = \"testZone\";\n  List<String> urls = new ArrayList<>();\n  urls.add(\"http://localhost:8761/eureka/\");\n  \n  ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig();\n  List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(myZone);\n  \n  assertEquals(urls, result);\n}",
        "@Test\npublic void getEurekaServerServiceUrlsTest() {\n  ApolloEurekaClientConfig apolloEurekaClientConfig = new ApolloEurekaClientConfig();\n  List<String> urls = new ArrayList<>();\n  urls.add(\"http://localhost:8761/eureka\");\n  List<String> result = apolloEurekaClientConfig.getEurekaServerServiceUrls(\"myZone\");\n  assertEquals(urls, result);\n}"
    ]
}