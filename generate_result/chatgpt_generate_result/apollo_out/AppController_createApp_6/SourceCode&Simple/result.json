{
    "project_name": "apollo",
    "file_name": "AppController.java",
    "relative_path": "apollo/apollo-portal/src/main/java/com/ctrip/framework/apollo/openapi/v1/controller/AppController.java",
    "execute_path": "apollo",
    "package": "com.ctrip.framework.apollo.openapi.v1.controller",
    "docstring": "/**\n   * @see com.ctrip.framework.apollo.portal.controller.AppController#create(AppModel)\n   */",
    "source_code": "\n@Transactional\n@PreAuthorize(value = \"@consumerPermissionValidator.hasCreateApplicationPermission(#request)\")\n@PostMapping(value = \"/apps\")\npublic void createApp(\n    @RequestBody OpenCreateAppDTO req,\n    HttpServletRequest request\n) {\n  if (null == req.getApp()) {\n    throw new BadRequestException(\"App is null\");\n  }\n  final OpenAppDTO app = req.getApp();\n  if (null == app.getAppId()) {\n    throw new BadRequestException(\"AppId is null\");\n  }\n  // create app\n  this.appOpenApiService.createApp(req);\n  if (req.isAssignAppRoleToSelf()) {\n    long consumerId = this.consumerAuthUtil.retrieveConsumerId(request);\n    consumerService.assignAppRoleToConsumer(consumerId, app.getAppId());\n  }\n}\n",
    "class_name": "AppController",
    "method_name": "createApp",
    "arguments": [
        "OpenCreateAppDTO req",
        "HttpServletRequest request"
    ],
    "generate_test": [
        "@Test\npublic void createAppTest() {\n    // Create an instance of the AppController class\n    AppController appController = new AppController(consumerAuthUtil, consumerService, appOpenApiService);\n    \n    // Create a mock OpenCreateAppDTO object\n    OpenCreateAppDTO openCreateAppDTO = new OpenCreateAppDTO();\n    \n    // Create a mock HttpServletRequest object\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    \n    // Call the createApp method with the mock objects\n    appController.createApp(openCreateAppDTO, request);\n    \n    // Add assertions to check the behavior and output of the method\n    // For example:\n    // assertEquals(expectedOutput, actualOutput);\n}",
        "@Test\npublic void createAppTest() {\n    // Given\n    OpenCreateAppDTO req = new OpenCreateAppDTO();\n    OpenAppDTO app = new OpenAppDTO();\n    app.setAppId(\"testAppId\");\n    req.setApp(app);\n    HttpServletRequest request = new HttpServletRequest();\n\n    // When\n    AppController appController = new AppController();\n    appController.createApp(req, request);\n\n    // Then\n    assertNotNull(appController.findApps(\"testAppId\"));\n}",
        "package com.ctrip.framework.apollo.openapi.v1.controller;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AppControllerTest {\n    @Test\n    public void createAppTest() {\n        // Given\n        OpenCreateAppDTO req = new OpenCreateAppDTO();\n        HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n        AppController appController = new AppController(Mockito.mock(ConsumerAuthUtil.class), Mockito.mock(ConsumerService.class), Mockito.mock(AppOpenApiService.class))\n\n        // When\n        appController.createApp(req, request);\n\n        // Then\n        // Add assertions for the expected behavior of the createApp method\n    }\n}",
        "@Test\npublic void createAppTest() {\n    OpenCreateAppDTO req = new OpenCreateAppDTO();\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(req.getApp()).thenReturn(new OpenAppDTO());\n    assertThrows(BadRequestException.class, () -> {\n        appController.createApp(req, request);\n    });\n}",
        "@Test\npublic void createAppTest() {\n    // Given\n    OpenCreateAppDTO request = new OpenCreateAppDTO();\n    HttpServletRequest servletRequest = new MockHttpServletRequest();\n    \n    // When\n    Throwable exception = assertThrows(BadRequestException.class, () ->\n            appController.createApp(request, servletRequest));\n    \n    // Then\n    assertEquals(\"App is null\", exception.getMessage());\n}",
        "package com.ctrip.framework.apollo.openapi.v1.controller;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AppControllerTest {\n    @Test\n    public void createAppTest() {\n        // Create a new OpenCreateAppDTO object\n        OpenCreateAppDTO req = new OpenCreateAppDTO();\n        // Set the required properties for the req object\n        // ...\n\n        // Create a new HttpServletRequest object\n        HttpServletRequest request = new HttpServletRequest();\n\n        // Create an instance of AppController\n        AppController appController = new AppController(new ConsumerAuthUtil(), new ConsumerService(), new AppOpenApiService());\n\n        // Call the createApp method\n        appController.createApp(req, request);\n\n        // Add assertions here to validate the functionality of createApp method\n        // ...\n    }\n}",
        "@Test\npublic void createAppTest() {\n    // Given\n    OpenCreateAppDTO openCreateAppDTO = new OpenCreateAppDTO();\n    HttpServletRequest request = new HttpServletRequest();\n    // When\n    // createApp() method to be tested\n    // Then\n    // Assert statements to validate the behavior of createApp() method\n}",
        "@Test\npublic void createAppTest() {\n    OpenCreateAppDTO req = new OpenCreateAppDTO();\n    HttpServletRequest request = new HttpServletRequest();\n    \n    AppController appController = new AppController(new ConsumerAuthUtil(), new ConsumerService(), new AppOpenApiService());\n    appController.createApp(req, request);\n}",
        "@Test\npublic void createAppTest() {\n    // Create test data\n    OpenCreateAppDTO req = new OpenCreateAppDTO();\n    OpenAppDTO app = new OpenAppDTO();\n    app.setAppId(\"testAppId\");\n    req.setApp(app);\n    HttpServletRequest request = new MockHttpServletRequest();\n    \n    // Execute the method\n    appController.createApp(req, request);\n    \n    // Verify the result\n    // Add verification code here\n}",
        "@Test\npublic void createAppTest() {\n    OpenCreateAppDTO openCreateAppDTO = new OpenCreateAppDTO();\n    HttpServletRequest request = // create an instance of HttpServletRequest here;\n    // fill in the code to set up the OpenCreateAppDTO object as needed for the test\n    // call the createApp method with the OpenCreateAppDTO and request and assert the expected behavior\n}"
    ]
}