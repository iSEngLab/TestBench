{
    "project_name": "apollo",
    "file_name": "Env.java",
    "relative_path": "apollo/apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/environment/Env.java",
    "execute_path": "apollo",
    "package": "com.ctrip.framework.apollo.portal.environment",
    "docstring": "/**\n   * add some change to environment name trim and to upper\n   *\n   * @param envName\n   * @return\n   */",
    "source_code": "\nprivate static String getWellFormName(String envName) {\n  if (StringUtils.isBlank(envName)) {\n    return \"\";\n  }\n\n  String envWellFormName = envName.trim().toUpperCase();\n\n  // special case for production in case of typo\n  if (\"PROD\".equals(envWellFormName)) {\n    return Env.PRO.name;\n  }\n\n  // special case that FAT & FWS should map to FAT\n  if (\"FWS\".equals(envWellFormName)) {\n    return Env.FAT.name;\n  }\n\n  return envWellFormName;\n}\n",
    "class_name": "Env",
    "method_name": "getWellFormName",
    "arguments": [
        "String envName"
    ],
    "generate_test": [
        "@Test\npublic void getWellFormNameTest() {\n    assertEquals(\"\", Env.getWellFormName(null));\n    assertEquals(\"DEV\", Env.getWellFormName(\"  dev \"));\n    assertEquals(\"TOOLS\", Env.getWellFormName(\"TooLs\"));\n    assertEquals(\"PRO\", Env.getWellFormName(\"PROD\"));\n    assertEquals(\"FAT\", Env.getWellFormName(\"fws\"));\n}",
        "@Test\npublic void getWellFormNameTest() {\n    // Given\n    String envName = \"prod\";\n    \n    // When\n    String result = Env.getWellFormName(envName);\n    \n    // Then\n    assertEquals(\"PRO\", result);\n}",
        "@Test\npublic void getWellFormNameTest() {\n    assertEquals(\"\", Env.getWellFormName(\"\"));\n    assertEquals(\"DEV\", Env.getWellFormName(\"dev\"));\n    assertEquals(\"PROD\", Env.getWellFormName(\"prod\"));\n    assertEquals(\"FAT\", Env.getWellFormName(\"fws\"));\n}",
        "@Test\npublic void getWellFormNameTest() {\n    // Given\n    String envName = \"dev\";\n    \n    // When\n    String result = Env.getWellFormName(envName);\n    \n    // Then\n    assertEquals(\"DEV\", result);\n}",
        "@Test\npublic void getWellFormNameTest() {\n    String result1 = Env.getWellFormName(\"\");\n    assertEquals(\"\", result1);\n\n    String result2 = Env.getWellFormName(\"dev\");\n    assertEquals(\"DEV\", result2);\n\n    String result3 = Env.getWellFormName(\"FWS\");\n    assertEquals(\"FAT\", result3);\n\n    String result4 = Env.getWellFormName(\"prod\");\n    assertEquals(Env.PRO.name, result4);\n}",
        "@Test\npublic void getWellFormNameTest() {\n    assertEquals(\"PRO\", Env.getWellFormName(\"prod\"));\n    assertEquals(\"FAT\", Env.getWellFormName(\"fws\"));\n    assertEquals(\"DEV\", Env.getWellFormName(\" dev \"));\n    assertEquals(\"\", Env.getWellFormName(\"\"));\n}",
        "@Test\npublic void getWellFormNameTest() {\n    assertEquals(\"LOCAL\", Env.getWellFormName(\"local\"));\n    assertEquals(\"DEV\", Env.getWellFormName(\"dev\"));\n    assertEquals(\"FAT\", Env.getWellFormName(\"fws\"));\n    assertEquals(\"PRO\", Env.getWellFormName(\"PROD\"));\n    assertEquals(\"UAT\", Env.getWellFormName(\"uat\"));\n}",
        "@Test\n    public void getWellFormNameTest() {\n        assertEquals(\"\", Env.getWellFormName(\"\"));\n        assertEquals(\"PRO\", Env.getWellFormName(\"prod\"));\n        assertEquals(\"FAT\", Env.getWellFormName(\"fws\"));\n        assertEquals(\"DEV\", Env.getWellFormName(\"Dev\"));\n        assertEquals(\"UAT\", Env.getWellFormName(\"UAT\"));\n    }",
        "@Test\npublic void getWellFormNameTest() {\n    // Given\n    String input = \"FAT\";\n    \n    // When\n    String result = Env.getWellFormName(input);\n    \n    // Then\n    assertEquals(\"FAT\", result);\n}",
        "@Test\npublic void getWellFormNameTest() {\n    // Given\n    String envName = \"FWS\";\n    \n    // When\n    String result = Env.getWellFormName(envName);\n    \n    // Then\n    assertEquals(\"FAT\", result);\n}"
    ]
}