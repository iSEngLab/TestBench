Source code: 


private static String getWellFormName(String envName) {
  if (StringUtils.isBlank(envName)) {
    return "";
  }

  String envWellFormName = envName.trim().toUpperCase();

  // special case for production in case of typo
  if ("PROD".equals(envWellFormName)) {
    return Env.PRO.name;
  }

  // special case that FAT & FWS should map to FAT
  if ("FWS".equals(envWellFormName)) {
    return Env.FAT.name;
  }

  return envWellFormName;
}



No.1 generated result --------------------------

@Test
public void getWellFormNameTest() {
    assertEquals("", getWellFormName(""));
    assertEquals("PRO", getWellFormName("Prod"));
    assertEquals("FAT", getWellFormName("FAT"));
    assertEquals("FAT", getWellFormName("fws"));
}


No.2 generated result --------------------------

@Test
public void getWellFormNameTest() {
    assertEquals("", Env.getWellFormName(null));
    assertEquals("PROD", Env.getWellFormName("prod"));
    assertEquals("FAT", Env.getWellFormName("fws"));
    assertEquals("TEST", Env.getWellFormName("test"));
}


No.3 generated result --------------------------

@Test
public void getWellFormNameTest() {
    assertEquals("", getWellFormName(""));
    assertEquals("PROD", getWellFormName("prod"));
    assertEquals("FAT", getWellFormName("fws"));
    assertEquals("DEV", getWellFormName("dev"));
}


No.4 generated result --------------------------



@Test
public void getWellFormNameTest() {
    // Test case for blank input
    assertEquals("", getWellFormName(""));

    // Test case for all lowercase input
    assertEquals("TEST", getWellFormName("test"));

    // Test case for production special case
    assertEquals("PROD", getWellFormName("PROD"));

    // Test case for FWS special case
    assertEquals("FAT", getWellFormName("FWS"));
}


No.5 generated result --------------------------

@Test
public void getWellFormNameTest() {
    String result = getWellFormName(null);
    assertEquals("", result);
    
    result = getWellFormName("");
    assertEquals("", result);
    
    result = getWellFormName("  PROD  ");
    assertEquals(Env.PRO.name, result);
    
    result = getWellFormName("FWS");
    assertEquals(Env.FAT.name, result);
    
    result = getWellFormName("dev");
    assertEquals("DEV", result);
}


No.6 generated result --------------------------

@Test
public void getWellFormNameTest() {
    assertEquals("", EnvTest.getWellFormName(""));
    assertEquals("PROD", EnvTest.getWellFormName("prod"));
    assertEquals("FAT", EnvTest.getWellFormName("fws"));
}


No.7 generated result --------------------------

@Test
public void getWellFormNameTest() {
  assertEquals("", getWellFormName(""));
  assertEquals("PROD", getWellFormName("prod"));
  assertEquals("FAT", getWellFormName("FWS"));
  assertEquals("DEV", getWellFormName("DEV"));
}


No.8 generated result --------------------------

@Test
public void getWellFormNameTest() {
    assertEquals("", getWellFormName("")); // Test case for empty input
    assertEquals("PRO", getWellFormName("prod")); // Test case for "PROD" conversion
    assertEquals("FAT", getWellFormName("fws")); // Test case for "FWS" conversion
    assertEquals("DEV", getWellFormName("dev")); // Test case for regular input
}


No.9 generated result --------------------------

@Test
public void getWellFormNameTest() {
    String result1 = Env.getWellFormName("");
    assertEquals("", result1);
    
    String result2 = Env.getWellFormName("prod");
    assertEquals("PRO", result2);
    
    String result3 = Env.getWellFormName("FWS");
    assertEquals("FAT", result3);
    
    String result4 = Env.getWellFormName("test");
    assertEquals("TEST", result4);
}


No.10 generated result --------------------------

@Test
public void getWellFormNameTest() {
  assertEquals("", Env.getWellFormName(""));
  assertEquals("PRO", Env.getWellFormName("Prod"));
  assertEquals("FAT", Env.getWellFormName("FWS"));
  assertEquals("DEV", Env.getWellFormName("dev"));
}


