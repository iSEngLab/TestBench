Source code: 


public CompareToBuilder append(final boolean[] lhs, final boolean[] rhs) {
    if (comparison != 0) {
        return this;
    }
    if (lhs == rhs) {
        return this;
    }
    if (lhs == null) {
        comparison = -1;
        return this;
    }
    if (rhs == null) {
        comparison = 1;
        return this;
    }
    if (lhs.length != rhs.length) {
        comparison = lhs.length < rhs.length ? -1 : 1;
        return this;
    }
    for (int i = 0; i < lhs.length && comparison == 0; i++) {
        append(lhs[i], rhs[i]);
    }
    return this;
}



No.1 generated result --------------------------

package org.apache.commons.lang3.builder;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class CompareToBuilderTest {
    @Test
    public void appendTest() {
        CompareToBuilder builder = new CompareToBuilder();
        builder.append(new boolean[]{true, false}, new boolean[]{true, false});
        int result = builder.toComparison();
        assertEquals(0, result);
    }
}


No.2 generated result --------------------------

@Test
public void appendTest() {
    CompareToBuilder compareToBuilder = new CompareToBuilder();
    int comparisonResult = compareToBuilder.append(new boolean[]{true, false}, new boolean[]{true, true}).toComparison();
    assertEquals(-1, comparisonResult);
}


No.3 generated result --------------------------

@Test
public void appendTest() {
    CompareToBuilder builder = new CompareToBuilder();
    boolean[] lhs = {true, false, true};
    boolean[] rhs = {true, false, true};
    builder.append(lhs, rhs);
    int result = builder.toComparison();
    assertEquals(0, result);
}


No.4 generated result --------------------------

@Test
public void appendTest() {
    CompareToBuilder builder = new CompareToBuilder();
    boolean[] array1 = {true, false, true};
    boolean[] array2 = {true, false, true};
    builder.append(array1, array2);
    int result = builder.toComparison();
    assertEquals(0, result);
}


No.5 generated result --------------------------

@Test
public void appendTest() {
    CompareToBuilder builder = new CompareToBuilder();
    int comparisonExpected = 1;
    boolean[] lhs = {true, false, true};
    boolean[] rhs = {false, true, false};
    builder.append(lhs, rhs);
    int result = builder.toComparison();
    assertEquals(comparisonExpected, result);
}


No.6 generated result --------------------------

CompareToBuilder compareToBuilder = new CompareToBuilder();
int result = compareToBuilder.append(new boolean[]{true, false, true}, new boolean[]{true, true, false}).toComparison();
assertEquals(1, result);


No.7 generated result --------------------------

@Test
public void appendTest() {
    CompareToBuilder compareToBuilder = new CompareToBuilder();
    compareToBuilder.append(true, false);
    int result = compareToBuilder.toComparison();
    assertEquals(1, result);
}


No.8 generated result --------------------------

@Test
public void appendTest() {
    CompareToBuilder builder = new CompareToBuilder();
    boolean[] lhs = {true, false, true};
    boolean[] rhs = {false, false, true};
    CompareToBuilder result = builder.append(lhs, rhs);
    assertEquals(-1, result.toComparison());
}


No.9 generated result --------------------------

@Test
public void appendTest() {
    CompareToBuilder builder = new CompareToBuilder();
    boolean[] arr1 = {true, false, true};
    boolean[] arr2 = {false, false, true};
    CompareToBuilder result = builder.append(arr1, arr2);
    int comparisonResult = result.toComparison();
    assertEquals(-1, comparisonResult);
}


No.10 generated result --------------------------

package org.apache.commons.lang3.builder;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class CompareToBuilderTest {
    @Test
    public void appendTest() {
        CompareToBuilder builder = new CompareToBuilder();
        builder.append(new boolean[]{true, false}, new boolean[]{true, true});
        assertEquals(1, builder.toComparison());
    }
}


