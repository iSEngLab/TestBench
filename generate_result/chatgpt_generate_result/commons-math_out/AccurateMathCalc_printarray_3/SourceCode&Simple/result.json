{
    "project_name": "commons-math",
    "file_name": "AccurateMathCalc.java",
    "relative_path": "commons-math/commons-math-core/src/main/java/org/apache/commons/math4/core/jdkmath/AccurateMathCalc.java",
    "execute_path": "commons-math/commons-math-core",
    "package": "org.apache.commons.math4.core.jdkmath",
    "docstring": "/**\n     * Print an array.\n     * @param out text output stream where output should be printed\n     * @param name array name\n     * @param expectedLen expected length of the array\n     * @param array2d array data\n     */",
    "source_code": "\nstatic void printarray(PrintStream out, String name, int expectedLen, double[][] array2d) {\n    out.println(name);\n    checkLen(expectedLen, array2d.length);\n    out.println(TABLE_START_DECL + \" \");\n    int i = 0;\n    for (double[] array : array2d) { // \"double array[]\" causes PMD parsing error\n        out.print(\"        {\");\n        for (double d : array) { // assume inner array has very few entries\n            out.printf(\"%-25.25s\", format(d)); // multiple entries per line\n        }\n        out.println(\"}, // \" + i++);\n    }\n    out.println(TABLE_END_DECL);\n}\n",
    "class_name": "AccurateMathCalc",
    "method_name": "printarray",
    "arguments": [
        "PrintStream out",
        "String name",
        "int expectedLen",
        "double[][] array2d"
    ],
    "generate_test": [
        "@Test\npublic void printarrayTest() {\n   double[][] array2d = {{1.0, 2.0}, {3.0, 4.0}};\n   PrintStream out = new PrintStream(System.out);\n   String name = \"testArray\";\n   int expectedLen = 2;\n   AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n}",
        "@Test\n    public void printarrayTest() {\n        double[][] array2d = {{1.0, 2.5, 3.2}, {4.7, 5.6, 6.0}};\n        PrintStream out = System.out;\n        String name = \"TestArray\";\n        int expectedLen = 2;\n        AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n    }",
        "@Test\npublic void printarrayTest() {\n    double[][] array2d = {{1.0, 2.0}, {3.0, 4.0}};\n    AccurateMathCalc.printarray(System.out, \"Test Array\", 2, array2d);\n}",
        "@Test\npublic void printarrayTest() {\n    PrintStream out = System.out;\n    String name = \"Array\";\n    int expectedLen = 3;\n    double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}};\n    AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n}",
        "@Test\npublic void printarrayTest() {\n    // Create a PrintStream for testing\n    ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(outContent));\n\n    // Define input variables for the printarray method\n    String name = \"testArray\";\n    int expectedLen = 2;\n    double[][] array2d = {{1.5, 2.5}, {3.5, 4.5}};\n\n    // Call the printarray method\n    AccurateMathCalc.printarray(System.out, name, expectedLen, array2d);\n\n    // Verify the output\n    String expectedOutput = \"testArray\\n\" +\n                            \" {@*25.25s,             {@*25.25s}, // 0\\n\" +\n                            \" {@*25.25s,          {@*25.25s}, // 1\\n\";\n    assertEquals(expectedOutput, outContent.toString());\n}",
        "@Test\npublic void printarrayTest() {\n    PrintStream out = System.out;\n    String name = \"Test Array\";\n    int expectedLen = 3;\n    double[][] array2d = {{1.5, 2.5, 3.5}, {4.5, 5.5, 6.5}};\n    AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n}",
        "@Test\npublic void printarrayTest() {\n    double[][] testArray = {{1.1, 2.2, 3.3}, {4.4, 5.5, 6.6}};\n    PrintStream out = System.out;\n    String name = \"Test Array\";\n    int expectedLen = 2;\n    AccurateMathCalc.printarray(out, name, expectedLen, testArray);\n}",
        "@Test\npublic void printarrayTest() {\n    ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(outContent));\n    \n    double[][] testArray = {{1.0, 2.5, 3.8}, {4.2, 5.7, 6.4}};\n\n    AccurateMathCalc.printarray(System.out, \"Test Array\", 2, testArray);\n\n    String expected = \"Test Array\\n\" +\n                      \"        {1.0                  2.5                   3.8                  }, // 0\\n\" +\n                      \"        {4.2                  5.7                   6.4                  }, // 1\\n\";\n\n    assertEquals(expected, outContent.toString());\n}\n",
        "@Test\npublic void printarrayTest() {\n    double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};\n    AccurateMathCalc.printarray(System.out, \"Test Array\", 2, array2d);\n}",
        "@Test\npublic void printarrayTest() {\n    PrintStream out = System.out;\n    String name = \"Test Array\";\n    int expectedLen = 3;\n    double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};\n    \n    AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n}"
    ]
}