Source code: 


static void printarray(PrintStream out, String name, int expectedLen, double[][] array2d) {
    out.println(name);
    checkLen(expectedLen, array2d.length);
    out.println(TABLE_START_DECL + " ");
    int i = 0;
    for (double[] array : array2d) { // "double array[]" causes PMD parsing error
        out.print("        {");
        for (double d : array) { // assume inner array has very few entries
            out.printf("%-25.25s", format(d)); // multiple entries per line
        }
        out.println("}, // " + i++);
    }
    out.println(TABLE_END_DECL);
}



No.1 generated result --------------------------

@Test
public void printarrayTest() {
   double[][] array2d = {{1.0, 2.0}, {3.0, 4.0}};
   PrintStream out = new PrintStream(System.out);
   String name = "testArray";
   int expectedLen = 2;
   AccurateMathCalc.printarray(out, name, expectedLen, array2d);
}


No.2 generated result --------------------------

@Test
    public void printarrayTest() {
        double[][] array2d = {{1.0, 2.5, 3.2}, {4.7, 5.6, 6.0}};
        PrintStream out = System.out;
        String name = "TestArray";
        int expectedLen = 2;
        AccurateMathCalc.printarray(out, name, expectedLen, array2d);
    }


No.3 generated result --------------------------

@Test
public void printarrayTest() {
    double[][] array2d = {{1.0, 2.0}, {3.0, 4.0}};
    AccurateMathCalc.printarray(System.out, "Test Array", 2, array2d);
}


No.4 generated result --------------------------

@Test
public void printarrayTest() {
    PrintStream out = System.out;
    String name = "Array";
    int expectedLen = 3;
    double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}};
    AccurateMathCalc.printarray(out, name, expectedLen, array2d);
}


No.5 generated result --------------------------

@Test
public void printarrayTest() {
    // Create a PrintStream for testing
    ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    System.setOut(new PrintStream(outContent));

    // Define input variables for the printarray method
    String name = "testArray";
    int expectedLen = 2;
    double[][] array2d = {{1.5, 2.5}, {3.5, 4.5}};

    // Call the printarray method
    AccurateMathCalc.printarray(System.out, name, expectedLen, array2d);

    // Verify the output
    String expectedOutput = "testArray\n" +
                            " {@*25.25s,             {@*25.25s}, // 0\n" +
                            " {@*25.25s,          {@*25.25s}, // 1\n";
    assertEquals(expectedOutput, outContent.toString());
}


No.6 generated result --------------------------

@Test
public void printarrayTest() {
    PrintStream out = System.out;
    String name = "Test Array";
    int expectedLen = 3;
    double[][] array2d = {{1.5, 2.5, 3.5}, {4.5, 5.5, 6.5}};
    AccurateMathCalc.printarray(out, name, expectedLen, array2d);
}


No.7 generated result --------------------------

@Test
public void printarrayTest() {
    double[][] testArray = {{1.1, 2.2, 3.3}, {4.4, 5.5, 6.6}};
    PrintStream out = System.out;
    String name = "Test Array";
    int expectedLen = 2;
    AccurateMathCalc.printarray(out, name, expectedLen, testArray);
}


No.8 generated result --------------------------

@Test
public void printarrayTest() {
    ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    System.setOut(new PrintStream(outContent));
    
    double[][] testArray = {{1.0, 2.5, 3.8}, {4.2, 5.7, 6.4}};

    AccurateMathCalc.printarray(System.out, "Test Array", 2, testArray);

    String expected = "Test Array\n" +
                      "        {1.0                  2.5                   3.8                  }, // 0\n" +
                      "        {4.2                  5.7                   6.4                  }, // 1\n";

    assertEquals(expected, outContent.toString());
}



No.9 generated result --------------------------

@Test
public void printarrayTest() {
    double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};
    AccurateMathCalc.printarray(System.out, "Test Array", 2, array2d);
}


No.10 generated result --------------------------

@Test
public void printarrayTest() {
    PrintStream out = System.out;
    String name = "Test Array";
    int expectedLen = 3;
    double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};
    
    AccurateMathCalc.printarray(out, name, expectedLen, array2d);
}


