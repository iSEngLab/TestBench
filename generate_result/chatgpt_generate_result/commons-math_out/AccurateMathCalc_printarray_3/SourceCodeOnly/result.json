{
    "project_name": "commons-math",
    "file_name": "AccurateMathCalc.java",
    "relative_path": "commons-math/commons-math-core/src/main/java/org/apache/commons/math4/core/jdkmath/AccurateMathCalc.java",
    "execute_path": "commons-math/commons-math-core",
    "package": "org.apache.commons.math4.core.jdkmath",
    "docstring": "/**\n     * Print an array.\n     * @param out text output stream where output should be printed\n     * @param name array name\n     * @param expectedLen expected length of the array\n     * @param array2d array data\n     */",
    "source_code": "\nstatic void printarray(PrintStream out, String name, int expectedLen, double[][] array2d) {\n    out.println(name);\n    checkLen(expectedLen, array2d.length);\n    out.println(TABLE_START_DECL + \" \");\n    int i = 0;\n    for (double[] array : array2d) { // \"double array[]\" causes PMD parsing error\n        out.print(\"        {\");\n        for (double d : array) { // assume inner array has very few entries\n            out.printf(\"%-25.25s\", format(d)); // multiple entries per line\n        }\n        out.println(\"}, // \" + i++);\n    }\n    out.println(TABLE_END_DECL);\n}\n",
    "class_name": "AccurateMathCalc",
    "method_name": "printarray",
    "arguments": [
        "PrintStream out",
        "String name",
        "int expectedLen",
        "double[][] array2d"
    ],
    "generate_test": [
        "public void printarrayTest() {\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    int expectedLen = 2;\n    double[][] array2d = {{1.1, 2.2}, {3.3, 4.4}};\n    printarray(new PrintStream(out), \"Array Test\", expectedLen, array2d);\n    assertEquals(\"Array Test\\n{1.1                 2.2                }, // 0\\n{3.3                 4.4                }, // 1\\n\", out.toString());\n}",
        "@Test\npublic void printarrayTest() {\n    ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(outContent));\n\n    double[][] testArray = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};\n    printarray(System.out, \"Test Array\", 2, testArray);\n\n    String expectedOutput = \"Test Array\\n\";\n    expectedOutput += \"  \\n\";\n    expectedOutput += \"        {1.0                   2.0                  3.0                  }, // 0\\n\";\n    expectedOutput += \"        {4.0                   5.0                  6.0                  }, // 1\\n\";\n    expectedOutput += \"    \\n\";\n\n    assertEquals(expectedOutput, outContent.toString());\n}",
        "@Test\npublic void printarrayTest() {\n    ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n    PrintStream out = new PrintStream(outContent);\n    \n    String name = \"Test\";\n    int expectedLen = 2;\n    double[][] array2d = {{1.5, 2.5}, {3.5, 4.5}};\n    \n    printarray(out, name, expectedLen, array2d);\n    assertEquals(\"Expected output\", outContent.toString().trim());\n}",
        "@Test\n    public void printarrayTest() {\n        PrintStream out = System.out;\n        String name = \"Test Array\";\n        int expectedLen = 3;\n        double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}};\n\n        printarray(out, name, expectedLen, array2d);\n    }",
        "@Test\npublic void printarrayTest() {\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    PrintStream printStream = new PrintStream(out);\n    String name = \"testArray\";\n    int expectedLen = 3;\n    double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}};\n    AccurateMathCalc.printarray(printStream, name, expectedLen, array2d);\n    assertEquals(\"testArray\\n{ 1.0                    2.0                    3.0                    }, // 0\\n{ 4.0                    5.0                    6.0                    }, // 1\\n{ 7.0                    8.0                    9.0                    }, // 2\\n\", out.toString());\n}\n",
        "@Test\npublic void printarrayTest() {\n    ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(outContent));\n    double[][] testArray = {{1.5, 2.5}, {3.5, 4.5}};\n    printarray(System.out, \"Test Array\", 2, testArray);\n    String expectedOutput = \"Test Array\\n\" + \"    {{1.5               2.5}, // 0\\n    {3.5               4.5}, // 1\\n}\";\n    assertEquals(expectedOutput, outContent.toString());\n}",
        "@Test\npublic void printarrayTest() {\n    ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(outContent));\n    \n    double[][] testArray = {{1.5, 2.3, 3.7}, {4.2, 5.8, 6.4}};\n    printarray(System.out, \"Test Array\", 2, testArray);\n    \n    String expectedOutput = \"Test Array\\n\" +\n                            \"        {1.5                  2.3                  3.7                  }, // 0\\n\" +\n                            \"        {4.2                  5.8                  6.4                  }, // 1\\n\";\n    \n    assertEquals(expectedOutput, outContent.toString());\n}",
        "@Test\npublic void printarrayTest() {\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    PrintStream ps = new PrintStream(out);\n    String name = \"Test Array\";\n    int expectedLen = 3;\n    double[][] array2d = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}};\n    printarray(ps, name, expectedLen, array2d);\n    String output = out.toString();\n    assertEquals(\"Expected Output\", output); // Replace \"Expected Output\" with the expected output of the printarray method\n}",
        "@Test\npublic void printarrayTest() {\n   ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n   System.setOut(new PrintStream(outContent));\n   double[][] testArray = {{1.1, 2.2, 3.3}, {4.4, 5.5, 6.6}};\n   printarray(System.out, \"Test Array\", 2, testArray);\n   String expectedOutput = \"Test Array\\n\"\n                          \"  {1.1                   2.2                   3.3}, // 0\\n\"\n                          \"  {4.4                   5.5                   6.6}, // 1\\n\"\n   assertEquals(expectedOutput, outContent.toString());\n}\n",
        "@Test\npublic void printarrayTest() {\n    PrintStream out = System.out;\n    String name = \"Test Name\";\n    int expectedLen = 2;\n    double[][] array2d = {{1.0, 2.0}, {3.0, 4.0}};\n    \n    AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n}"
    ]
}