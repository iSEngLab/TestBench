{
    "project_name": "javacv",
    "file_name": "Blobs.java",
    "relative_path": "javacv/src/main/java/org/bytedeco/javacv/Blobs.java",
    "execute_path": "javacv",
    "package": "org.bytedeco.javacv",
    "docstring": null,
    "source_code": "// Determine the prior (lower number) region that meets the desired conditions\npublic static int PriorRegion(int Parent, int Color, double MinArea, double MaxArea, int Label)\n{\n    double DParent = (double) Parent; \n    double DColor = (double) Color; if(DColor > 0) DColor = 1;\n    \n    int i;\n    for(i = Label; i >= 0; i--)\n    {\n        double [] Region = RegionData[i];\n        double ThisParent = Region[BLOBPARENT];\n        double ThisColor = Region[BLOBCOLOR];\n        if(DParent >= 0 && DParent != ThisParent) continue;\n        if(DColor >= 0 && DColor != ThisColor) continue;\n        if(Region[BLOBAREA] < MinArea || Region[BLOBAREA] > MaxArea) continue;  \n        break;      // We have a match!\n    }\n    if(i < 0) i = -1;   // Use -1 to flag that there was no match\n    return i;\n}\n",
    "class_name": "Blobs",
    "method_name": "PriorRegion",
    "arguments": [
        "int Parent",
        "int Color",
        "double MinArea",
        "double MaxArea",
        "int Label"
    ],
    "generate_test": [
        "@Test\npublic void PriorRegionTest() {\n    int parent = 1;\n    int color = 1;\n    double minArea = 100;\n    double maxArea = 500;\n    int label = 10;\n    \n    int result = Blobs.PriorRegion(parent, color, minArea, maxArea, label);\n    \n    assertEquals(1, result);\n}",
        "@Test\npublic void PriorRegionTest() {\n    int result = Blobs.PriorRegion(1, 0, 10.0, 100.0, 5);\n    assertEquals(4, result);\n}",
        "@Test\npublic void PriorRegionTest() {\n    int parent = 1;\n    int color = 1;\n    double minArea = 5.0;\n    double maxArea = 20.0;\n    int label = 0;\n    int result = Blobs.PriorRegion(parent, color, minArea, maxArea, label);\n    assertEquals(<EXPECTED_RESULT>, result);\n}",
        "@Test\npublic void PriorRegionTest() {\n    int Parent = 0;\n    int Color = 1;\n    double MinArea = 10;\n    double MaxArea = 100;\n    int Label = 5;\n    int expected = 3; // Replace with expected output\n    \n    int result = Blobs.PriorRegion(Parent, Color, MinArea, MaxArea, Label);\n    \n    assertEquals(expected, result);\n}",
        "import static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        // Given\n        int parent = 1;\n        int color = 0;\n        double minArea = 50.0;\n        double maxArea = 100.0;\n        int label = 3;\n        \n        // When\n        int result = Blobs.PriorRegion(parent, color, minArea, maxArea, label);\n        \n        // Then\n        assertEquals(2, result);\n    }\n}",
        "@Test\npublic void PriorRegionTest() {\n    int parent = 1;\n    int color = 0;\n    double minArea = 10.0;\n    double maxArea = 100.0;\n    int label = 5;\n\n    int result = Blobs.PriorRegion(parent, color, minArea, maxArea, label);\n    \n    assertEquals(2, result);\n}",
        "@Test\npublic void PriorRegionTest() {\n    int parent = 1;\n    int color = 0;\n    double minArea = 100;\n    double maxArea = 500;\n    int label = 5;\n    \n    int result = Blobs.PriorRegion(parent, color, minArea, maxArea, label);\n    \n    assertEquals(3, result);\n}",
        "@Test\npublic void PriorRegionTest() {\n    int Parent = 1;\n    int Color = 0;\n    double MinArea = 50.0;\n    double MaxArea = 100.0;\n    int Label = 10;\n\n    int result = Blobs.PriorRegion(Parent, Color, MinArea, MaxArea, Label);\n    assertEquals(5, result);\n}",
        "// Complete the source code for the PriorRegionTest\nint priorRegion = Blobs.PriorRegion(0, 1, 100.0, 500.0, 0);\nassertEquals(-1, priorRegion); // Expected output is -1",
        "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        // Create a new Blobs object\n        Blobs blobs = new Blobs();\n        \n        // Create sample region data for testing\n        double[][] regionData = new double[5][14];\n        // Populate region data with sample values\n        // ...\n\n        // Set the test conditions\n        int parent = 0;\n        int color = 1;\n        double minArea = 10.0;\n        double maxArea = 100.0;\n        int label = 3;\n\n        // Call the PriorRegion method\n        int result = blobs.PriorRegion(parent, color, minArea, maxArea, label);\n\n        // Assert the expected result\n        assertEquals(2, result);\n    }\n}"
    ]
}