Source code: 


private static int toIntExact(long value) {
    if ((int) value != value) {
        throw new ArithmeticException("integer overflow");
    }
    return (int) value;
}



No.1 generated result --------------------------

@Test
public void toIntExactTest() {
    assertThrows(ArithmeticException.class, () -> IPCameraFrameGrabber.toIntExact(Integer.MAX_VALUE + 1L));
}


No.2 generated result --------------------------

@Test
public void toIntExactTest() {
    long value = 10L;
    int result = IPCameraFrameGrabber.toIntExact(value);
    assertEquals(10, result);
}


No.3 generated result --------------------------

@Test
public void toIntExactTest() {
    long value = 5L;
    int result = IPCameraFrameGrabber.toIntExact(value);
    assertEquals(5, result);
}


No.4 generated result --------------------------

@Test
public void toIntExactTest() {
  long value = 123L;
  assertEquals(123, IPCameraFrameGrabber.toIntExact(value));
}


No.5 generated result --------------------------

@Test
public void toIntExactTest() {
    assertThrows(ArithmeticException.class, () -> IPCameraFrameGrabber.toIntExact(2147483648L));
    assertEquals(2147483647, IPCameraFrameGrabber.toIntExact(2147483647L));
    assertEquals(-2147483648, IPCameraFrameGrabber.toIntExact(-2147483648L));
    assertThrows(ArithmeticException.class, () -> IPCameraFrameGrabber.toIntExact(-2147483649L));
}


No.6 generated result --------------------------

@Test
public void toIntExactTest() {
    long value = 10L;
    int expected = 10;
    int result = IPCameraFrameGrabber.toIntExact(value);
    assertEquals(expected, result);
}


No.7 generated result --------------------------

@Test
public void toIntExactTest() {
    assertThrows(ArithmeticException.class, () -> {
        IPCameraFrameGrabber.toIntExact(2147483648L); //<FILL> tag needs to be modified to this line
    });
}


No.8 generated result --------------------------

@Test
public void toIntExactTest() {
    assertThrows(ArithmeticException.class, () -> {
        IPCameraFrameGrabber.toIntExact(2147483648L);
    });
}


No.9 generated result --------------------------

@Test
public void toIntExactTest() {
    // Given
    long value = 10000;
    
    // When
    int result = IPCameraFrameGrabber.toIntExact(value);
    
    // Then
    assertEquals(10000, result);
}


No.10 generated result --------------------------

@Test
public void toIntExactTest() {
    long value = 10;
    int expected = 10;
    int result = IPCameraFrameGrabber.toIntExact(value);
    assertEquals(expected, result);
}


