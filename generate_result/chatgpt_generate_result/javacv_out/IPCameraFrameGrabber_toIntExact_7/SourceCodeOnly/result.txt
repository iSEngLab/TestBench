Source code: 


private static int toIntExact(long value) {
    if ((int) value != value) {
        throw new ArithmeticException("integer overflow");
    }
    return (int) value;
}



No.1 generated result --------------------------

@Test
public void toIntExactTest() {
    long value = 10L;
    int expectedResult = 10;
    int actualResult = toIntExact(value);
    assertEquals(expectedResult, actualResult);
}


No.2 generated result --------------------------

@Test
public void toIntExactTest() {
    long value = 10;
    int expectedResult = 10;
    int actualResult = IPCameraFrameGrabber.toIntExact(value);
    assertEquals(expectedResult, actualResult);
}


No.3 generated result --------------------------

@Test
public void toIntExactTest() {
    long input = 10L;
    int expected = 10;
    int result = IPCameraFrameGrabber.toIntExact(input);
    assertEquals(expected, result);
}


No.4 generated result --------------------------

@Test
public void toIntExactTest() {
    long value = 5;
    int expected = 5;
    int result = IPCameraFrameGrabber.toIntExact(value);
    assertEquals(expected, result);
}


No.5 generated result --------------------------

@Test
public void toIntExactTest() {
    assertThrows(ArithmeticException.class, () -> IPCameraFrameGrabber.toIntExact(2147483648L));
    assertEquals(-2147483648, IPCameraFrameGrabber.toIntExact(-2147483648L));
}


No.6 generated result --------------------------


@Test
public void toIntExactTest() {
    // Arrange
    long value = 5L;
    
    // Act
    int result = IPCameraFrameGrabber.toIntExact(value);
    
    // Assert
    assertEquals((int)value, result);
}


No.7 generated result --------------------------


@Test
public void toIntExactTest() {
    assertEquals(5, IPCameraFrameGrabber.toIntExact(5L));
    assertThrows(ArithmeticException.class, () -> {
        IPCameraFrameGrabber.toIntExact(2147483648L);
    });
}


No.8 generated result --------------------------

@Test
public void toIntExactTest() {
    // Given
    long value = 10L;
    
    // When
    int result = toIntExact(value);
    
    // Then
    assertEquals(10, result);
}


No.9 generated result --------------------------

@Test
public void toIntExactTest() {
    long testValue = 10L;
    int expected = 10;
    int result = IPCameraFrameGrabber.toIntExact(testValue);
    assertEquals(expected, result);
}


No.10 generated result --------------------------

@Test
public void toIntExactTest() {
    try {
        assertEquals(10, IPCameraFrameGrabber.toIntExact(10));
    } catch (ArithmeticException e) {
        fail("Unexpected ArithmeticException");
    }
}


