{
    "project_name": "javacv",
    "file_name": "JavaCV.java",
    "relative_path": "javacv/src/main/java/org/bytedeco/javacv/JavaCV.java",
    "execute_path": "javacv",
    "package": "org.bytedeco.javacv",
    "docstring": "/**\n     * Ported to Java/OpenCV from\n     * Bill Triggs. Autocalibration from Planar Scenes. In 5th European Conference\n     * on Computer Vision (ECCV \u201998), volume I, pages 89\u2013105. Springer-Verlag, 1998.\n     */",
    "source_code": "\npublic static double homogToRt(CvMat H,\n        CvMat R1, CvMat t1, CvMat n1,\n        CvMat R2, CvMat t2, CvMat n2) {\n    CvMat S = S3x3.get(), U = U3x3.get(), V = V3x3.get();\n    cvSVD(H, S, U, V, 0);\n    double zeta = homogToRt(S, U, V, R1, t1, n1, R2, t2, n2);\n    return zeta;\n}\n",
    "class_name": "JavaCV",
    "method_name": "homogToRt",
    "arguments": [
        "CvMat H",
        "CvMat R1",
        "CvMat t1",
        "CvMat n1",
        "CvMat R2",
        "CvMat t2",
        "CvMat n2"
    ],
    "generate_test": [
        "@Test\npublic void homogToRtTest() {\n    // Create the necessary CvMat objects\n    CvMat H = CvMat.create(3, 3);\n    CvMat R1 = CvMat.create(3, 3);\n    CvMat t1 = CvMat.create(3, 1);\n    CvMat n1 = CvMat.create(3, 1);\n    CvMat R2 = CvMat.create(3, 3);\n    CvMat t2 = CvMat.create(3, 1);\n    CvMat n2 = CvMat.create(3, 1);\n  \n    // Fill in the CvMat objects with test data\n  \n    // Call the homogToRt method from the JavaCV class\n    double result = JavaCV.homogToRt(H, R1, t1, n1, R2, t2, n2);\n  \n    // Assert the expected result\n    // Add assertions here\n}",
        "@Test\npublic void homogToRtTest() {\n    // Initialize the test data\n    CvMat H = new CvMat(), R1 = new CvMat(), t1 = new CvMat(), n1 = new CvMat(),\n            R2 = new CvMat(), t2 = new CvMat(), n2 = new CvMat();\n    // Perform the unit test\n    double result = JavaCV.homogToRt(H, R1, t1, n1, R2, t2, n2);\n    // Verify the output\n    // Add assertions to verify the output against expected values\n    assertEquals(expectedResult, result);\n}",
        "@Test\npublic void homogToRtTest() {\n    // Create input matrices\n    CvMat H = CvMat.create(3, 3);\n    CvMat R1 = CvMat.create(3, 3);\n    CvMat t1 = CvMat.create(3, 1);\n    CvMat n1 = CvMat.create(3, 1);\n    CvMat R2 = CvMat.create(3, 3);\n    CvMat t2 = CvMat.create(3, 1);\n    CvMat n2 = CvMat.create(3, 1);\n\n    // Set values for input matrices (if needed)\n\n    // Call the method to test\n    double result = JavaCV.homogToRt(H, R1, t1, n1, R2, t2, n2);\n\n    // Perform the assertion\n    assertEquals(expectedValue, result);\n}",
        "@Test\npublic void homogToRtTest() {\n    // Arrange\n    // Create the necessary CvMat objects\n    CvMat H = new CvMat();\n    CvMat R1 = new CvMat();\n    CvMat t1 = new CvMat();\n    CvMat n1 = new CvMat();\n    CvMat R2 = new CvMat();\n    CvMat t2 = new CvMat();\n    CvMat n2 = new CvMat();\n    \n    // Act\n    double result = JavaCV.homogToRt(H, R1, t1, n1, R2, t2, n2);\n    \n    // Assert\n    // Add assertions here to validate the result\n    // For example:\n    assertEquals(expectedValue, result);\n}",
        "@Test\npublic void homogToRtTest() {\n    // Initialize the parameters for the homogToRt method\n    CvMat H = new CvMat();\n    CvMat R1 = new CvMat();\n    CvMat t1 = new CvMat();\n    CvMat n1 = new CvMat();\n    CvMat R2 = new CvMat();\n    CvMat t2 = new CvMat();\n    CvMat n2 = new CvMat();\n  \n    // Call the homogToRt method and perform the required assertions\n    double result = JavaCV.homogToRt(H, R1, t1, n1, R2, t2, n2);\n    assertEquals(result, <expected_value>);\n    // Add more assertions as needed\n}",
        "@Test\npublic void homogToRtTest() {\n    // Define the input matrices\n    CvMat H = new CvMat();\n    CvMat R1 = new CvMat();\n    CvMat t1 = new CvMat();\n    CvMat n1 = new CvMat();\n    CvMat R2 = new CvMat();\n    CvMat t2 = new CvMat();\n    CvMat n2 = new CvMat();\n\n    // Call the method to be tested\n    double result = JavaCV.homogToRt(H, R1, t1, n1, R2, t2, n2);\n\n    // Add assertions for the expected output\n    // Example:\n    assertEquals(0.0, result); // Replace 0.0 with the expected result\n}",
        "@Test\npublic void homogToRtTest() {\n    // Define the input CvMat objects\n    CvMat H = CvMat.create(3, 3);\n    CvMat R1 = CvMat.create(3, 3);\n    CvMat t1 = CvMat.create(3, 1);\n    CvMat n1 = CvMat.create(3, 1);\n    CvMat R2 = CvMat.create(3, 3);\n    CvMat t2 = CvMat.create(3, 1);\n    CvMat n2 = CvMat.create(3, 1);\n    \n    // Call the homogToRt method with the input CvMat objects\n    double result = JavaCV.homogToRt(H, R1, t1, n1, R2, t2, n2);\n    \n    // Perform the assertion for the expected result\n    double expected = 0.0; // replace with expected value\n    assertEquals(expected, result);\n}",
        "@Test\npublic void homogToRtTest() {\n    CvMat H = new CvMat(3, 3); // create and initialize H matrix\n    CvMat R1 = new CvMat(3, 3); // create and initialize R1 matrix\n    CvMat t1 = new CvMat(3, 1); // create and initialize t1 matrix\n    CvMat n1 = new CvMat(3, 1); // create and initialize n1 matrix\n    CvMat R2 = new CvMat(3, 3); // create and initialize R2 matrix\n    CvMat t2 = new CvMat(3, 1); // create and initialize t2 matrix\n    CvMat n2 = new CvMat(3, 1); // create and initialize n2 matrix\n    double result = JavaCV.homogToRt(H, R1, t1, n1, R2, t2, n2); \n    // perform the homogToRt method with the given matrices H, R1, t1, n1, R2, t2, n2\n    assertEquals(0.0, result); // assert the expected result\n}",
        "@Test\npublic void homogToRtTest() {\n    CvMat H = CvMat.create(3, 3);\n    CvMat R1 = CvMat.create(3, 3);\n    CvMat t1 = CvMat.create(3, 1);\n    CvMat n1 = CvMat.create(3, 1);\n    CvMat R2 = CvMat.create(3, 3);\n    CvMat t2 = CvMat.create(3, 1);\n    CvMat n2 = CvMat.create(3, 1);\n    double result = JavaCV.homogToRt(H, R1, t1, n1, R2, t2, n2);\n    // Add assertions here to validate the result\n}",
        "@Test\npublic void homogToRtTest() {\n    // Create test data\n    CvMat H = CvMat.create(3, 3);\n    CvMat R1 = CvMat.create(3, 3);\n    CvMat t1 = CvMat.create(3, 1);\n    CvMat n1 = CvMat.create(3, 1);\n    CvMat R2 = CvMat.create(3, 3);\n    CvMat t2 = CvMat.create(3, 1);\n    CvMat n2 = CvMat.create(3, 1);\n    \n    // Set values for the test data\n    // ...\n\n    // Perform the test\n    double result = JavaCV.homogToRt(H, R1, t1, n1, R2, t2, n2);\n\n    // Validate the result\n    assertEquals(expectedResult, result);\n}"
    ]
}