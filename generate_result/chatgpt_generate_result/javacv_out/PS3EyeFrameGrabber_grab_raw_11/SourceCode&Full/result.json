{
    "project_name": "javacv",
    "file_name": "PS3EyeFrameGrabber.java",
    "relative_path": "javacv/src/main/java/org/bytedeco/javacv/PS3EyeFrameGrabber.java",
    "execute_path": "javacv",
    "package": "org.bytedeco.javacv",
    "docstring": "/** Grab one frame and return it as int[] (in the internal camera format RGBA).\n     *  Note: use makeImage() to create RGBA, 4-ch image\n     * @return frame as int[] without any processing or null if frame is not available \n     */",
    "source_code": "\npublic int[] grab_raw() {\n    if (camera.getCameraFrame(ps3_frame, timeout)) {\n        return ps3_frame;\n    }\n    else return null;\n}\n",
    "class_name": "PS3EyeFrameGrabber",
    "method_name": "grab_raw",
    "arguments": [],
    "generate_test": [
        "@Test\npublic void grab_rawTest() {\n    PS3EyeFrameGrabber grabber = new PS3EyeFrameGrabber();\n    int[] expected = new int[640 * 480];\n    int[] actual = grabber.grab_raw();\n    assertArrayEquals(expected, actual);\n}",
        "@Test\npublic void grab_rawTest() {\n    PS3EyeFrameGrabber grabber = new PS3EyeFrameGrabber();\n    int[] result = grabber.grab_raw();\n    assertNotNull(result);\n}",
        "public void grabRawTest() {\n        int[] expected = {1, 2, 3, 4, 5};\n        PS3EyeFrameGrabber grabber = new PS3EyeFrameGrabber();\n        grabber.ps3_frame = expected;\n        int[] actual = grabber.grab_raw();\n        assertArrayEquals(expected, actual);\n}",
        "@Test\npublic void grab_rawTest() {\n    PS3EyeFrameGrabber grabber = new PS3EyeFrameGrabber();\n    int[] result = grabber.grab_raw();\n    assertNotNull(result);\n}",
        "@Test\npublic void grab_rawTest() {\n    PS3EyeFrameGrabber grabber = new PS3EyeFrameGrabber();\n    int[] result = grabber.grab_raw();\n    assertEquals(null, result);\n}",
        "@Test\npublic void grab_rawTest() {\n    PS3EyeFrameGrabber grabber = new PS3EyeFrameGrabber();\n    int[] actual = grabber.grab_raw();\n    assertNotNull(actual);\n}",
        "@Test\npublic void grab_rawTest() {\n    PS3EyeFrameGrabber frameGrabber = new PS3EyeFrameGrabber();\n    int[] result = frameGrabber.grab_raw();\n    assertNotNull(result);\n}",
        "@Test\npublic void grab_rawTest() {\n    PS3EyeFrameGrabber grabber = new PS3EyeFrameGrabber();\n    int[] expected = new int[]{0, 0, 0}; // Set your expected array values here\n    assertArrayEquals(expected, grabber.grab_raw());\n}",
        "@Test\npublic void grab_rawTest() {\n    PS3EyeFrameGrabber grabber = new PS3EyeFrameGrabber();\n    int[] expected = grabber.grab_raw();\n    assertNotNull(expected);\n}",
        "@Test\npublic void grab_rawTest() {\n    PS3EyeFrameGrabber frameGrabber = new PS3EyeFrameGrabber();\n    int[] expected = new int[640 * 480];  // replace with the appropriate size depending on the resolution\n    assertArrayEquals(expected, frameGrabber.grab_raw());\n}"
    ]
}