Source code: 


public static String desEncrypt(String data, String key, String iv) throws Exception {
    //update-begin-author:taoyan date:2022-5-23 for:VUEN-1084 【vue3】online表单测试发现的新问题 6、解密报错 ---解码失败应该把异常抛出去，在外面处理
    byte[] encrypted1 = Base64.decode(data);

    Cipher cipher = Cipher.getInstance("AES/CBC/NoPadding");
    SecretKeySpec keyspec = new SecretKeySpec(key.getBytes(), "AES");
    IvParameterSpec ivspec = new IvParameterSpec(iv.getBytes());

    cipher.init(Cipher.DECRYPT_MODE, keyspec, ivspec);

    byte[] original = cipher.doFinal(encrypted1);
    String originalString = new String(original);
    //加密解码后的字符串会出现\u0000
    return originalString.replaceAll("\\u0000", "");
    //update-end-author:taoyan date:2022-5-23 for:VUEN-1084 【vue3】online表单测试发现的新问题 6、解密报错 ---解码失败应该把异常抛出去，在外面处理
}



No.1 generated result --------------------------

public void desEncryptTest() {
    try {
        String data = "some data to decrypt";
        String key = "myKey";
        String iv = "myIv";
        String expected = "expected decrypted output";
        
        String result = AesEncryptUtil.desEncrypt(data, key, iv);
        
        assertEquals(expected, result);
    } catch (Exception e) {
        fail("An exception was thrown during desEncryptTest: " + e.getMessage());
    }
}


No.2 generated result --------------------------

@Test
public void desEncryptTest() {
    String encryptedData = "aR3NkM7Iavz4G1CqBdQDXg==";
    String key = "yourKey";
    String iv = "yourIV";
    String expected = "yourExpectedResult";
    try {
        String decryptedData = AesEncryptUtil.desEncrypt(encryptedData, key, iv);
        assertEquals(expected, decryptedData, "Decryption failed");
    } catch (Exception e) {
        e.printStackTrace();
        fail("Exception occurred during decryption");
    }
}


No.3 generated result --------------------------


@Test
public void desEncryptTest() {
    String data = "aGVsbG8gd29ybGQ="; // Base64 encoded "hello world"
    String key = "testKey";
    String iv = "testIV";

    try {
        String result = AesEncryptUtil.desEncrypt(data, key, iv);
        assertEquals("hello world", result);
    } catch (Exception e) {
        fail("Exception thrown during desEncryptTest: " + e.getMessage());
    }
}


No.4 generated result --------------------------

@Test
public void desEncryptTest() {
    String data = "abcdefg";
    String key = "1234567890123456";
    String iv = "1234567890123456";
    try {
        String encryptedData = AesEncryptUtil.encrypt(data, key, iv);
        String decryptedData = AesEncryptUtil.desEncrypt(encryptedData, key, iv);
        assertEquals(data, decryptedData);
    } catch (Exception e) {
        fail("Exception thrown: " + e.getMessage());
    }
}


No.5 generated result --------------------------

public void desEncryptTest() {
    String data = "test";
    String key = "sample_key";
    String iv = "sample_iv";
    try {
        String encryptedData = AesEncryptUtil.encrypt(data, key, iv);
        String decryptedData = AesEncryptUtil.desEncrypt(encryptedData, key, iv);
        assertEquals(data, decryptedData);
    } catch (Exception e) {
        fail("Exception thrown during desEncryptTest: " + e.getMessage());
    }
}


No.6 generated result --------------------------

@Test
public void desEncryptTest() {
    String data = "VGhpcyBpcyBhIHNhbXBsZSB0ZXN0";
    String key = "testKey123456789";
    String iv = "testIV123456789";
    try {
        String expectedResult = "This is a sample test";
        String actualResult = AesEncryptUtil.desEncrypt(data, key, iv);
        assertEquals(expectedResult, actualResult);
    } catch (Exception e) {
        fail("An exception was thrown: " + e.getMessage());
    }
}


No.7 generated result --------------------------

@Test
public void desEncryptTest() {
    String data = "testData";
    String key = "testKey";
    String iv = "testIv";
    String expected = "expectedResult";
    try {
        String result = AesEncryptUtil.desEncrypt(data, key, iv);
        assertEquals(expected, result);
    } catch (Exception e) {
        fail("Exception thrown: " + e.getMessage());
    }
}


No.8 generated result --------------------------

public void desEncryptTest() {
    String data = "testData";
    String key =  "testKey";
    String iv = "testIV";
    String encryptedData = "encryptedTestData"; // Replace with actual encrypted data
    String expectedResult = "expectedResult";
    
    try {
        String decryptedData = AesEncryptUtil.desEncrypt(encryptedData, key, iv);
        assertEquals(expectedResult, decryptedData, "Decryption failed");
    } catch (Exception e) {
        fail("Exception occurred: " + e.getMessage());
    }
}


No.9 generated result --------------------------

@Test
public void desEncryptTest() {
    String data = "sampleData";
    String key = "sampleKey";
    String iv = "sampleIV";
    String expectedOutput = "expectedOutput";
    try {
        String result = AesEncryptUtil.desEncrypt(data, key, iv);
        assertEquals(expectedOutput, result);
    } catch (Exception e) {
        fail("An exception occurred: " + e.getMessage());
    }
}


No.10 generated result --------------------------

@Test
public void desEncryptTest() {
    String data = "exampleData";
    String key = "exampleKey";
    String iv = "exampleIV";
    
    try {
        String encryptedData = AesEncryptUtil.encrypt(data, key, iv);
        String decryptedData = AesEncryptUtil.desEncrypt(encryptedData, key, iv);
        
        assertEquals(data, decryptedData);
    } catch (Exception e) {
        fail("An exception occurred: " + e.getMessage());
    }
}


