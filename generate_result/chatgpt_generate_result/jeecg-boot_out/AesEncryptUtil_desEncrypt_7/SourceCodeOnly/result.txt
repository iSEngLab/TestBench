Source code: 


public static String desEncrypt(String data, String key, String iv) throws Exception {
    //update-begin-author:taoyan date:2022-5-23 for:VUEN-1084 【vue3】online表单测试发现的新问题 6、解密报错 ---解码失败应该把异常抛出去，在外面处理
    byte[] encrypted1 = Base64.decode(data);

    Cipher cipher = Cipher.getInstance("AES/CBC/NoPadding");
    SecretKeySpec keyspec = new SecretKeySpec(key.getBytes(), "AES");
    IvParameterSpec ivspec = new IvParameterSpec(iv.getBytes());

    cipher.init(Cipher.DECRYPT_MODE, keyspec, ivspec);

    byte[] original = cipher.doFinal(encrypted1);
    String originalString = new String(original);
    //加密解码后的字符串会出现\u0000
    return originalString.replaceAll("\\u0000", "");
    //update-end-author:taoyan date:2022-5-23 for:VUEN-1084 【vue3】online表单测试发现的新问题 6、解密报错 ---解码失败应该把异常抛出去，在外面处理
}



No.1 generated result --------------------------

@Test
public void desEncryptTest() {
    String data = "exampleData";
    String key = "exampleKey";
    String iv = "exampleIV";
    
    try {
        String encryptedData = AesEncryptUtil.desEncrypt(data, key, iv);
        assertEquals("expectedEncryptedData", encryptedData);
    } catch (Exception e) {
        fail("Exception thrown: " + e.getMessage());
    }
}


No.2 generated result --------------------------

@Test
public void desEncryptTest() {
    String data = "exampleData";
    String key = "exampleKey";
    String iv = "exampleIV";
    try {
        String result = AesEncryptUtil.desEncrypt(data, key, iv);
        assertEquals(expectedResult, result);
    } catch (Exception e) {
        fail("An exception occurred: " + e.getMessage());
    }
}


No.3 generated result --------------------------

public class AesEncryptUtilTest {
    @Test
    public void desEncryptTest() {
        String data = "encryptedData";
        String key = "encryptionKey";
        String iv = "encryptionIV";
        try {
            String result = AesEncryptUtil.desEncrypt(data, key, iv);
            assertEquals("expectedDecryptedText", result);
        } catch (Exception e) {
            fail("Exception thrown: " + e.getMessage());
        }
    }
}


No.4 generated result --------------------------

package org.jeecg.common.util.encryption;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import org.apache.commons.codec.binary.Base64;

public class AesEncryptUtilTest {
    @Test
    public void desEncryptTest() {
        try {
            String encryptedData = "sampleEncryptedData";
            String key = "sampleKey";
            String iv = "sampleIV";
            String decryptedData = AesEncryptUtil.desEncrypt(encryptedData, key, iv);
            assertEquals("expectedDecryptedData", decryptedData);
        } catch (Exception e) {
            fail("Exception thrown: " + e.getMessage());
        }
    }
}


No.5 generated result --------------------------

@Test
public void desEncryptTest() {
    String data = "exampleData";
    String key = "exampleKey";
    String iv = "exampleIV";
    try {
        String result = AesEncryptUtil.desEncrypt(data, key, iv);
        assertEquals(expectedResult, result);
    } catch (Exception e) {
        fail("Exception thrown");
    }
}


No.6 generated result --------------------------

@Test
public void desEncryptTest() {
    try {
        String encryptedData = "sampleEncryptedData";
        String key = "sampleKey";
        String iv = "sampleIV";
        String decrypted = AesEncryptUtil.desEncrypt(encryptedData, key, iv);
        assertEquals("expectedDecryptedData", decrypted);
    } catch (Exception e) {
        fail("Exception thrown: " + e.getMessage());
    }
}


No.7 generated result --------------------------

@Test
public void desEncryptTest() {
    try {
        String data = "encryptedData";
        String key = "encryptionKey";
        String iv = "encryptionIV";
        String result = AesEncryptUtil.desEncrypt(data, key, iv);
        assertEquals("expectedDecryptedString", result);
    } catch (Exception e) {
        fail("Exception occurred: " + e.getMessage());
    }
}


No.8 generated result --------------------------

package org.jeecg.common.util.encryption;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AesEncryptUtilTest {
    @Test
    public void desEncryptTest() {
        try {
            String data = "someData";
            String key = "someKey";
            String iv = "someIV";
            String encryptedData = "encrypt123"; // Provide sample encrypted data here
            String expectedResult = "decryptedData"; // Provide expected decrypted data here
            String result = AesEncryptUtil.desEncrypt(encryptedData, key, iv);
            assertEquals(expectedResult, result);
        } catch (Exception e) {
            fail("Exception thrown: " + e.getMessage());
        }
    }
}


No.9 generated result --------------------------

@Test
public void desEncryptTest() {
    try {
        String data = "exampleData";
        String key = "exampleKey";
        String iv = "exampleIV";
        String expected = "expectedResult";
        String result = AesEncryptUtil.desEncrypt(data, key, iv);
        
        assertEquals(expected, result);
    } catch (Exception e) {
        fail("Exception thrown: " + e.getMessage());
    }
}


No.10 generated result --------------------------

@Test
public void desEncryptTest() {
    try {
        String data = "exampleData";
        String key = "exampleKey";
        String iv = "exampleIV";
        String expectedResult = "expectedResult";
        
        String encryptedData = AesEncryptUtil.desEncrypt(data, key, iv);
        
        assertEquals(expectedResult, encryptedData);
    } catch (Exception e) {
        fail("Exception thrown: " + e.getMessage());
    }
}


