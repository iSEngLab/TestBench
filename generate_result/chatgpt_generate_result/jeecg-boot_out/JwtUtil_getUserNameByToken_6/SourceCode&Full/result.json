{
    "project_name": "jeecg-boot",
    "file_name": "JwtUtil.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/system/util/JwtUtil.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.system.util",
    "docstring": "/**\n\t * \u6839\u636erequest\u4e2d\u7684token\u83b7\u53d6\u7528\u6237\u8d26\u53f7\n\t * \n\t * @param request\n\t * @return\n\t * @throws JeecgBootException\n\t */",
    "source_code": "\npublic static String getUserNameByToken(HttpServletRequest request) throws JeecgBootException {\n\tString accessToken = request.getHeader(\"X-Access-Token\");\n\tString username = getUsername(accessToken);\n\tif (oConvertUtils.isEmpty(username)) {\n\t\tthrow new JeecgBootException(\"\u672a\u83b7\u53d6\u5230\u7528\u6237\");\n\t}\n\treturn username;\n}\n",
    "class_name": "JwtUtil",
    "method_name": "getUserNameByToken",
    "arguments": [
        "HttpServletRequest request"
    ],
    "generate_test": [
        "@Test\npublic void getUserNameByTokenTest() {\n    // Arrange\n    HttpServletRequest request = new MockHttpServletRequest();\n    ((MockHttpServletRequest) request).addHeader(\"X-Access-Token\", \"test_token\");\n    \n    // Act\n    String result = JwtUtil.getUserNameByToken(request);\n    \n    // Assert\n    assertNotNull(result);\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n    Mockito.when(request.getHeader(\"X-Access-Token\")).thenReturn(\"testToken\");\n    assertThrows(JeecgBootException.class, () -> JwtUtil.getUserNameByToken(request));\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = new LocalServletRequestWrapper();\n    request.addHeader(\"X-Access-Token\", \"testToken\");\n    String result = JwtUtil.getUserNameByToken(request);\n    assertEquals(\"testUser\", result);\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(\"testtoken\");\n    \n    String result = JwtUtil.getUserNameByToken(request);\n    \n    assertEquals(\"testuser\", result);\n}",
        "public void getUserNameByTokenTest() {\n    HttpServletRequest request = new MockHttpServletRequest();\n    String token = \"test-token\";\n    request.addHeader(\"X-Access-Token\", token);\n    assertThrows(JeecgBootException.class, () -> JwtUtil.getUserNameByToken(request));\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = new MockHttpServletRequest();\n    ((MockHttpServletRequest) request).addHeader(\"X-Access-Token\", \"testToken\");\n    assertThrows(JeecgBootException.class, () -> JwtUtil.getUserNameByToken(request));\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    // Given\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    String accessToken = \"testAccessToken\";\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(accessToken);\n    \n    // When\n    String result = JwtUtil.getUserNameByToken(request)\n    \n    // Then\n    assertNotNull(result);\n    assertEquals(\"expectedUsername\", result);\n}",
        "public class JwtUtilTest {\n    @Test\n    public void getUserNameByTokenTest() {\n        HttpServletRequest request = new HttpServletRequest(); //create a mock HttpServletRequest\n        String token = \"token_value\"; //replace with an actual token value\n        request.addHeader(\"X-Access-Token\", token);\n        JeecgBootException exception = assertThrows(JeecgBootException.class, () -> JwtUtil.getUserNameByToken(request));\n        assertEquals(\"\u672a\u83b7\u53d6\u5230\u7528\u6237\", exception.getMessage());\n    }\n}",
        "\nassertThrows(JeecgBootException.class, () -> {\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(null);\n    JwtUtil.getUserNameByToken(request);\n});",
        "public void getUserNameByTokenTest() {\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(\"testAccessToken\");\n\n    String result = JwtUtil.getUserNameByToken(request);\n    assertEquals(\"testUsername\", result);\n}"
    ]
}