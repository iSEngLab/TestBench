{
    "project_name": "jeecg-boot",
    "file_name": "JwtUtil.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/system/util/JwtUtil.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.system.util",
    "docstring": "/**\n\t * \u6839\u636erequest\u4e2d\u7684token\u83b7\u53d6\u7528\u6237\u8d26\u53f7\n\t * \n\t * @param request\n\t * @return\n\t * @throws JeecgBootException\n\t */",
    "source_code": "\npublic static String getUserNameByToken(HttpServletRequest request) throws JeecgBootException {\n\tString accessToken = request.getHeader(\"X-Access-Token\");\n\tString username = getUsername(accessToken);\n\tif (oConvertUtils.isEmpty(username)) {\n\t\tthrow new JeecgBootException(\"\u672a\u83b7\u53d6\u5230\u7528\u6237\");\n\t}\n\treturn username;\n}\n",
    "class_name": "JwtUtil",
    "method_name": "getUserNameByToken",
    "arguments": [
        "HttpServletRequest request"
    ],
    "generate_test": [
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(\"testToken\");\n    \n    try {\n        String result = JwtUtil.getUserNameByToken(request);\n        assertNotNull(result);\n        assertEquals(\"expectedUsername\", result);\n    } catch (JeecgBootException e) {\n        fail(\"Unexpected exception thrown\");\n    }\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = new HttpServletRequest(); // Replace with actual request object\n    try {\n        String username = JwtUtil.getUserNameByToken(request);\n        assertNotNull(username);\n    } catch (JeecgBootException e) {\n        assertNull(e.getMessage(), \"Exception message should be null as username is not empty\");\n    }\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(\"sampleAccessToken\");\n    assertThrows(JeecgBootException.class, () -> JwtUtil.getUserNameByToken(request));\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = createMock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(\"testToken\");\n  \n    assertThrows(JeecgBootException.class, () -> {\n        JwtUtil.getUserNameByToken(request);\n    });\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = new MockHttpServletRequest();\n    HttpServletResponse response = new MockHttpServletResponse();\n    String token = \"sampleToken\";\n    request.addHeader(\"X-Access-Token\", token);\n    String username = JwtUtil.getUserNameByToken(request);\n    assertEquals(\"expectedUsername\", username);\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = new MockHttpServletRequest();\n    assertThrows(JeecgBootException.class, () -> {\n        JwtUtil.getUserNameByToken(request);\n    });\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = createMock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(\"testToken\");\n    assertThrows(JeecgBootException.class, () -> JwtUtil.getUserNameByToken(request));\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = new HttpServletRequest();\n    String username = JwtUtil.getUserNameByToken(request);\n    assertNotNull(username);\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(\"testToken\");\n    try {\n        String username = JwtUtil.getUserNameByToken(request);\n        assertNotNull(username);\n        assertEquals(\"expectedUsername\", username);\n    } catch (JeecgBootException e) {\n        fail(\"Exception thrown\");\n    }\n}",
        "package org.jeecg.common.system.util;\n\nimport org.junit.jupiter.api.*;\nimport javax.servlet.http.HttpServletRequest;\nimport static org.mockito.Mockito.*;\n\npublic class JwtUtilTest {\n    @Test\n    public void getUserNameByTokenTest() {\n        HttpServletRequest request = mock(HttpServletRequest.class);\n        String testToken = \"exampleAccessToken\";\n        when(request.getHeader(\"X-Access-Token\")).thenReturn(testToken);\n        assertThrows(JeecgBootException.class, () -> {\n            JwtUtil.getUserNameByToken(request);\n        });\n    }\n}"
    ]
}