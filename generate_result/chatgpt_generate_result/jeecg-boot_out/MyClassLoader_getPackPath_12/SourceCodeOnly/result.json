{
    "project_name": "jeecg-boot",
    "file_name": "MyClassLoader.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/MyClassLoader.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.util",
    "docstring": "/**\n     * \u83b7\u5f97\u7c7b\u7684\u5168\u540d\uff0c\u5305\u62ec\u5305\u540d\n     * @param object\n     * @return\n     */",
    "source_code": "\nlic static String getPackPath(Object object) {\n \u68c0\u67e5\u7528\u6237\u4f20\u5165\u7684\u53c2\u6570\u662f\u5426\u4e3a\u7a7a\n (object == null) {\nhrow new java.lang.IllegalArgumentException(\"\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a\uff01\");\n\n \u83b7\u5f97\u7c7b\u7684\u5168\u540d\uff0c\u5305\u62ec\u5305\u540d\nring clsName = object.getClass().getName();\nturn clsName;\n\n",
    "class_name": "MyClassLoader",
    "method_name": "getPackPath",
    "arguments": [
        "Object object"
    ],
    "generate_test": [
        "@Test\npublic void getPackPathTest() {\n  Object testObj = new Object();\n  String expected = \"java.lang.Object\";\n  String result = MyClassLoader.getPackPath(testObj);\n  assertEquals(expected, result);\n}",
        "@Test\npublic void getPackPathTest() {\n    Object object = new Object();\n    String result = MyClassLoader.getPackPath(object);\n    assertEquals(\"java.lang.Object\", result);\n}",
        "@Test\npublic void getPackPathTest() {\n    Object testObject = new Object();\n    String expected = \"java.lang.Object\";\n    String actual = MyClassLoader.getPackPath(testObject);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void getPackPathTest() {\n  Object obj = new Object();\n  String expectedResult = \"java.lang.Object\";\n  String actualResult = MyClassLoader.getPackPath(obj);\n  assertEquals(expectedResult, actualResult);\n}",
        "@Test\npublic void getPackPathTest() {\n   Object object = new Object();\n   String result = MyClassLoader.getPackPath(object);\n   assertEquals(\"java.lang.Object\", result);\n}",
        "@Test\npublic void getPackPathTest() {\n    Object object = new Object();\n    String result = MyClassLoader.getPackPath(object);\n    assertEquals(\"java.lang.Object\", result);\n}",
        "@Test\npublic void getPackPathTest() {\n    Object testObject = new Object();\n    String expected = \"java.lang.Object\";\n    String result = MyClassLoader.getPackPath(testObject);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void getPackPathTest() {\n   // Given\n   Object object = new Object();\n   String expected = \"java.lang.Object\";\n   \n   // When\n   String result = MyClassLoader.getPackPath(object);\n   \n   // Then\n   assertEquals(expected, result);\n}",
        "@Test\npublic void getPackPathTest() {\n    Object testObject = new Object();\n    String expected = \"java.lang.Object\";\n    String result = MyClassLoader.getPackPath(testObject);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void getPackPathTest() {\n    Object testObject = new Object();\n    String result = MyClassLoader.getPackPath(testObject);\n    assertEquals(\"java.lang.Object\", result);\n}"
    ]
}