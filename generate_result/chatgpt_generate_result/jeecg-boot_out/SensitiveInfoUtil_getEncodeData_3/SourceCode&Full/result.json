{
    "project_name": "jeecg-boot",
    "file_name": "SensitiveInfoUtil.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/desensitization/util/SensitiveInfoUtil.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.desensitization.util",
    "docstring": "/**\n     * \u5904\u7406\u6570\u636e \u83b7\u53d6\u52a0\u5bc6\u540e\u7684\u6570\u636e \u6216\u662f\u683c\u5f0f\u5316\u540e\u7684\u6570\u636e\n     * @param data \u5b57\u7b26\u4e32\n     * @param sensitiveEnum \u7c7b\u578b\n     * @return \u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\n     */",
    "source_code": "\npublic static String getEncodeData(String data, SensitiveEnum sensitiveEnum){\n    String result;\n    switch (sensitiveEnum){\n        case ENCODE:\n            try {\n                result = AesEncryptUtil.encrypt(data);\n            } catch (Exception exception) {\n                log.error(\"\u6570\u636e\u52a0\u5bc6\u9519\u8bef\", exception.getMessage());\n                result = data;\n            }\n            break;\n        case CHINESE_NAME:\n            result = chineseName(data);\n            break;\n        case ID_CARD:\n            result = idCardNum(data);\n            break;\n        case FIXED_PHONE:\n            result = fixedPhone(data);\n            break;\n        case MOBILE_PHONE:\n            result = mobilePhone(data);\n            break;\n        case ADDRESS:\n            result = address(data, 3);\n            break;\n        case EMAIL:\n            result = email(data);\n            break;\n        case BANK_CARD:\n            result = bankCard(data);\n            break;\n        case CNAPS_CODE:\n            result = cnapsCode(data);\n            break;\n        default:\n            result = data;\n    }\n    return result;\n}\n",
    "class_name": "SensitiveInfoUtil",
    "method_name": "getEncodeData",
    "arguments": [
        "String data",
        "SensitiveEnum sensitiveEnum"
    ],
    "generate_test": [
        "String result = SensitiveInfoUtil.getEncodeData(\"Testing123\", SensitiveEnum.ENCODE);\nassertEquals(\"Expected Encoded Data\", \"EncodedString123\", result);",
        "@Test\npublic void getEncodeDataTest() {\n    // Test case for SensitiveEnum.ENCODE\n    String data = \"123456\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n    assertEquals(\"Expected Encoded Data\", \"encrypted_data\", result);\n    \n    // Test case for SensitiveEnum.CHINESE_NAME\n    // Add test case for CHINESE_NAME sensitive data type\n    \n    // Test case for SensitiveEnum.ID_CARD\n    // Add test case for ID_CARD sensitive data type\n    \n    // Continue adding test cases for the remaining SensitiveEnum types\n}\n",
        "@Test\npublic void getEncodeDataTest() {\n    // Given\n    String data = \"1234567890\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    \n    // When\n    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n    \n    // Then\n    assertEquals(\"EXPECTED_ENCODED_RESULT\", result);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String data = \"1234567890\"; \n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    String expected = \"xUwBZm2BL/PdeZvWO9yR6Q==\";\n    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String expectedResult = \"****1234\";\n    String actualResult = SensitiveInfoUtil.getEncodeData(\"1234567890\", SensitiveEnum.FIXED_PHONE);\n    assertEquals(expectedResult, actualResult);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String result = SensitiveInfoUtil.getEncodeData(\"1234567890\", SensitiveEnum.ENCODE);\n    assertEquals(\"EncryptedValue\", result);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String name = \"\u5f20\u4e09\";\n    String encodedName = SensitiveInfoUtil.getEncodeData(name, SensitiveEnum.CHINESE_NAME);\n    assertEquals(\"\u5f20**\", encodedName);\n    \n    String id = \"320483199802102532\";\n    String encodedId = SensitiveInfoUtil.getEncodeData(id, SensitiveEnum.ID_CARD);\n    assertEquals(\"**************2532\", encodedId);\n    \n    String phone = \"13811112222\";\n    String encodedPhone = SensitiveInfoUtil.getEncodeData(phone, SensitiveEnum.MOBILE_PHONE);\n    assertEquals(\"138******2222\", encodedPhone);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    String input = \"Test Data\";\n    String expected = \"Encrypted Data\";\n    String actual = SensitiveInfoUtil.getEncodeData(input, sensitiveEnum);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String actual = SensitiveInfoUtil.getEncodeData(\"JohnDoe\", SensitiveEnum.ENCODE);\n    String expected = \"encryptedJohnDoe\"; \n    assertEquals(expected, actual);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String testData = \"Test123\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    String actual = SensitiveInfoUtil.getEncodeData(testData, sensitiveEnum);\n    String expected = \"EncodedTest123\"; // Placeholder value, replace with expected output\n    assertEquals(expected, actual);\n}"
    ]
}