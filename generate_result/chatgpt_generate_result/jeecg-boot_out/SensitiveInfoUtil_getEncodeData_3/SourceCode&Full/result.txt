Source code: 


public static String getEncodeData(String data, SensitiveEnum sensitiveEnum){
    String result;
    switch (sensitiveEnum){
        case ENCODE:
            try {
                result = AesEncryptUtil.encrypt(data);
            } catch (Exception exception) {
                log.error("数据加密错误", exception.getMessage());
                result = data;
            }
            break;
        case CHINESE_NAME:
            result = chineseName(data);
            break;
        case ID_CARD:
            result = idCardNum(data);
            break;
        case FIXED_PHONE:
            result = fixedPhone(data);
            break;
        case MOBILE_PHONE:
            result = mobilePhone(data);
            break;
        case ADDRESS:
            result = address(data, 3);
            break;
        case EMAIL:
            result = email(data);
            break;
        case BANK_CARD:
            result = bankCard(data);
            break;
        case CNAPS_CODE:
            result = cnapsCode(data);
            break;
        default:
            result = data;
    }
    return result;
}



No.1 generated result --------------------------

String result = SensitiveInfoUtil.getEncodeData("Testing123", SensitiveEnum.ENCODE);
assertEquals("Expected Encoded Data", "EncodedString123", result);


No.2 generated result --------------------------

@Test
public void getEncodeDataTest() {
    // Test case for SensitiveEnum.ENCODE
    String data = "123456";
    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;
    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);
    assertEquals("Expected Encoded Data", "encrypted_data", result);
    
    // Test case for SensitiveEnum.CHINESE_NAME
    // Add test case for CHINESE_NAME sensitive data type
    
    // Test case for SensitiveEnum.ID_CARD
    // Add test case for ID_CARD sensitive data type
    
    // Continue adding test cases for the remaining SensitiveEnum types
}



No.3 generated result --------------------------

@Test
public void getEncodeDataTest() {
    // Given
    String data = "1234567890";
    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;
    
    // When
    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);
    
    // Then
    assertEquals("EXPECTED_ENCODED_RESULT", result);
}


No.4 generated result --------------------------

@Test
public void getEncodeDataTest() {
    String data = "1234567890"; 
    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;
    String expected = "xUwBZm2BL/PdeZvWO9yR6Q==";
    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);
    assertEquals(expected, result);
}


No.5 generated result --------------------------

@Test
public void getEncodeDataTest() {
    String expectedResult = "****1234";
    String actualResult = SensitiveInfoUtil.getEncodeData("1234567890", SensitiveEnum.FIXED_PHONE);
    assertEquals(expectedResult, actualResult);
}


No.6 generated result --------------------------

@Test
public void getEncodeDataTest() {
    String result = SensitiveInfoUtil.getEncodeData("1234567890", SensitiveEnum.ENCODE);
    assertEquals("EncryptedValue", result);
}


No.7 generated result --------------------------

@Test
public void getEncodeDataTest() {
    String name = "张三";
    String encodedName = SensitiveInfoUtil.getEncodeData(name, SensitiveEnum.CHINESE_NAME);
    assertEquals("张**", encodedName);
    
    String id = "320483199802102532";
    String encodedId = SensitiveInfoUtil.getEncodeData(id, SensitiveEnum.ID_CARD);
    assertEquals("**************2532", encodedId);
    
    String phone = "13811112222";
    String encodedPhone = SensitiveInfoUtil.getEncodeData(phone, SensitiveEnum.MOBILE_PHONE);
    assertEquals("138******2222", encodedPhone);
}


No.8 generated result --------------------------

@Test
public void getEncodeDataTest() {
    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;
    String input = "Test Data";
    String expected = "Encrypted Data";
    String actual = SensitiveInfoUtil.getEncodeData(input, sensitiveEnum);
    assertEquals(expected, actual);
}


No.9 generated result --------------------------

@Test
public void getEncodeDataTest() {
    String actual = SensitiveInfoUtil.getEncodeData("JohnDoe", SensitiveEnum.ENCODE);
    String expected = "encryptedJohnDoe"; 
    assertEquals(expected, actual);
}


No.10 generated result --------------------------

@Test
public void getEncodeDataTest() {
    String testData = "Test123";
    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;
    String actual = SensitiveInfoUtil.getEncodeData(testData, sensitiveEnum);
    String expected = "EncodedTest123"; // Placeholder value, replace with expected output
    assertEquals(expected, actual);
}


