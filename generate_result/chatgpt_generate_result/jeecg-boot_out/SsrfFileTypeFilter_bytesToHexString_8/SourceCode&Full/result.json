{
    "project_name": "jeecg-boot",
    "file_name": "SsrfFileTypeFilter.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/filter/SsrfFileTypeFilter.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.util.filter",
    "docstring": "/**\n     * \u83b7\u5f97\u6587\u4ef6\u5934\u90e8\u5b57\u7b26\u4e32\n     *\n     * @param src\n     * @return\n     */",
    "source_code": "\nprivate static String bytesToHexString(byte[] src) {\n    StringBuilder stringBuilder = new StringBuilder();\n    if (src == null || src.length <= 0) {\n        return null;\n    }\n    for (int i = 0; i < src.length; i++) {\n        int v = src[i] & 0xFF;\n        String hv = Integer.toHexString(v);\n        if (hv.length() < 2) {\n            stringBuilder.append(0);\n        }\n        stringBuilder.append(hv);\n    }\n    return stringBuilder.toString();\n}\n",
    "class_name": "SsrfFileTypeFilter",
    "method_name": "bytesToHexString",
    "arguments": [
        "byte[] src"
    ],
    "generate_test": [
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testByteArray = {10, 20, 30, 40, 50}; \n    String expectedResult = \"0a141e2832\"; \n    String actualResult = SsrfFileTypeFilter.bytesToHexString(testByteArray); \n    assertEquals(expectedResult, actualResult);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] input = {0, 1, 2, 3, 4, 5};\n    String expected = \"000102030405\";\n    String result = SsrfFileTypeFilter.bytesToHexString(input);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testBytes = {66, 65, 67, 49, 50, 51};\n    String expected = \"424143313233\";\n    String result = SsrfFileTypeFilter.bytesToHexString(testBytes);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testBytes = {65, 66, 67};\n    String expectedOutput = \"414243\";\n    assertEquals(expectedOutput, SsrfFileTypeFilter.bytesToHexString(testBytes));\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testBytes = {10, 20, -30, 40};\n    String expected = \"0a14e2 28\";\n    String result = SsrfFileTypeFilter.bytesToHexString(testBytes);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] src = new byte[]{0x48, 0x65, 0x6C, 0x6C, 0x6F};\n    String expected = \"48656c6c6f\";\n    String result = SsrfFileTypeFilter.bytesToHexString(src);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    // Given\n    byte[] input = new byte[]{65, 66, 67};\n    \n    // When\n    String result = SsrfFileTypeFilter.bytesToHexString(input);\n    \n    // Then\n    assertEquals(\"414243\", result);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    // Given\n    byte[] testBytes = new byte[]{(byte) 0x48, (byte) 0x65, (byte) 0x6c, (byte) 0x6c, (byte) 0x6f}; // \"Hello\" in hexadecimal\n\n    // When\n    String result = SsrfFileTypeFilter.bytesToHexString(testBytes);\n\n    // Then\n    assertEquals(\"48656c6c6f\", result);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testData = {72, 101, 108, 108, 111}; // \"Hello\" in bytes\n    String expected = \"48656c6c6f\"; // \"Hello\" in hexadecimal\n    String result = SsrfFileTypeFilter.bytesToHexString(testData);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testBytes = new byte[]{10, 20, 30, 40};\n    String expected = \"0a141e28\";\n    String actual = SsrfFileTypeFilter.bytesToHexString(testBytes);\n    assertEquals(expected, actual);\n}"
    ]
}