Source code: 


private static String bytesToHexString(byte[] src) {
    StringBuilder stringBuilder = new StringBuilder();
    if (src == null || src.length <= 0) {
        return null;
    }
    for (int i = 0; i < src.length; i++) {
        int v = src[i] & 0xFF;
        String hv = Integer.toHexString(v);
        if (hv.length() < 2) {
            stringBuilder.append(0);
        }
        stringBuilder.append(hv);
    }
    return stringBuilder.toString();
}



No.1 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testByteArray = {10, 20, 30, 40, 50}; 
    String expectedResult = "0a141e2832"; 
    String actualResult = SsrfFileTypeFilter.bytesToHexString(testByteArray); 
    assertEquals(expectedResult, actualResult);
}


No.2 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] input = {0, 1, 2, 3, 4, 5};
    String expected = "000102030405";
    String result = SsrfFileTypeFilter.bytesToHexString(input);
    assertEquals(expected, result);
}


No.3 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testBytes = {66, 65, 67, 49, 50, 51};
    String expected = "424143313233";
    String result = SsrfFileTypeFilter.bytesToHexString(testBytes);
    assertEquals(expected, result);
}


No.4 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testBytes = {65, 66, 67};
    String expectedOutput = "414243";
    assertEquals(expectedOutput, SsrfFileTypeFilter.bytesToHexString(testBytes));
}


No.5 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testBytes = {10, 20, -30, 40};
    String expected = "0a14e2 28";
    String result = SsrfFileTypeFilter.bytesToHexString(testBytes);
    assertEquals(expected, result);
}


No.6 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] src = new byte[]{0x48, 0x65, 0x6C, 0x6C, 0x6F};
    String expected = "48656c6c6f";
    String result = SsrfFileTypeFilter.bytesToHexString(src);
    assertEquals(expected, result);
}


No.7 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    // Given
    byte[] input = new byte[]{65, 66, 67};
    
    // When
    String result = SsrfFileTypeFilter.bytesToHexString(input);
    
    // Then
    assertEquals("414243", result);
}


No.8 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    // Given
    byte[] testBytes = new byte[]{(byte) 0x48, (byte) 0x65, (byte) 0x6c, (byte) 0x6c, (byte) 0x6f}; // "Hello" in hexadecimal

    // When
    String result = SsrfFileTypeFilter.bytesToHexString(testBytes);

    // Then
    assertEquals("48656c6c6f", result);
}


No.9 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testData = {72, 101, 108, 108, 111}; // "Hello" in bytes
    String expected = "48656c6c6f"; // "Hello" in hexadecimal
    String result = SsrfFileTypeFilter.bytesToHexString(testData);
    assertEquals(expected, result);
}


No.10 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testBytes = new byte[]{10, 20, 30, 40};
    String expected = "0a141e28";
    String actual = SsrfFileTypeFilter.bytesToHexString(testBytes);
    assertEquals(expected, actual);
}


