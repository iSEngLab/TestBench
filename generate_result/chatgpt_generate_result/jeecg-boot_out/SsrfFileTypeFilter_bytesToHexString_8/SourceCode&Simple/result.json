{
    "project_name": "jeecg-boot",
    "file_name": "SsrfFileTypeFilter.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/filter/SsrfFileTypeFilter.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.util.filter",
    "docstring": "/**\n     * \u83b7\u5f97\u6587\u4ef6\u5934\u90e8\u5b57\u7b26\u4e32\n     *\n     * @param src\n     * @return\n     */",
    "source_code": "\nprivate static String bytesToHexString(byte[] src) {\n    StringBuilder stringBuilder = new StringBuilder();\n    if (src == null || src.length <= 0) {\n        return null;\n    }\n    for (int i = 0; i < src.length; i++) {\n        int v = src[i] & 0xFF;\n        String hv = Integer.toHexString(v);\n        if (hv.length() < 2) {\n            stringBuilder.append(0);\n        }\n        stringBuilder.append(hv);\n    }\n    return stringBuilder.toString();\n}\n",
    "class_name": "SsrfFileTypeFilter",
    "method_name": "bytesToHexString",
    "arguments": [
        "byte[] src"
    ],
    "generate_test": [
        "\n@Test\npublic void bytesToHexStringTest() {\n    byte[] testBytes = {(byte) 0xDE, (byte) 0xAD, (byte) 0xBE, (byte) 0xEF};\n    String expected = \"deadbeef\";\n    String result = SsrfFileTypeFilter.bytesToHexString(testBytes);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] inputBytes = {0x48, 0x65, 0x6C, 0x6C, 0x6F}; \n    String expectedOutput = \"48656C6C6F\";\n    String actualOutput = SsrfFileTypeFilter.bytesToHexString(inputBytes);\n    assertEquals(expectedOutput, actualOutput);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testBytes = {72, 101, 108, 108, 111}; // ASCII values for \"Hello\"\n    String expected = \"48656c6c6f\";\n    String result = bytesToHexString(testBytes);\n    assertEquals(expected, result);\n}",
        "@Test\n\npublic void bytesToHexStringTest() {\n    byte[] testBytes = {0x48, 0x65, 0x6C, 0x6C, 0x6F};\n    String expectedResult = \"48656C6C6F\";\n    String actualResult = SsrfFileTypeFilter.bytesToHexString(testBytes);\n    assertEquals(expectedResult, actualResult);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testBytes = {0x48, 0x65, 0x6C, 0x6C, 0x6F};  // Hello in bytes\n    String expectedResult = \"48656c6c6f\";\n    String result = SsrfFileTypeFilter.bytesToHexString(testBytes);\n    assertEquals(expectedResult, result);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testArray = {72, 101, 108, 108, 111}; // Replace with appropriate test data\n    String expected = \"48656c6c6f\"; // Replace with the expected output\n    String actual = SsrfFileTypeFilter.bytesToHexString(testArray);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] input = {0x48, 0x65, 0x6c, 0x6c, 0x6f};\n    String expected = \"48656c6c6f\";\n    String result = SsrfFileTypeFilter.bytesToHexString(input);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] input = {10, 20, 30, 40, 50};\n    String expectedOutput = \"0a141e2832\";\n    String actualOutput = SsrfFileTypeFilter.bytesToHexString(input);\n    assertEquals(expectedOutput, actualOutput);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testBytes = {10, 20, 30, 40, 50};\n    String expectedResult = \"0a141e2832\";\n    String actualResult = SsrfFileTypeFilter.bytesToHexString(testBytes);\n    assertEquals(expectedResult, actualResult);\n}",
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] testBytes = {10, 20, 30, 40, 50};\n    String expectedHex = \"0a141e2832\";\n    String resultHex = SsrfFileTypeFilter.bytesToHexString(testBytes);\n    assertEquals(expectedHex, resultHex);\n}"
    ]
}