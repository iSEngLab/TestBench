Source code: 


private static String bytesToHexString(byte[] src) {
    StringBuilder stringBuilder = new StringBuilder();
    if (src == null || src.length <= 0) {
        return null;
    }
    for (int i = 0; i < src.length; i++) {
        int v = src[i] & 0xFF;
        String hv = Integer.toHexString(v);
        if (hv.length() < 2) {
            stringBuilder.append(0);
        }
        stringBuilder.append(hv);
    }
    return stringBuilder.toString();
}



No.1 generated result --------------------------


@Test
public void bytesToHexStringTest() {
    byte[] testBytes = {(byte) 0xDE, (byte) 0xAD, (byte) 0xBE, (byte) 0xEF};
    String expected = "deadbeef";
    String result = SsrfFileTypeFilter.bytesToHexString(testBytes);
    assertEquals(expected, result);
}


No.2 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] inputBytes = {0x48, 0x65, 0x6C, 0x6C, 0x6F}; 
    String expectedOutput = "48656C6C6F";
    String actualOutput = SsrfFileTypeFilter.bytesToHexString(inputBytes);
    assertEquals(expectedOutput, actualOutput);
}


No.3 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testBytes = {72, 101, 108, 108, 111}; // ASCII values for "Hello"
    String expected = "48656c6c6f";
    String result = bytesToHexString(testBytes);
    assertEquals(expected, result);
}


No.4 generated result --------------------------

@Test

public void bytesToHexStringTest() {
    byte[] testBytes = {0x48, 0x65, 0x6C, 0x6C, 0x6F};
    String expectedResult = "48656C6C6F";
    String actualResult = SsrfFileTypeFilter.bytesToHexString(testBytes);
    assertEquals(expectedResult, actualResult);
}


No.5 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testBytes = {0x48, 0x65, 0x6C, 0x6C, 0x6F};  // Hello in bytes
    String expectedResult = "48656c6c6f";
    String result = SsrfFileTypeFilter.bytesToHexString(testBytes);
    assertEquals(expectedResult, result);
}


No.6 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testArray = {72, 101, 108, 108, 111}; // Replace with appropriate test data
    String expected = "48656c6c6f"; // Replace with the expected output
    String actual = SsrfFileTypeFilter.bytesToHexString(testArray);
    assertEquals(expected, actual);
}


No.7 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] input = {0x48, 0x65, 0x6c, 0x6c, 0x6f};
    String expected = "48656c6c6f";
    String result = SsrfFileTypeFilter.bytesToHexString(input);
    assertEquals(expected, result);
}


No.8 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] input = {10, 20, 30, 40, 50};
    String expectedOutput = "0a141e2832";
    String actualOutput = SsrfFileTypeFilter.bytesToHexString(input);
    assertEquals(expectedOutput, actualOutput);
}


No.9 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testBytes = {10, 20, 30, 40, 50};
    String expectedResult = "0a141e2832";
    String actualResult = SsrfFileTypeFilter.bytesToHexString(testBytes);
    assertEquals(expectedResult, actualResult);
}


No.10 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] testBytes = {10, 20, 30, 40, 50};
    String expectedHex = "0a141e2832";
    String resultHex = SsrfFileTypeFilter.bytesToHexString(testBytes);
    assertEquals(expectedHex, resultHex);
}


