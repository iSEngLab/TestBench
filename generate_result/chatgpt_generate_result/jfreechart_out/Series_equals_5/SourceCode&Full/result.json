{
    "project_name": "jfreechart",
    "file_name": "Series.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/general/Series.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.general",
    "docstring": "/**\n     * Tests the series for equality with another object.\n     *\n     * @param obj  the object ({@code null} permitted).\n     *\n     * @return {@code true} or {@code false}.\n     */",
    "source_code": "\n@Override\npublic boolean equals(Object obj) {\n    if (obj == this) {\n        return true;\n    }\n    if (!(obj instanceof Series)) {\n        return false;\n    }\n    Series that = (Series) obj;\n    if (!Objects.equals(this.key, that.key)) {\n        return false;\n    }\n    if (!Objects.equals(this.description, that.description)) {\n        return false;\n    }\n    if (!that.canEqual(this)) {\n        return false;\n    }\n    return true;\n}\n",
    "class_name": "Series",
    "method_name": "equals",
    "arguments": [
        "Object obj"
    ],
    "generate_test": [
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key\", \"description\");\n    Series series2 = new Series(\"key\", \"description\");\n    assertEquals(series1, series2);\n}",
        "@Test\n    public void equalsTest() {\n        Series series1 = new Series(\"Key\", \"Description\");\n        Series series2 = new Series(\"Key\", \"Description\");\n        boolean result = series1.equals(series2);\n        assertTrue(result);\n    }",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key1\", \"description1\");\n    Series series2 = new Series(\"key1\", \"description1\");\n    Series series3 = new Series(\"key2\", \"description2\");\n\n    assertEquals(series1, series2);\n    assertNotEquals(series1, series3);\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"Key\", \"Description\");\n    Series series2 = new Series(\"Key\", \"Description\");\n    assertEquals(series1, series2);\n}",
        "@Test\npublic void equalsTest() {\n    Series s1 = new Series(1, \"Series 1\");\n    Series s2 = new Series(2, \"Series 2\");\n    \n    assertEquals(false, s1.equals(s2));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"Key1\", \"Description1\");\n    Series series2 = new Series(\"Key1\", \"Description1\");\n    assertTrue(series1.equals(series2));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"Key\", \"Description\");\n    Series series2 = new Series(\"Key\", \"Description\");\n    assertTrue(series1.equals(series2));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key1\", \"description1\");\n    Series series2 = new Series(\"key1\", \"description1\");\n    assertEquals(true, series1.equals(series2));\n    Series series3 = new Series(\"key2\", \"description2\");\n    assertEquals(false, series1.equals(series3));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"Key1\", \"Description1\");\n    Series series2 = new Series(\"Key2\", \"Description2\");\n    assertTrue(series1.equals(series1)); \n    assertFalse(series1.equals(series2)); \n}",
        "@Test\npublic void equalsTest() {\n    String key = \"TestKey\";\n    String description = \"TestDescription\";\n    Series series1 = new Series(key, description);\n    Series series2 = new Series(key, description);\n    assertTrue(series1.equals(series2));\n}"
    ]
}