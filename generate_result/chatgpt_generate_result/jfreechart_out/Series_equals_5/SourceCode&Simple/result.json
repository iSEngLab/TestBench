{
    "project_name": "jfreechart",
    "file_name": "Series.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/general/Series.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.general",
    "docstring": "/**\n     * Tests the series for equality with another object.\n     *\n     * @param obj  the object ({@code null} permitted).\n     *\n     * @return {@code true} or {@code false}.\n     */",
    "source_code": "\n@Override\npublic boolean equals(Object obj) {\n    if (obj == this) {\n        return true;\n    }\n    if (!(obj instanceof Series)) {\n        return false;\n    }\n    Series that = (Series) obj;\n    if (!Objects.equals(this.key, that.key)) {\n        return false;\n    }\n    if (!Objects.equals(this.description, that.description)) {\n        return false;\n    }\n    if (!that.canEqual(this)) {\n        return false;\n    }\n    return true;\n}\n",
    "class_name": "Series",
    "method_name": "equals",
    "arguments": [
        "Object obj"
    ],
    "generate_test": [
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key1\", \"description1\");\n    Series series2 = new Series(\"key1\", \"description1\");\n    Series series3 = new Series(\"key2\", \"description2\");\n    \n    assertTrue(series1.equals(series2));\n    assertFalse(series1.equals(series3));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key\", \"description\");\n    Series series2 = new Series(\"key\", \"description\");\n    assertTrue(series1.equals(series2));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series();\n    Series series2 = new Series();\n    series1.setKey(\"1\");\n    series1.setDescription(\"First Series\");\n    series2.setKey(\"1\");\n    series2.setDescription(\"First Series\");\n    assertEquals(true, series1.equals(series2));\n}",
        "    @Test\n    public void equalsTest() {\n        Series series1 = new Series(\"key1\", \"description1\");\n        Series series2 = new Series(\"key1\", \"description1\");\n        assertEquals(series1, series2);\n    }\n",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key1\", \"Description1\");\n    Series series2 = new Series(\"key1\", \"Description1\");\n    assertTrue(series1.equals(series2));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"Key1\", \"Description1\");\n    Series series2 = new Series(\"Key1\", \"Description1\");\n    \n    assertTrue(series1.equals(series2));\n}",
        "@Test\npublic void equalsTest() {\n    Series s1 = new Series(\"key1\", \"description1\");\n    Series s2 = new Series(\"key1\", \"description1\");\n    assertTrue(s1.equals(s2));\n}",
        "@Test\npublic void equalsTest() {\n    // create two Series objects with the same key and description\n    Comparable key = \"Key\";\n    String description = \"Description\";\n    Series series1 = new Series(key, description);\n    Series series2 = new Series(key, description);\n\n    // use assert equals to compare the two Series objects\n    assertEquals(series1, series2);\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key1\", \"description1\");\n    Series series2 = new Series(\"key2\", \"description2\");\n    \n    assertFalse(series1.equals(null));\n    assertTrue(series1.equals(series1));\n    assertFalse(series1.equals(series2));\n}",
        "@Test\npublic void equalsTest() {\n    // Create two Series objects for testing\n    Series series1 = new Series(\"Key1\", \"Description1\");\n    Series series2 = new Series(\"Key1\", \"Description1\");\n\n    // Check if the two Series are equal\n    assertTrue(series1.equals(series2));\n}"
    ]
}