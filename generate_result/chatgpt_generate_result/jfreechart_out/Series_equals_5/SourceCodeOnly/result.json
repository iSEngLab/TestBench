{
    "project_name": "jfreechart",
    "file_name": "Series.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/general/Series.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.general",
    "docstring": "/**\n     * Tests the series for equality with another object.\n     *\n     * @param obj  the object ({@code null} permitted).\n     *\n     * @return {@code true} or {@code false}.\n     */",
    "source_code": "\n@Override\npublic boolean equals(Object obj) {\n    if (obj == this) {\n        return true;\n    }\n    if (!(obj instanceof Series)) {\n        return false;\n    }\n    Series that = (Series) obj;\n    if (!Objects.equals(this.key, that.key)) {\n        return false;\n    }\n    if (!Objects.equals(this.description, that.description)) {\n        return false;\n    }\n    if (!that.canEqual(this)) {\n        return false;\n    }\n    return true;\n}\n",
    "class_name": "Series",
    "method_name": "equals",
    "arguments": [
        "Object obj"
    ],
    "generate_test": [
        "public void equalsTest() {\n    Series series1 = new Series(\"1\", \"First series\");\n    Series series2 = new Series(\"2\", \"Second series\");\n    assertTrue(series1.equals(series1)); // reflexive\n    assertTrue(series1.equals(series2) == series2.equals(series1)); // symmetric\n    assertEquals(series1.equals(series2), series1.equals(series2)); // consistent\n    assertFalse(series1.equals(null)); // null comparison\n}",
        "@Test\npublic void equalsTest() {\n    assertTrue(series.equals(series));\n    assertFalse(series.equals(null));\n    assertFalse(series.equals(new Object()));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key1\", \"description1\");\n    Series series2 = new Series(\"key1\", \"description1\");\n    assertTrue(series1.equals(series2));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key\", \"description\");\n    Series series2 = new Series(\"key\", \"description\");\n    assertEquals(series1, series2);\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key\", \"description\");\n    Series series2 = new Series(\"key\", \"description\");\n    \n    assertTrue(series1.equals(series2));\n}",
        "@Test\npublic void equalsTest() {\n    // Create two Series objects with the same key and description\n    Series s1 = new Series(\"Key\", \"Description\");\n    Series s2 = new Series(\"Key\", \"Description\");\n    \n    // Test if the two Series objects are equal\n    assertTrue(s1.equals(s2));\n}",
        "\n@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key1\", \"description1\");\n    Series series2 = new Series(\"key1\", \"description1\");\n    Series series3 = new Series(\"key2\", \"description2\");\n\n    // Test when both Series objects are equal\n    assertTrue(series1.equals(series2));\n\n    // Test when both Series objects are not equal\n    assertFalse(series1.equals(series3));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key1\", \"description1\");\n    Series series2 = new Series(\"key2\", \"description2\");\n    Series series3 = series1;\n    \n    // Test if series1 equals itself\n    assertTrue(series1.equals(series1));\n    \n    // Test if series1 equals series2\n    assertFalse(series1.equals(series2));\n    \n    // Test if series1 equals series3\n    assertTrue(series1.equals(series3));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series();\n    series1.setKey(\"key\");\n    series1.setDescription(\"description\");\n\n    Series series2 = new Series();\n    series2.setKey(\"key\");\n    series2.setDescription(\"description\");\n\n    assertTrue(series1.equals(series2));\n}",
        "@Test\npublic void equalsTest() {\n    Series series1 = new Series(\"key1\", \"description1\");\n    Series series2 = new Series(\"key2\", \"description2\");\n    assertTrue(series1.equals(series1)); // reflexive\n    assertFalse(series1.equals(null));    // false if obj is null\n}"
    ]
}