{
    "project_name": "zxing",
    "file_name": "FinderPattern.java",
    "relative_path": "zxing/core/src/main/java/com/google/zxing/oned/rss/FinderPattern.java",
    "execute_path": "zxing",
    "package": "com.google.zxing.oned.rss",
    "docstring": null,
    "source_code": "@Override\npublic boolean equals(Object o) {\n  if (!(o instanceof FinderPattern)) {\n    return false;\n  }\n  FinderPattern that = (FinderPattern) o;\n  return value == that.value;\n}\n",
    "class_name": "FinderPattern",
    "method_name": "equals",
    "arguments": [
        "Object o"
    ],
    "generate_test": [
        "@Test\npublic void equalsTest() {\n    FinderPattern pattern1 = new FinderPattern();\n    FinderPattern pattern2 = new FinderPattern();\n    pattern1.value = 5;\n    pattern2.value = 5;\n    assertTrue(pattern1.equals(pattern2));\n}",
        "FinderPattern pattern1 = new FinderPattern();\nFinderPattern pattern2 = new FinderPattern();\npattern1.value = 5;\npattern2.value = 5;\n\nassertTrue(pattern1.equals(pattern2));",
        "@Test\npublic void equalsTest() {\n    FinderPattern pattern1 = new FinderPattern(1);\n    FinderPattern pattern2 = new FinderPattern(1);\n    assertEquals(pattern1, pattern2);\n}",
        "@Test\npublic void equalsTest() {\n  FinderPattern pattern1 = new FinderPattern(5);\n  FinderPattern pattern2 = new FinderPattern(5);\n  assertTrue(pattern1.equals(pattern2));\n  assertFalse(pattern1.equals(new FinderPattern(3)));\n}",
        "@Test\npublic void equalsTest() {\n    FinderPattern pattern1 = new FinderPattern(1);\n    FinderPattern pattern2 = new FinderPattern(1);\n    assertTrue(pattern1.equals(pattern2));\n}",
        "@Test\npublic void equalsTest() {\n    FinderPattern fp1 = new FinderPattern(5);\n    FinderPattern fp2 = new FinderPattern(5);\n    FinderPattern fp3 = new FinderPattern(10);\n    \n    assertTrue(fp1.equals(fp2));\n    assertFalse(fp1.equals(fp3));\n}",
        "@Test\npublic void equalsTest() {\n    FinderPattern pattern1 = new FinderPattern();\n    FinderPattern pattern2 = new FinderPattern();\n    pattern1.setValue(5);\n    assertTrue(pattern1.equals(pattern2));\n}",
        "@Test\npublic void equalsTest() {\n    FinderPattern pattern1 = new FinderPattern(5);\n    FinderPattern pattern2 = new FinderPattern(5);\n    boolean result = pattern1.equals(pattern2);\n    assertTrue(result);\n}",
        "@Test\npublic void equalsTest() {\n    FinderPattern pattern1 = new FinderPattern(5);\n    FinderPattern pattern2 = new FinderPattern(5);\n    assertTrue(pattern1.equals(pattern2));\n    assertFalse(pattern1.equals(new Object()));\n}",
        "@Test\npublic void equalsTest() {\n    FinderPattern finderPattern1 = new FinderPattern(1);\n    FinderPattern finderPattern2 = new FinderPattern(1);\n    assertTrue(finderPattern1.equals(finderPattern2));\n}"
    ]
}