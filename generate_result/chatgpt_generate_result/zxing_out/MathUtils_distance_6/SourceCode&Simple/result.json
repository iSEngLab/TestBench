{
    "project_name": "zxing",
    "file_name": "MathUtils.java",
    "relative_path": "zxing/core/src/main/java/com/google/zxing/common/detector/MathUtils.java",
    "execute_path": "zxing",
    "package": "com.google.zxing.common.detector",
    "docstring": "/**\n   * @param aX point A x coordinate\n   * @param aY point A y coordinate\n   * @param bX point B x coordinate\n   * @param bY point B y coordinate\n   * @return Euclidean distance between points A and B\n   */",
    "source_code": "\npublic static float distance(int aX, int aY, int bX, int bY) {\n  double xDiff = aX - bX;\n  double yDiff = aY - bY;\n  return (float) Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\n",
    "class_name": "MathUtils",
    "method_name": "distance",
    "arguments": [
        "int aX",
        "int aY",
        "int bX",
        "int bY"
    ],
    "generate_test": [
        "public void distanceTest() {\n  assertEquals(3.605, MathUtils.distance(1, 2, 4, 3), 0.001);\n}",
        "@Test\npublic void distanceTest() {\n    assertEquals(5.0f, MathUtils.distance(2, 3, 5, 7));\n}",
        "@Test\npublic void distanceTest() {\n    float actual = MathUtils.distance(3, 4, 0, 0);\n    float expected = 5.0f;\n    assertEquals(expected, actual, 0.0001);\n}",
        "@Test\npublic void distanceTest() {\n    int aX = 2;\n    int aY = 3;\n    int bX = 5;\n    int bY = 7;\n    float expectedDistance = 5.0f;\n    float actualDistance = MathUtils.distance(aX, aY, bX, bY);\n    assertEquals(expectedDistance, actualDistance);\n}",
        "@Test\npublic void distanceTest() {\n    float result = MathUtils.distance(2, 3, 6, 5);\n    assertEquals(4.47213595499958, result);\n}",
        "@Test\npublic void distanceTest() {\n    float expected = 5.0f;\n    float actual = MathUtils.distance(3, 4, 6, 8);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void distanceTest() {\n    float result = MathUtils.distance(3, 4, 0, 0);\n    assertEquals(5.0, result, 0.001);\n}",
        "@Test\npublic void distanceTest() {\n    int aX = 5;\n    int aY = 7;\n    int bX = 8;\n    int bY = 12;\n    float expectedDistance = 5.8309f;\n    float actualDistance = MathUtils.distance(aX, aY, bX, bY);\n    assertEquals(expectedDistance, actualDistance, 0.0001);\n}",
        "@Test\npublic void distanceTest() {\n    float expected = 5.0f;\n    float actual = MathUtils.distance(1, 2, 4, 6);\n    assertEquals(expected, actual, 0.001);\n}",
        "@Test\npublic void distanceTest() {\n    float result = MathUtils.distance(3, 4, 0, 0);\n    assertEquals(5.0, result);\n}"
    ]
}