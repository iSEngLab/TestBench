Source code: 


public static float distance(int aX, int aY, int bX, int bY) {
  double xDiff = aX - bX;
  double yDiff = aY - bY;
  return (float) Math.sqrt(xDiff * xDiff + yDiff * yDiff);
}



No.1 generated result --------------------------

public void distanceTest() {
  assertEquals(3.605, MathUtils.distance(1, 2, 4, 3), 0.001);
}


No.2 generated result --------------------------

@Test
public void distanceTest() {
    assertEquals(5.0f, MathUtils.distance(2, 3, 5, 7));
}


No.3 generated result --------------------------

@Test
public void distanceTest() {
    float actual = MathUtils.distance(3, 4, 0, 0);
    float expected = 5.0f;
    assertEquals(expected, actual, 0.0001);
}


No.4 generated result --------------------------

@Test
public void distanceTest() {
    int aX = 2;
    int aY = 3;
    int bX = 5;
    int bY = 7;
    float expectedDistance = 5.0f;
    float actualDistance = MathUtils.distance(aX, aY, bX, bY);
    assertEquals(expectedDistance, actualDistance);
}


No.5 generated result --------------------------

@Test
public void distanceTest() {
    float result = MathUtils.distance(2, 3, 6, 5);
    assertEquals(4.47213595499958, result);
}


No.6 generated result --------------------------

@Test
public void distanceTest() {
    float expected = 5.0f;
    float actual = MathUtils.distance(3, 4, 6, 8);
    assertEquals(expected, actual);
}


No.7 generated result --------------------------

@Test
public void distanceTest() {
    float result = MathUtils.distance(3, 4, 0, 0);
    assertEquals(5.0, result, 0.001);
}


No.8 generated result --------------------------

@Test
public void distanceTest() {
    int aX = 5;
    int aY = 7;
    int bX = 8;
    int bY = 12;
    float expectedDistance = 5.8309f;
    float actualDistance = MathUtils.distance(aX, aY, bX, bY);
    assertEquals(expectedDistance, actualDistance, 0.0001);
}


No.9 generated result --------------------------

@Test
public void distanceTest() {
    float expected = 5.0f;
    float actual = MathUtils.distance(1, 2, 4, 6);
    assertEquals(expected, actual, 0.001);
}


No.10 generated result --------------------------

@Test
public void distanceTest() {
    float result = MathUtils.distance(3, 4, 0, 0);
    assertEquals(5.0, result);
}


