{
    "project_name": "Java",
    "file_name": "AbsoluteMax.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/maths/AbsoluteMax.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.maths",
    "docstring": "/**\n     * Finds the absolute maximum value among the given numbers.\n     *\n     * @param numbers The numbers to compare.\n     * @return The absolute maximum value.\n     * @throws IllegalArgumentException If the input array is empty or null.\n     */",
    "source_code": "\npublic static int getMaxValue(int... numbers) {\n    if (numbers == null || numbers.length == 0) {\n        throw new IllegalArgumentException(\"Numbers array cannot be empty or null\");\n    }\n    int absMax = numbers[0];\n    for (int i = 1; i < numbers.length; i++) {\n        if (Math.abs(numbers[i]) > Math.abs(absMax)) {\n            absMax = numbers[i];\n        }\n    }\n    return absMax;\n}\n",
    "class_name": "AbsoluteMax",
    "method_name": "getMaxValue",
    "arguments": [
        "int numbers"
    ],
    "generate_test": [
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int[] numbers = new int[] {1, 2, -3, 4};\n        assertEquals(4, AbsoluteMax.getMaxValue(numbers));\n\n        numbers = new int[] {-1000, 1000};\n        assertEquals(1000, AbsoluteMax.getMaxValue(numbers));\n\n        numbers = new int[] {Integer.MIN_VALUE, Integer.MAX_VALUE};\n        assertEquals(Integer.MAX_VALUE, AbsoluteMax.getMaxValue(numbers));\n    }\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int[] numbers = new int[] {-1, 2, 3, -4};\n        int expectedResult = -1;\n        \n        assertEquals(expectedResult, AbsoluteMax.getMaxValue(numbers));\n    }\n}",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int[] numbers = new int[] {1, 2, 3};\n        assertEquals(Math.abs(getMaxValue(numbers)), Math.abs(3));\n        \n        numbers = new int[] {-1, -2, -3};\n        assertEquals(Math.abs(getMaxValue(numbers)), Math.abs(-1));\n        \n        numbers = new int[] {1, -2, 3};\n        assertEquals(Math.abs(getMaxValue(numbers)), Math.abs(3));\n    }\n}",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int[] numbers = {1, 2, 3};\n        assertEquals(Math.abs(getMaxValue(numbers)), Math.abs(3));\n    }\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int[] numbers = new int[] {1, 2, 3};\n        assertEquals(3, getMaxValue(numbers));\n    }\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int[] numbers = new int[] {1, 2, 3};\n        assertEquals(getMaxValue(numbers), 3);\n\n        numbers = new int[] {-1, -2, -3};\n        assertEquals(getMaxValue(numbers), -1);\n\n        numbers = new int[] {0, 0, 0};\n        assertEquals(getMaxValue(numbers), 0);\n    }\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int[] numbers = new int[]{-5, 10, -20};\n        assertEquals(10, AbsoluteMax.getMaxValue(numbers));\n        \n        int[] numbers2 = new int[]{4, -5, -8};\n        assertEquals(-5, AbsoluteMax.getMaxValue(numbers2));\n    }\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int[] numbers = new int[] {1, 2, 3, 4};\n        assertEquals(getMaxValue(numbers), 4);\n        \n        numbers = new int[] {-1, -2, -3, -4};\n        assertEquals(getMaxValue(numbers), -1);\n        \n        numbers = new int[] {1, 0, 0, 0};\n        assertEquals(getMaxValue(numbers), 1);\n        \n        numbers = new int[] {-1, -2, -3, -4};\n        assertEquals(getMaxValue(numbers), -1);\n    }\n}",
        "\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        int[] numbers = {1, 2, 3};\n        int expected = 3;\n        assertEquals(expected, AbsoluteMax.getMaxValue(numbers));\n        \n        int[] numbers2 = {-1, -2, -3};\n        int expected2 = -1;\n        assertEquals(expected2, AbsoluteMax.getMaxValue(numbers2));\n    }\n}",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AbsoluteMaxTest {\n    @Test\n    public void getMaxValueTest() {\n        // Test with a single positive number\n        int[] numbers = new int[] { 10 };\n        assertEquals(10, getMaxValue(numbers));\n\n        // Test with a single negative number\n        numbers = new int[] { -10 };\n        assertEquals(-10, getMaxValue(numbers));\n\n        // Test with multiple positive and negative numbers\n        numbers = new int[] { 5, -2, 8, -6, 3, 9 };\n        assertEquals(9, getMaxValue(numbers));\n    }\n}\n"
    ]
}