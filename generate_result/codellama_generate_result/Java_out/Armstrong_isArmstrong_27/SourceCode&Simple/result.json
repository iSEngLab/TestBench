{
    "project_name": "Java",
    "file_name": "Armstrong.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/maths/Armstrong.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.maths",
    "docstring": "/**\n     * Checks whether a given number is an Armstrong number or not.\n     *\n     * @param number the number to check\n     * @return {@code true} if the given number is an Armstrong number, {@code false} otherwise\n     */",
    "source_code": "\npublic boolean isArmstrong(int number) {\n    long sum = 0;\n    String temp = Integer.toString(number); // Convert the given number to a string\n    int power = temp.length(); // Extract the length of the number (number of digits)\n    long originalNumber = number;\n\n    while (originalNumber > 0) {\n        long digit = originalNumber % 10;\n        sum += (long) Math.pow(digit, power); // The digit raised to the power of the number of digits and added to the sum.\n        originalNumber /= 10;\n    }\n\n    return sum == number;\n}\n",
    "class_name": "Armstrong",
    "method_name": "isArmstrong",
    "arguments": [
        "int number"
    ],
    "generate_test": [
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        // Test 1: Verify that 0 is not an Armstrong number\n        assertFalse(new Armstrong().isArmstrong(0));\n\n        // Test 2: Verify that 1 is not an Armstrong number\n        assertFalse(new Armstrong().isArmstrong(1));\n\n        // Test 3: Verify that 2 is not an Armstrong number\n        assertFalse(new Armstrong().isArmstrong(2));\n\n        // Test 4: Verify that 3 is not an Armstrong number\n        assertFalse(new Armstrong().isArmstrong(3));\n\n        // Test 5: Verify that 153 is an Armstrong number\n        assertTrue(new Armstrong().isArmstrong(153));\n    }\n}",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(153)); // 1^3 + 5^3 + 3^3 = 153\n        assertFalse(armstrong.isArmstrong(246)); // 2^3 + 4^3 + 6^3 = 245, not equal to the given number\n    }\n}\n",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong armstrong = new Armstrong();\n        assertTrue(armstrong.isArmstrong(1));\n        assertFalse(armstrong.isArmstrong(200));\n        assertTrue(armstrong.isArmstrong(370));\n    }\n}",
        "\npublic boolean isArmstrong(int number) {\n    long sum = 0;\n    String temp = Integer.toString(number); // Convert the given number to a string\n    int power = temp.length(); // Extract the length of the number (number of digits)\n    long originalNumber = number;\n\n    while (originalNumber > 0) {\n        long digit = originalNumber % 10;\n        sum += (long) Math.pow(digit, power); // The digit raised to the power of the number of digits and added to the sum.\n        originalNumber /= 10;\n    }\n\n    return sum == number;\n}\n",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong arm = new Armstrong();\n        \n        // Test for a positive number that is not an Armstrong number\n        assertFalse(arm.isArmstrong(123));\n        \n        // Test for a negative number that is not an Armstrong number\n        assertFalse(arm.isArmstrong(-456));\n        \n        // Test for a zero\n        assertTrue(arm.isArmstrong(0));\n        \n        // Test for a positive number that is an Armstrong number\n        assertTrue(arm.isArmstrong(153));\n    }\n}\n",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        // Test 1: check if the number 0 is an Armstrong number\n        assertTrue(new Armstrong().isArmstrong(0));\n\n        // Test 2: check if the number 153 is an Armstrong number\n        assertTrue(new Armstrong().isArmstrong(153));\n\n        // Test 3: check if the number 1634 is an Armstrong number\n        assertFalse(new Armstrong().isArmstrong(1634));\n    }\n}\n",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        // Test case 1:\n        assertTrue(new Armstrong().isArmstrong(1));\n\n        // Test case 2:\n        assertTrue(new Armstrong().isArmstrong(91));\n\n        // Test case 3:\n        assertFalse(new Armstrong().isArmstrong(555));\n    }\n}",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong arm = new Armstrong();\n        \n        assertTrue(arm.isArmstrong(153)); // 1^3 + 5^3 + 3^3 = 153\n        assertFalse(arm.isArmstrong(100)); // 1^3 + 0^3 + 0^3 = 0, not equal to the input\n    }\n}",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        // Create a new instance of the Armstrong class\n        Armstrong arm = new Armstrong();\n        \n        // Test case 1: number = 0\n        assertEquals(arm.isArmstrong(0), true);\n        \n        // Test case 2: number = 153\n        assertEquals(arm.isArmstrong(153), true);\n        \n        // Test case 3: number = 9\n        assertEquals(arm.isArmstrong(9), false);\n    }\n}",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ArmstrongTest {\n    @Test\n    public void isArmstrongTest() {\n        Armstrong arm = new Armstrong();\n        \n        assertTrue(arm.isArmstrong(1)); // 1^3 + 0^3 + 0^3 = 1\n        assertFalse(arm.isArmstrong(2)); // 2^3 + 0^3 + 0^3 = 8, not equal to 2\n        assertTrue(arm.isArmstrong(3)); // 3^3 + 0^3 + 0^3 = 3\n        assertFalse(arm.isArmstrong(153)); // 1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153, not equal to 153\n    }\n}"
    ]
}