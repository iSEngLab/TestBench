Source code: 


public boolean isArmstrong(int number) {
    long sum = 0;
    String temp = Integer.toString(number); // Convert the given number to a string
    int power = temp.length(); // Extract the length of the number (number of digits)
    long originalNumber = number;

    while (originalNumber > 0) {
        long digit = originalNumber % 10;
        sum += (long) Math.pow(digit, power); // The digit raised to the power of the number of digits and added to the sum.
        originalNumber /= 10;
    }

    return sum == number;
}



No.1 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class ArmstrongTest {
    @Test
    public void isArmstrongTest() {
        assertTrue(Armstrong.isArmstrong(153)); // 1^3 + 5^3 + 3^3 = 153
        assertFalse(Armstrong.isArmstrong(164)); // 1^3 + 6^3 + 4^3 = 175 (not equal to 164)
    }
}


No.2 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class ArmstrongTest {
    @Test
    public void isArmstrongTest() {
        // Test 1: test that the method returns true for armstrong numbers
        int number = 153; // 1^3 + 5^3 + 3^3 = 153
        assertTrue(isArmstrong(number));

        // Test 2: test that the method returns false for non-armstrong numbers
        int number = 123; // 1^3 + 2^3 + 3^3 != 123
        assertFalse(isArmstrong(number));
    }
}


No.3 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class ArmstrongTest {
    @Test
    public void isArmstrongTest() {
        assertTrue(Armstrong.isArmstrong(153)); // 1^3 + 5^3 + 3^3 = 153
        assertFalse(Armstrong.isArmstrong(276)); // 2^3 + 7^3 + 6^3 != 276
    }
}


No.4 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class ArmstrongTest {
    @Test
    public void isArmstrongTest() {
        assertTrue(isArmstrong(153)); // Should return true because 1^3 + 5^3 + 3^3 = 153
        assertFalse(isArmstrong(160)); // Should return false because 1^3 + 6^3 + 0^3 != 160
    }
}


No.5 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class ArmstrongTest {
    @Test
    public void isArmstrongTest() {
        assertTrue(Armstrong.isArmstrong(153)); // 1^3 + 5^3 + 3^3 = 153
        assertFalse(Armstrong.isArmstrong(407)); // 4^3 + 0^3 + 7^3 != 407
    }
}


No.6 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class ArmstrongTest {
    @Test
    public void isArmstrongTest() {
        assertTrue(Armstrong.isArmstrong(153)); // 1^3 + 5^3 + 3^3 = 153
        assertFalse(Armstrong.isArmstrong(167)); // 1^3 + 6^3 + 7^3 = 207
    }
}



No.7 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class ArmstrongTest {
    @Test
    public void isArmstrongTest() {
        // Test case 1: number = 0, expected result = false
        assertFalse(Armstrong.isArmstrong(0));

        // Test case 2: number = 1, expected result = true
        assertTrue(Armstrong.isArmstrong(1));

        // Test case 3: number = 153, expected result = false
        assertFalse(Armstrong.isArmstrong(153));

        // Test case 4: number = 370, expected result = true
        assertTrue(Armstrong.isArmstrong(370));

        // Test case 5: number = 371, expected result = false
        assertFalse(Armstrong.isArmstrong(371));
    }
}


No.8 generated result --------------------------


import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class ArmstrongTest {
    @Test
    public void isArmstrongTest() {
        assertTrue(isArmstrong(153)); // 153 is an Armstrong number since (1^3) + (5^3) + (3^3) = 153
        assertFalse(isArmstrong(420)); // 420 is not an Armstrong number since (4^3) + (2^3) + (0^3) != 420
    }
}



No.9 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class ArmstrongTest {
    @Test
    public void isArmstrongTest() {
        int number = 153; // 1^3 + 5^3 + 3^3 = 153
        assertTrue(Armstrong.isArmstrong(number));

        number = 1634; // 1^4 + 6^4 + 3^4 + 4^4 = 1634
        assertTrue(Armstrong.isArmstrong(number));
    }
}


No.10 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class ArmstrongTest {
    @Test
    public void isArmstrongTest() {
        assertTrue(isArmstrong(153)); // 1^3 + 5^3 + 3^3 = 153
        assertFalse(isArmstrong(1234)); // 1^4 + 2^4 + 3^4 + 4^4 = 1234, not an Armstrong number
    }
}


