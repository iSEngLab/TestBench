Source code: 


public static int average(int[] numbers) {
    if (numbers == null || numbers.length == 0) {
        throw new IllegalArgumentException("Numbers array cannot be empty or null");
    }
    long sum = 0;
    for (int number : numbers) {
        sum += number;
    }
    return (int) (sum / numbers.length);
}



No.1 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = {1, 2, 3};
        assertEquals(2, Average.average(numbers));
    }
}


No.2 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        // Test with int array
        int[] numbers = {1, 2, 3, 4};
        assertEquals(2.5, Average.average(numbers));
        
        // Test with double array
        double[] doubles = {1.0, 2.0, 3.0, 4.0};
        assertEquals(2.5, Average.average(doubles));
    }
}


No.3 generated result --------------------------

The code you provided is a Java class called `Average` that contains two methods for calculating the average of an array of numbers. The first method, `average(double[] numbers)`, calculates the average of an array of double values and returns a double value. The second method, `average(int[] numbers)`, calculates the average of an array of integer values and returns an integer value.

The unit test you provided is for the `Average` class and has been partially completed. You need to fill in the <FILL> tag with the appropriate code to complete the test case.

Here's a hint: you can use JUnit's `assertEquals()` method to compare two values and make sure they are equal. You will also need to use JUnit's `@Test` annotation to mark the method as a test case.

Once you have completed the test case, you can run it using JUnit by right-clicking on the file in Eclipse and selecting "Run As" > "JUnit Test". This will execute the test case and give you the results of your assertions.


No.4 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        // Test the case when numbers array is null or empty
        assertThrows(IllegalArgumentException.class, () -> Average.average((int[]) null));
        assertThrows(IllegalArgumentException.class, () -> Average.average(new int[0]));
        
        // Test the case when numbers array is not empty and sum of elements does not exceed long value limit
        int[] numbers = {1, 2, 3};
        assertEquals(Average.average(numbers), 2);
    }
}


No.5 generated result --------------------------

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[] {1, 2, 3};
        assertEquals(2, Average.average(numbers));
    }
}


No.6 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[] {1, 2, 3};
        assertEquals(2, Average.average(numbers));
        
        int[] negativeNumbers = new int[] {-1, -2, -3};
        assertEquals(-2, Average.average(negativeNumbers));
    }
}


No.7 generated result --------------------------

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[0];
        assertThrows(IllegalArgumentException.class, () -> Average.average(numbers));
        
        numbers = new int[] {1, 2, 3};
        assertEquals(2, Average.average(numbers));
        
        numbers = new int[] {-10, 5, -2};
        assertEquals(-4, Average.average(numbers));
    }
}


No.8 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        // Test case 1: null or empty array
        int[] numbers = null;
        assertThrows(IllegalArgumentException.class, () -> {
            Average.average(numbers);
        });

        numbers = new int[0];
        assertThrows(IllegalArgumentException.class, () -> {
            Average.average(numbers);
        });

        // Test case 2: array with one element
        numbers = new int[] {1};
        assertEquals(1, Average.average(numbers));

        // Test case 3: array with multiple elements
        numbers = new int[] {1, 2, 3, 4, 5};
        assertEquals(3, Average.average(numbers));
    }
}


No.9 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[3];
        numbers[0] = 1;
        numbers[1] = 2;
        numbers[2] = 3;
        assertEquals(Average.average(numbers), 2);
    }
}


No.10 generated result --------------------------

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        // Test case 1: Empty array
        int[] numbers = new int[0];
        assertThrows(IllegalArgumentException.class, () -> Average.average(numbers));

        // Test case 2: Single element array
        numbers = new int[]{1};
        assertEquals(1, Average.average(numbers));

        // Test case 3: Multiple elements array
        numbers = new int[]{1, 2, 3};
        assertEquals(2, Average.average(numbers));
    }
}


