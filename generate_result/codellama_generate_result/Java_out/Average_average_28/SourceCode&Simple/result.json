{
    "project_name": "Java",
    "file_name": "Average.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/maths/Average.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.maths",
    "docstring": "/**\n     * find average value of an int array\n     *\n     * @param numbers the array contains element and the sum does not excess long\n     *                value limit\n     * @return average value\n     */",
    "source_code": "\npublic static int average(int[] numbers) {\n    if (numbers == null || numbers.length == 0) {\n        throw new IllegalArgumentException(\"Numbers array cannot be empty or null\");\n    }\n    long sum = 0;\n    for (int number : numbers) {\n        sum += number;\n    }\n    return (int) (sum / numbers.length);\n}\n",
    "class_name": "Average",
    "method_name": "average",
    "arguments": [
        "int[] numbers"
    ],
    "generate_test": [
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = new int[]{1, 2, 3, 4, 5};\n        assertEquals(Average.average(numbers), 3);\n        \n        numbers = new int[]{1000, -5, -7};\n        assertEquals(Average.average(numbers), -4);\n    }\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        // Test that the method throws an IllegalArgumentException when the input array is empty or null\n        assertThrows(IllegalArgumentException.class, () -> {\n            int[] numbers = {};\n            Average.average(numbers);\n        });\n        \n        assertThrows(IllegalArgumentException.class, () -> {\n            int[] numbers = null;\n            Average.average(numbers);\n        });\n        \n        // Test that the method returns the correct average of the input numbers\n        int[] numbers1 = {1, 2, 3};\n        assertEquals(Average.average(numbers1), (double) (1 + 2 + 3) / 3);\n        \n        int[] numbers2 = {4, 5, 6};\n        assertEquals(Average.average(numbers2), (double) (4 + 5 + 6) / 3);\n    }\n}",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {1, 2, 3, 4};\n        assertEquals(2.5, Average.average(numbers));\n        \n        numbers = new int[]{10, 20, 30, 40};\n        assertEquals(25, Average.average(numbers));\n        \n        numbers = new int[]{-10, -20, -30, -40};\n        assertEquals(-25, Average.average(numbers));\n    }\n}\n",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = new int[] {1, 2, 3};\n        assertEquals(2, Average.average(numbers));\n        \n        int[] emptyArray = {};\n        assertThrows(IllegalArgumentException.class, () -> Average.average(emptyArray));\n    }\n}",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = new int[3];\n        numbers[0] = 1;\n        numbers[1] = 2;\n        numbers[2] = 3;\n        assertEquals(2, Average.average(numbers));\n    }\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = new int[5];\n        for (int i = 0; i < numbers.length; i++) {\n            numbers[i] = i + 1;\n        }\n        assertEquals(3, Average.average(numbers));\n    }\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = new int[]{1, 2, 3};\n        assertEquals(2, Average.average(numbers));\n    }\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = {1, 2, 3};\n        assertEquals(2, Average.average(numbers));\n        \n        numbers = new int[] {};\n        assertThrows(IllegalArgumentException.class, () -> Average.average(numbers));\n    }\n}",
        "\npackage com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = new int[]{1, 2, 3};\n        assertEquals(2, Average.average(numbers));\n\n        numbers = new int[]{4, 5, 6};\n        assertEquals(5, Average.average(numbers));\n    }\n}\n",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AverageTest {\n    @Test\n    public void averageTest() {\n        int[] numbers = new int[] {1, 2, 3};\n        assertEquals(Average.average(numbers), 2);\n        \n        int[] numbers2 = new int[] {-1, -2, -3};\n        assertEquals(Average.average(numbers2), -2);\n    }\n}"
    ]
}