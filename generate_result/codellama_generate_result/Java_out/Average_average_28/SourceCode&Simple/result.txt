Source code: 


public static int average(int[] numbers) {
    if (numbers == null || numbers.length == 0) {
        throw new IllegalArgumentException("Numbers array cannot be empty or null");
    }
    long sum = 0;
    for (int number : numbers) {
        sum += number;
    }
    return (int) (sum / numbers.length);
}



No.1 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[]{1, 2, 3, 4, 5};
        assertEquals(Average.average(numbers), 3);
        
        numbers = new int[]{1000, -5, -7};
        assertEquals(Average.average(numbers), -4);
    }
}


No.2 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        // Test that the method throws an IllegalArgumentException when the input array is empty or null
        assertThrows(IllegalArgumentException.class, () -> {
            int[] numbers = {};
            Average.average(numbers);
        });
        
        assertThrows(IllegalArgumentException.class, () -> {
            int[] numbers = null;
            Average.average(numbers);
        });
        
        // Test that the method returns the correct average of the input numbers
        int[] numbers1 = {1, 2, 3};
        assertEquals(Average.average(numbers1), (double) (1 + 2 + 3) / 3);
        
        int[] numbers2 = {4, 5, 6};
        assertEquals(Average.average(numbers2), (double) (4 + 5 + 6) / 3);
    }
}


No.3 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = {1, 2, 3, 4};
        assertEquals(2.5, Average.average(numbers));
        
        numbers = new int[]{10, 20, 30, 40};
        assertEquals(25, Average.average(numbers));
        
        numbers = new int[]{-10, -20, -30, -40};
        assertEquals(-25, Average.average(numbers));
    }
}



No.4 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[] {1, 2, 3};
        assertEquals(2, Average.average(numbers));
        
        int[] emptyArray = {};
        assertThrows(IllegalArgumentException.class, () -> Average.average(emptyArray));
    }
}


No.5 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[3];
        numbers[0] = 1;
        numbers[1] = 2;
        numbers[2] = 3;
        assertEquals(2, Average.average(numbers));
    }
}


No.6 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[5];
        for (int i = 0; i < numbers.length; i++) {
            numbers[i] = i + 1;
        }
        assertEquals(3, Average.average(numbers));
    }
}


No.7 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[]{1, 2, 3};
        assertEquals(2, Average.average(numbers));
    }
}


No.8 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = {1, 2, 3};
        assertEquals(2, Average.average(numbers));
        
        numbers = new int[] {};
        assertThrows(IllegalArgumentException.class, () -> Average.average(numbers));
    }
}


No.9 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[]{1, 2, 3};
        assertEquals(2, Average.average(numbers));

        numbers = new int[]{4, 5, 6};
        assertEquals(5, Average.average(numbers));
    }
}



No.10 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class AverageTest {
    @Test
    public void averageTest() {
        int[] numbers = new int[] {1, 2, 3};
        assertEquals(Average.average(numbers), 2);
        
        int[] numbers2 = new int[] {-1, -2, -3};
        assertEquals(Average.average(numbers2), -2);
    }
}


