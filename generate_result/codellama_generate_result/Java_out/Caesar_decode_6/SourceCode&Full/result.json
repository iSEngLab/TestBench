{
    "project_name": "Java",
    "file_name": "Caesar.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/ciphers/Caesar.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.ciphers",
    "docstring": "/**\n     * Decrypt message by shifting back every Latin char to previous the ASCII\n     * Example : B - 1 -> A\n     *\n     * @return message\n     */",
    "source_code": "\npublic String decode(String encryptedMessage, int shift) {\n    StringBuilder decoded = new StringBuilder();\n\n    shift %= 26;\n\n    final int length = encryptedMessage.length();\n    for (int i = 0; i < length; i++) {\n        char current = encryptedMessage.charAt(i);\n        if (isCapitalLatinLetter(current)) {\n            current -= shift;\n            decoded.append((char) (current < 'A' ? current + 26 : current)); // 26 = number of latin letters\n        } else if (isSmallLatinLetter(current)) {\n            current -= shift;\n            decoded.append((char) (current < 'a' ? current + 26 : current)); // 26 = number of latin letters\n        } else {\n            decoded.append(current);\n        }\n    }\n    return decoded.toString();\n}\n",
    "class_name": "Caesar",
    "method_name": "decode",
    "arguments": [
        "String encryptedMessage",
        "int shift"
    ],
    "generate_test": [
        "\npackage com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar caesar = new Caesar();\n        String encryptedMessage = \"ABCD\";\n        int shift = 3;\n        String expectedDecodedMessage = \"GHIJ\";\n        assertEquals(expectedDecodedMessage, caesar.decode(encryptedMessage, shift));\n    }\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        // Create a Caesar object to test the decode method\n        Caesar caesar = new Caesar();\n\n        // Test the decode method with different shift values\n        assertEquals(\"Hello\", caesar.decode(\"Hey!\", 1));\n        assertEquals(\"Hey!\", caesar.decode(\"Hello\", -1));\n        assertEquals(\"Hey!\", caesar.decode(\"Hello\", 0));\n    }\n}",
        "@Test\npublic void decodeTest() {\n    String encryptedMessage = \"HELLO WORLD\";\n    int shift = 3;\n    \n    Caesar cipher = new Caesar();\n    String decoded = cipher.decode(encryptedMessage, shift);\n    \n    assertEquals(\"HELLO WORLD\", decoded);\n}",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        // Test case 1: Encrypted message is empty\n        String encryptedMessage = \"\";\n        int shift = 0;\n        assertEquals(\"\", new Caesar().decode(encryptedMessage, shift));\n\n        // Test case 2: Encrypted message has only one character\n        encryptedMessage = \"A\";\n        shift = 1;\n        assertEquals(\"B\", new Caesar().decode(encryptedMessage, shift));\n\n        // Test case 3: Encrypted message has multiple characters\n        encryptedMessage = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        shift = 1;\n        assertEquals(\"BCDEFGHIJKLMNOPQRSTUVWXYZA\", new Caesar().decode(encryptedMessage, shift));\n    }\n}",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        // Create an instance of the Caesar class\n        Caesar caesar = new Caesar();\n        \n        // Test that decoding a message with no shift results in the original message\n        String encryptedMessage = \"Hello World!\";\n        int shift = 0;\n        String expectedDecodedMessage = \"Hello World!\";\n        assertEquals(expectedDecodedMessage, caesar.decode(encryptedMessage, shift));\n        \n        // Test that decoding a message with a shift results in the correct decoded message\n        encryptedMessage = \"Hll Wrld!\";\n        shift = 1;\n        expectedDecodedMessage = \"Hello World!\";\n        assertEquals(expectedDecodedMessage, caesar.decode(encryptedMessage, shift));\n    }\n}",
        "\n@Test\npublic void decodeTest() {\n    String encryptedMessage = \"ABCD\"; // This is a sample encrypted message\n    int shiftValue = 2; // This is the shift value for this test case\n    \n    // Decode the message with the given shift value\n    String decodedMessage = Caesar.decode(encryptedMessage, shiftValue);\n    \n    // Check if the output is correct\n    assertEquals(\"CDEF\", decodedMessage);\n}\n",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"XQHJC XNZDHZ RKDQRK KLGWJ\"; // This is an example of a Caesar Cipher text\n        int shift = 3;\n        \n        Caesar cipher = new Caesar();\n        String decoded = cipher.decode(encryptedMessage, shift);\n        \n        assertEquals(\"THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\", decoded); // This is the expected output of the decryption process\n    }\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        // Create a new instance of the Caesar class\n        Caesar caesar = new Caesar();\n        \n        // Test that \"ABCD\" is decoded to \"ZYXW\" with a shift of 5\n        String expected = \"ZYXW\";\n        String actual = caesar.decode(\"ABCD\", 5);\n        assertEquals(expected, actual);\n        \n        // Test that \"XYZA\" is decoded to \"ABCX\" with a shift of 3\n        expected = \"ABCX\";\n        actual = caesar.decode(\"XYZA\", 3);\n        assertEquals(expected, actual);\n    }\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"ZXHF YWJJ\" // encrypted message using shift 4\n        int shift = 4; // shift used to encrypt the message\n        \n        Caesar caesar = new Caesar();\n        String decodedMessage = caesar.decode(encryptedMessage, shift);\n        \n        assertEquals(\"THE QUICK BROWN FOX\", decodedMessage); // expected value of the decoded message\n    }\n}",
        "import org.junit.jupiter.api.Test;\n\npublic class CaesarTest {\n    @Test\n    public void decodeTest() {\n        Caesar caesar = new Caesar();\n        String encryptedMessage = \"KHOOR ZRUOGH\"; // \"HELLO WORLD\" shifted by 1\n        int shift = 1;\n        String decodedMessage = caesar.decode(encryptedMessage, shift);\n        assertEquals(\"HELLO WORLD\", decodedMessage);\n    }\n}"
    ]
}