Source code: 


public String decode(String encryptedMessage, int shift) {
    StringBuilder decoded = new StringBuilder();

    shift %= 26;

    final int length = encryptedMessage.length();
    for (int i = 0; i < length; i++) {
        char current = encryptedMessage.charAt(i);
        if (isCapitalLatinLetter(current)) {
            current -= shift;
            decoded.append((char) (current < 'A' ? current + 26 : current)); // 26 = number of latin letters
        } else if (isSmallLatinLetter(current)) {
            current -= shift;
            decoded.append((char) (current < 'a' ? current + 26 : current)); // 26 = number of latin letters
        } else {
            decoded.append(current);
        }
    }
    return decoded.toString();
}



No.1 generated result --------------------------


package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class CaesarTest {
    @Test
    public void decodeTest() {
        // Test case 1: Encoding and decoding a simple message with shift of 3
        String encryptedMessage = "ABC";
        int shift = 3;
        assertEquals("DEF", Caesar.decode(encryptedMessage, shift));

        // Test case 2: Encoding and decoding a simple message with shift of 0
        encryptedMessage = "GHI";
        shift = 0;
        assertEquals("GHI", Caesar.decode(encryptedMessage, shift));

        // Test case 3: Encoding and decoding a simple message with shift of -2
        encryptedMessage = "JKL";
        shift = -2;
        assertEquals("ZYX", Caesar.decode(encryptedMessage, shift));

        // Test case 4: Encoding and decoding a longer message
        encryptedMessage = "THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG";
        shift = 3;
        assertEquals("WKH TEC VFN GRJMP XQSP MDENCL PDQ", Caesar.decode(encryptedMessage, shift));
    }
}


No.2 generated result --------------------------

public class CaesarCipher {
  public String decode(String encryptedMessage, int shift) {
    StringBuilder decoded = new StringBuilder();
    
    shift %= 26;
    
    final int length = encryptedMessage.length();
    for (int i = 0; i < length; i++) {
      char current = encryptedMessage.charAt(i);
      if (isCapitalLatinLetter(current)) {
        current -= shift;
        decoded.append((char) (current < 'A' ? current + 26 : current)); // 26 = number of latin letters
      } else if (isSmallLatinLetter(current)) {
        current -= shift;
        decoded.append((char) (current < 'a' ? current + 26 : current)); // 26 = number of latin letters
      } else {
        decoded.append(current);
      }
    }
    
    return decoded.toString();
  }
  
  private boolean isCapitalLatinLetter(char c) {
    return 'A' <= c && c <= 'Z';
  }
  
  private boolean isSmallLatinLetter(char c) {
    return 'a' <= c && c <= 'z';
  }
}


No.3 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class CaesarTest {
    @Test
    public void decodeTest() {
        String encryptedMessage = "Uryyb Jbeyq"; // Encrypted message
        int shift = 2; // Shift value
        Caesar cipher = new Caesar(); // Instantiate the Caesar class
        String decoded = cipher.decode(encryptedMessage, shift); // Decode the encrypted message with the given shift
        assertEquals("Hello World", decoded); // Assert that the decoded string is equal to "Hello World"
    }
}


No.4 generated result --------------------------


import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class CaesarTest {
    @Test
    public void decodeTest() {
        String input = "Hello World!";
        int shift = 2;
        CaesarCipher cipher = new CaesarCipher(shift);
        
        assertEquals("Jgnnq Yqtnf!", cipher.decode(input));
    }
}



No.5 generated result --------------------------

@Test
public void decodeTest() {
    // Test case 1:
    String encryptedMessage = "ABC";
    int shift = 3;
    Caesar cipher = new Caesar();
    String decodedMessage = cipher.decode(encryptedMessage, shift);
    assertEquals("DEF", decodedMessage);

    // Test case 2:
    encryptedMessage = "Z";
    shift = 1;
    decodedMessage = cipher.decode(encryptedMessage, shift);
    assertEquals("AA", decodedMessage);
}


No.6 generated result --------------------------


package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class CaesarTest {
    @Test
    public void decodeTest() {
        String encryptedMessage = "THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG";
        int shift = 3;
        String decodedMessage = CaesarCipher.decode(encryptedMessage, shift);
        assertEquals("WKH TNIIAEL YGHT NQMD PF DLG", decodedMessage);
    }
}



No.7 generated result --------------------------

@Test
public void decodeTest() {
    Caesar cipher = new Caesar();
    
    String encryptedMessage = "Hello, World!";
    int shift = 3;
    String expectedDecodedMessage = "Khoor, Zruog!";
    
    assertEquals(expectedDecodedMessage, cipher.decode(encryptedMessage, shift));
}


No.8 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class CaesarTest {
    @Test
    public void decodeTest() {
        Caesar cipher = new Caesar();
        String encodedMessage = "TESTMESSAGE";
        int shift = 2;
        
        assertEquals("TSESTMGSG", cipher.decode(encodedMessage, shift));
    }
}


No.9 generated result --------------------------


package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class CaesarTest {
    @Test
    public void decodeTest() {
        String message = "Hello World!";
        int shift = 3;
        
        Caesar cipher = new Caesar();
        String decodedMessage = cipher.decode(message, shift);
        
        assertEquals("Khoor Zruog!", decodedMessage);
    }
}


No.10 generated result --------------------------


package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class CaesarTest {
    @Test
    public void decodeTest() {
        String encryptedMessage = "XLXR LX RXXLR XXT"; // The quick brown fox jumps over the lazy dog
        int shift = 3;
        Caesar cipher = new Caesar();
        String decodedMessage = cipher.decode(encryptedMessage, shift);
        assertEquals("THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG", decodedMessage);
    }
}


