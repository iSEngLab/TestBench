{
    "project_name": "Java",
    "file_name": "DecimalToAnyBase.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/conversions/DecimalToAnyBase.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.conversions",
    "docstring": "/**\n     * This method produces a String value of any given input decimal in any\n     * base\n     *\n     * @param inp Decimal of which we need the value in base in String format\n     * @return string format of the converted value in the given base\n     */",
    "source_code": "\npublic static String convertToAnyBase(int inp, int base) {\n    ArrayList<Character> charArr = new ArrayList<>();\n\n    while (inp > 0) {\n        charArr.add(reVal(inp % base));\n        inp /= base;\n    }\n\n    StringBuilder str = new StringBuilder(charArr.size());\n\n    for (Character ch : charArr) {\n        str.append(ch);\n    }\n\n    return str.reverse().toString();\n}\n",
    "class_name": "DecimalToAnyBase",
    "method_name": "convertToAnyBase",
    "arguments": [
        "int inp",
        "int base"
    ],
    "generate_test": [
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        int input = 1234;\n        int base = 2;\n        String expectedOutput = \"10011010\";\n        \n        assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(input, base));\n    }\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        assertEquals(\"10\", DecimalToAnyBase.convertToAnyBase(10, 2));\n        assertEquals(\"16\", DecimalToAnyBase.convertToAnyBase(16, 8));\n        assertEquals(\"37\", DecimalToAnyBase.convertToAnyBase(37, 10));\n        assertEquals(\"255\", DecimalToAnyBase.convertToAnyBase(255, 16));\n        \n        // Negative values should throw an exception\n        assertThrows(IllegalArgumentException.class, () -> {\n            DecimalToAnyBase.convertToAnyBase(-10, 2);\n        });\n    }\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        assertEquals(\"100\", DecimalToAnyBase.convertToAnyBase(100, 2));\n        assertEquals(\"110\", DecimalToAnyBase.convertToAnyBase(6, 3));\n        assertEquals(\"Z\", DecimalToAnyBase.convertToAnyBase(25, 36));\n    }\n}",
        "\n@Test\npublic void convertToAnyBaseTest() {\n    int decInput = 24;\n    int base = 10;\n    String expectedOutput = \"24\";\n    assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(decInput, base));\n}",
        "\npackage com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        assertEquals(\"10\", DecimalToAnyBase.convertToAnyBase(10, 2));\n        assertEquals(\"A\", DecimalToAnyBase.convertToAnyBase(10, 16));\n        assertEquals(\"-10\", DecimalToAnyBase.convertToAnyBase(-10, 2));\n    }\n}",
        "\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        int input = 123;\n        int base = 2;\n        String expected = \"1111011\";\n        assertEquals(expected, DecimalToAnyBase.convertToAnyBase(input, base));\n    }\n}\n",
        "@Test\npublic void convertToAnyBaseTest() {\n    int input = 123456; // Decimal input to be converted\n    int base = 2; // Base in which we want to convert the decimal\n    String expectedOutput = \"11110101\"; // Expected output for the given input and base\n    String actualOutput = convertToAnyBase(input, base);\n    assertEquals(expectedOutput, actualOutput);\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        // Test case 1: input = 5, base = 2\n        int input = 5;\n        int base = 2;\n        String expectedOutput = \"0b101\";\n        assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(input, base));\n        \n        // Test case 2: input = 16, base = 8\n        input = 16;\n        base = 8;\n        expectedOutput = \"0b20\";\n        assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(input, base));\n        \n        // Test case 3: input = 50, base = 16\n        input = 50;\n        base = 16;\n        expectedOutput = \"0b28\";\n        assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(input, base));\n    }\n}",
        "package com.thealgorithms.conversions;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\npublic class DecimalToAnyBaseTest {\n    @Test\n    public void convertToAnyBaseTest() {\n        assertEquals(\"10\", DecimalToAnyBase.convertToAnyBase(10, 2));\n        assertEquals(\"3A\", DecimalToAnyBase.convertToAnyBase(38, 16));\n        assertEquals(\"575\", DecimalToAnyBase.convertToAnyBase(95, 7));\n    }\n}",
        "@Test\npublic void convertToAnyBaseTest() {\n    assertEquals(\"101\", DecimalToAnyBase.convertToAnyBase(5, 2));\n    assertEquals(\"1234\", DecimalToAnyBase.convertToAnyBase(9876, 10));\n}"
    ]
}