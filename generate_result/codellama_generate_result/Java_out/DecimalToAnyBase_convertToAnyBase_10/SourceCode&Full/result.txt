Source code: 


public static String convertToAnyBase(int inp, int base) {
    ArrayList<Character> charArr = new ArrayList<>();

    while (inp > 0) {
        charArr.add(reVal(inp % base));
        inp /= base;
    }

    StringBuilder str = new StringBuilder(charArr.size());

    for (Character ch : charArr) {
        str.append(ch);
    }

    return str.reverse().toString();
}



No.1 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        int input = 1234;
        int base = 2;
        String expectedOutput = "10011010";
        
        assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(input, base));
    }
}


No.2 generated result --------------------------

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        assertEquals("10", DecimalToAnyBase.convertToAnyBase(10, 2));
        assertEquals("16", DecimalToAnyBase.convertToAnyBase(16, 8));
        assertEquals("37", DecimalToAnyBase.convertToAnyBase(37, 10));
        assertEquals("255", DecimalToAnyBase.convertToAnyBase(255, 16));
        
        // Negative values should throw an exception
        assertThrows(IllegalArgumentException.class, () -> {
            DecimalToAnyBase.convertToAnyBase(-10, 2);
        });
    }
}


No.3 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        assertEquals("100", DecimalToAnyBase.convertToAnyBase(100, 2));
        assertEquals("110", DecimalToAnyBase.convertToAnyBase(6, 3));
        assertEquals("Z", DecimalToAnyBase.convertToAnyBase(25, 36));
    }
}


No.4 generated result --------------------------


@Test
public void convertToAnyBaseTest() {
    int decInput = 24;
    int base = 10;
    String expectedOutput = "24";
    assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(decInput, base));
}


No.5 generated result --------------------------


package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        assertEquals("10", DecimalToAnyBase.convertToAnyBase(10, 2));
        assertEquals("A", DecimalToAnyBase.convertToAnyBase(10, 16));
        assertEquals("-10", DecimalToAnyBase.convertToAnyBase(-10, 2));
    }
}


No.6 generated result --------------------------


import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        int input = 123;
        int base = 2;
        String expected = "1111011";
        assertEquals(expected, DecimalToAnyBase.convertToAnyBase(input, base));
    }
}



No.7 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int input = 123456; // Decimal input to be converted
    int base = 2; // Base in which we want to convert the decimal
    String expectedOutput = "11110101"; // Expected output for the given input and base
    String actualOutput = convertToAnyBase(input, base);
    assertEquals(expectedOutput, actualOutput);
}


No.8 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        // Test case 1: input = 5, base = 2
        int input = 5;
        int base = 2;
        String expectedOutput = "0b101";
        assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(input, base));
        
        // Test case 2: input = 16, base = 8
        input = 16;
        base = 8;
        expectedOutput = "0b20";
        assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(input, base));
        
        // Test case 3: input = 50, base = 16
        input = 50;
        base = 16;
        expectedOutput = "0b28";
        assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(input, base));
    }
}


No.9 generated result --------------------------

package com.thealgorithms.conversions;
import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;
public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        assertEquals("10", DecimalToAnyBase.convertToAnyBase(10, 2));
        assertEquals("3A", DecimalToAnyBase.convertToAnyBase(38, 16));
        assertEquals("575", DecimalToAnyBase.convertToAnyBase(95, 7));
    }
}


No.10 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    assertEquals("101", DecimalToAnyBase.convertToAnyBase(5, 2));
    assertEquals("1234", DecimalToAnyBase.convertToAnyBase(9876, 10));
}


