Source code: 


public static String convertToAnyBase(int inp, int base) {
    ArrayList<Character> charArr = new ArrayList<>();

    while (inp > 0) {
        charArr.add(reVal(inp % base));
        inp /= base;
    }

    StringBuilder str = new StringBuilder(charArr.size());

    for (Character ch : charArr) {
        str.append(ch);
    }

    return str.reverse().toString();
}



No.1 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        // Test case 1: Convert decimal 27 to binary (base 2)
        assertEquals("10111", DecimalToAnyBase.convertToAnyBase(27, 2));

        // Test case 2: Convert decimal 42 to hexadecimal (base 16)
        assertEquals("2A", DecimalToAnyBase.convertToAnyBase(42, 16));

        // Test case 3: Convert decimal -200 to octal (base 8)
        assertEquals("-256", DecimalToAnyBase.convertToAnyBase(-200, 8));
    }
}


No.2 generated result --------------------------


package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        assertEquals("123456", DecimalToAnyBase.convertToAnyBase(123456, 10));
        assertEquals("abcdef", DecimalToAnyBase.convertToAnyBase(123456, 16));
        assertEquals("-abcd", DecimalToAnyBase.convertToAnyBase(-1234, 8));
    }
}


No.3 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        int inp = 10; // input value
        int base = 2; // output base
        
        String actualResult = convertToAnyBase(inp, base);
        String expectedResult = "1010"; // the expected result for this test case
        
        assertEquals(expectedResult, actualResult);
    }
}


No.4 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        int[] inputs = {10, 20, 30};
        int[] bases = {2, 8, 16};
        
        for (int input : inputs) {
            for (int base : bases) {
                assertEquals(convertToAnyBase(input, base), convertToAnyBase(input, base));
            }
        }
    }
}


No.5 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        int inp = 10;
        int base = 2;
        String expectedOutput = "1010";
        assertEquals(expectedOutput, DecimalToAnyBase.convertToAnyBase(inp, base));
    }
}


No.6 generated result --------------------------


package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        assertEquals("101", DecimalToAnyBase.convertToAnyBase(5, 2));
        assertEquals("101", DecimalToAnyBase.convertToAnyBase(9, 2));
        assertEquals("101", DecimalToAnyBase.convertToAnyBase(17, 2));
    }
}


No.7 generated result --------------------------


public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        // Test case 1: input = 0, base = 2
        assertEquals("0", DecimalToAnyBase.convertToAnyBase(0, 2));
        
        // Test case 2: input = 7, base = 8
        assertEquals("7", DecimalToAnyBase.convertToAnyBase(7, 8));
        
        // Test case 3: input = 15, base = 16
        assertEquals("F", DecimalToAnyBase.convertToAnyBase(15, 16));
    }
}


No.8 generated result --------------------------


@Test
public void convertToAnyBaseTest() {
    int inp = 25; // decimal input
    int base = 2; // binary output
    String expected = "11001"; // expected output

    String actual = DecimalToAnyBase.convertToAnyBase(inp, base);

    assertEquals(expected, actual);
}


No.9 generated result --------------------------


package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        assertEquals("10", DecimalToAnyBase.convertToAnyBase(10, 2));
        assertEquals("11", DecimalToAnyBase.convertToAnyBase(11, 2));
        assertEquals("1111", DecimalToAnyBase.convertToAnyBase(15, 4));
    }
}


No.10 generated result --------------------------


package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToAnyBaseTest {
    @Test
    public void convertToAnyBaseTest() {
        assertEquals("1", DecimalToAnyBase.convertToAnyBase(1, 2)); // test for base = 2
        assertEquals("2", DecimalToAnyBase.convertToAnyBase(2, 3)); // test for base = 3
        assertEquals("5", DecimalToAnyBase.convertToAnyBase(5, 4)); // test for base = 4
    }
}


