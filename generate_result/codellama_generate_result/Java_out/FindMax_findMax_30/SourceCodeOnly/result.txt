Source code: 


public static int findMax(final int[] array) {
    int n = array.length;
    if (n == 0) {
        throw new IllegalArgumentException("Array must be non-empty.");
    }
    int max = array[0];
    for (int i = 1; i < n; i++) {
        if (array[i] > max) {
            max = array[i];
        }
    }
    return max;
}



No.1 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        int[] array = new int[5];
        array[0] = 1;
        array[1] = 2;
        array[2] = 3;
        array[3] = 4;
        array[4] = 5;
        
        assertEquals(5, findMax(array));
    }
}


No.2 generated result --------------------------


@Test
public void findMaxTest() {
    int[] array = new int[]{1, 2, 3, 4};
    int expected = 4;
    assertEquals(expected, FindMax.findMax(array));
}


No.3 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        int[] array = new int[] { 1, 2, 3, 4, 5 };
        assertEquals(5, FindMax.findMax(array));
        
        array = new int[] { -1, 0, 1, 2, 3, 4, 5 };
        assertEquals(5, FindMax.findMax(array));
    }
}


No.4 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        int[] array = new int[]{1, 2, 3, 4, 5};
        assertEquals(FindMax.findMax(array), 5);
        
        array = new int[]{5, 4, 3, 2, 1};
        assertEquals(FindMax.findMax(array), 5);
        
        array = new int[]{1, 1, 1, 1, 1};
        assertEquals(FindMax.findMax(array), 1);
        
        array = new int[]{};
        assertThrows(IllegalArgumentException.class, () -> FindMax.findMax(array));
    }
}


No.5 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        int[] array = new int[]{1, 2, 3, 4};
        assertEquals(4, findMax(array));
        
        array = new int[]{5, 6, 7, 8};
        assertEquals(8, findMax(array));
    }
}


No.6 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        int[] array = {1, 2, 3};
        assertEquals(findMax(array), 3);
        
        array = new int[]{5, 6, 7, 8, 9};
        assertEquals(findMax(array), 9);
    }
}


No.7 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        int[] array = new int[] {1, 2, 3};
        assertEquals(3, FindMax.findMax(array));
        
        array = new int[] {-1000, -900, -800};
        assertEquals(-1000, FindMax.findMax(array));
        
        array = new int[] {Integer.MAX_VALUE, Integer.MIN_VALUE};
        assertEquals(Integer.MAX_VALUE, FindMax.findMax(array));
    }
}


No.8 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        int[] array = new int[] {1, 2, 3, 4};
        assertEquals(findMax(array), 4);
    }
}


No.9 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        // Test with a non-empty array
        int[] array = new int[]{1, 2, 3, 4, 5};
        assertEquals(5, FindMax.findMax(array));

        // Test with an empty array
        array = new int[0];
        assertThrows(IllegalArgumentException.class, () -> {
            FindMax.findMax(array);
        });
    }
}


No.10 generated result --------------------------


package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        int[] array = new int[]{1, 2, 3};
        assertEquals(3, FindMax.findMax(array));
    }
}


