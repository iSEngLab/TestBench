Source code: 

// Determinant calculator
public static int determinant(int[][] a, int n) {
    int det = 0, sign = 1, p = 0, q = 0;

    if (n == 1) {
        det = a[0][0];
    } else {
        int[][] b = new int[n - 1][n - 1];
        for (int x = 0; x < n; x++) {
            p = 0;
            q = 0;
            for (int i = 1; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (j != x) {
                        b[p][q++] = a[i][j];
                        if (q % (n - 1) == 0) {
                            p++;
                            q = 0;
                        }
                    }
                }
            }
            det = det + a[0][x] * determinant(b, n - 1) * sign;
            sign = -sign;
        }
    }
    return det;
}



No.1 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HillCipherTest {
    @Test
    public void determinantTest() {
        int[][] keyMatrix = {{1, 2}, {3, 4}};
        assertEquals(0, HillCipher.determinant(keyMatrix, 2));

        keyMatrix = new int[3][3];
        keyMatrix[0][0] = 1;
        keyMatrix[0][1] = 2;
        keyMatrix[0][2] = 3;
        keyMatrix[1][0] = 4;
        keyMatrix[1][1] = 5;
        keyMatrix[1][2] = 6;
        keyMatrix[2][0] = 7;
        keyMatrix[2][1] = 8;
        keyMatrix[2][2] = 9;
        assertEquals(0, HillCipher.determinant(keyMatrix, 3));
    }
}


No.2 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HillCipherTest {
    @Test
    public void determinantTest() {
        int[][] matrix = new int[2][2];
        matrix[0][0] = 1;
        matrix[0][1] = 2;
        matrix[1][0] = 3;
        matrix[1][1] = 4;
        
        assertEquals(5, determinant(matrix, 2));
    }
}


No.3 generated result --------------------------


@Test
public void determinantTest() {
    int[][] a = {{1, 2}, {3, 4}};
    assertEquals(5, determinant(a, 2));
    
    a = new int[3][3];
    a[0][0] = 1;
    a[0][1] = 2;
    a[0][2] = 3;
    a[1][0] = 4;
    a[1][1] = 5;
    a[1][2] = 6;
    a[2][0] = 7;
    a[2][1] = 8;
    a[2][2] = 9;
    
    assertEquals(0, determinant(a, 3));
}



No.4 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HillCipherTest {
    @Test
    public void determinantTest() {
        int[][] keyMatrix = {{1, 2}, {3, 4}};
        int n = 2;
        assertEquals(5, determinant(keyMatrix, n));
    }
}


No.5 generated result --------------------------

import static org.junit.jupiter.api.Assertions.*;

@Test
public void determinantTest() {
    int[][] a = new int[2][2];
    a[0][0] = 1;
    a[0][1] = 2;
    a[1][0] = 3;
    a[1][1] = 4;
    
    assertEquals(determinant(a, 2), -2);
}


No.6 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HillCipherTest {
    @Test
    public void determinantTest() {
        int[][] a = new int[3][3];
        a[0] = new int[]{1, 2, 3};
        a[1] = new int[]{4, 5, 6};
        a[2] = new int[]{7, 8, 9};
        assertEquals(0, HillCipher.determinant(a, 3));
    }
}


No.7 generated result --------------------------

package com.thealgorithms.ciphers;
import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;
public class HillCipherTest {
    @Test
    public void determinantTest() {
        int[][] matrix = new int[][]{{1, 2}, {3, 4}};
        assertEquals(5, determinant(matrix, 2));
     }
}


No.8 generated result --------------------------


@Test
public void determinantTest() {
    int[][] a = new int[3][3];
    a[0][0] = 1; a[0][1] = 2; a[0][2] = 3;
    a[1][0] = 4; a[1][1] = 5; a[1][2] = 6;
    a[2][0] = 7; a[2][1] = 8; a[2][2] = 9;
    
    int n = 3;
    
    assertEquals(9, determinant(a, n));
}


No.9 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HillCipherTest {
    @Test
    public void determinantTest() {
        int[][] a = new int[2][2];
        a[0][0] = 1;
        a[0][1] = 2;
        a[1][0] = 3;
        a[1][1] = 4;
        assertEquals(determinant(a, 2), -2);
    }
}


No.10 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HillCipherTest {
    @Test
    public void determinantTest() {
        // Test case 1: Determinant of a 2x2 matrix
        int[][] matrix = {{1, 0}, {0, 1}};
        assertEquals(1, HillCipher.determinant(matrix, 2));
        
        // Test case 2: Determinant of a 3x3 matrix
        matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
        assertEquals(-1, HillCipher.determinant(matrix, 3));
        
        // Test case 3: Determinant of a 4x4 matrix
        matrix = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}, {13, 14, 15, 16}};
        assertEquals(-420, HillCipher.determinant(matrix, 4));
    }
}


