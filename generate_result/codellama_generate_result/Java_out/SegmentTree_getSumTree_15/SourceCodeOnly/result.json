{
    "project_name": "Java",
    "file_name": "SegmentTree.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/datastructures/trees/SegmentTree.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.datastructures.trees",
    "docstring": null,
    "source_code": "/* A function to get the sum of the elements from index l to index r. This will be called\n * internally*/\nprivate int getSumTree(int start, int end, int q_start, int q_end, int seg_index) {\n    if (q_start <= start && q_end >= end) {\n        return this.seg_t[seg_index];\n    }\n\n    if (q_start > end || q_end < start) {\n        return 0;\n    }\n\n    int mid = start + (end - start) / 2;\n    return (getSumTree(start, mid, q_start, q_end, seg_index * 2 + 1) + getSumTree(mid + 1, end, q_start, q_end, seg_index * 2 + 2));\n}\n",
    "class_name": "SegmentTree",
    "method_name": "getSumTree",
    "arguments": [
        "int start",
        "int end",
        "int q_start",
        "int q_end",
        "int seg_index"
    ],
    "generate_test": [
        "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        int[] arr = new int[] {1, 2, 3, 4, 5};\n        SegmentTree segTree = new SegmentTree(arr);\n        assertEquals(segTree.getSumTree(0, 4, 0, 4, 0), 15);\n    }\n}",
        "package com.thealgorithms.datastructures.trees;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\npublic class SegmentTreeTest {\n    @Test public void getSumTreeTest() {\n        int[] arr = new int[]{1, 2, 3, 4, 5};\n        int start = 0;\n        int end = arr.length - 1;\n        int q_start = 0;\n        int q_end = arr.length - 1;\n        SegmentTree tree = new SegmentTree(arr);\n        assertEquals(tree.getSumTree(start, end, q_start, q_end), 15);\n    }\n}",
        "\npackage com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        SegmentTree segmentTree = new SegmentTree(new int[] {1, 2, 3});\n        assertEquals(6, segmentTree.getSumTree(0, 2, 0, 2, 0));\n    }\n}",
        "@Test\npublic void getSumTreeTest() {\n    // Set up the segment tree with an array of integers\n    int[] arr = new int[] {1, 2, 3, 4, 5};\n    SegmentTree st = new SegmentTree(arr);\n\n    // Test case 1: test that the sum of the elements from index l to index r is correct\n    assertEquals(15, st.getSumTree(0, arr.length - 1));\n\n    // Test case 2: test that the sum of the elements from index l to index r is correct when l < r\n    assertEquals(6, st.getSumTree(0, 1));\n\n    // Test case 3: test that the sum of the elements from index l to index r is correct when l > r\n    assertEquals(0, st.getSumTree(2, 1));\n}",
        "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        int[] input = new int[] {1, 2, 3, 4, 5, 6};\n        int start = 0;\n        int end = input.length - 1;\n        SegmentTree seg_tree = new SegmentTree(input);\n        assertEquals(seg_tree.getSumTree(start, end), 21);\n    }\n}",
        "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        // Create an instance of the SegmentTree class\n        SegmentTree segmentTree = new SegmentTree(5);\n        \n        // Populate the segment tree with some data\n        int[] data = {1, 2, 3, 4, 5};\n        for (int i = 0; i < data.length; i++) {\n            segmentTree.insert(data[i]);\n        }\n        \n        // Test the getSumTree method with a range of indices\n        int start = 1;\n        int end = 3;\n        int q_start = 2;\n        int q_end = 4;\n        assertEquals(segmentTree.getSumTree(start, end, q_start, q_end), 9);\n    }\n}",
        "\npackage com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    private SegmentTree tree = new SegmentTree();\n\n    @Test\n    public void getSumTreeTest() {\n        // Test case 1:\n        int[] arr = {1, 2, 3, 4};\n        int start = 0;\n        int end = 3;\n        int q_start = 0;\n        int q_end = 3;\n        int seg_index = 0;\n\n        assertEquals(tree.getSumTree(start, end, q_start, q_end, seg_index), 10);\n    }\n\n    @Test\n    public void getSumTreeTest2() {\n        // Test case 2:\n        int[] arr = {1, 2, 3, 4};\n        int start = 0;\n        int end = 3;\n        int q_start = 1;\n        int q_end = 2;\n        int seg_index = 0;\n\n        assertEquals(tree.getSumTree(start, end, q_start, q_end, seg_index), 5);\n    }\n\n    @Test\n    public void getSumTreeTest3() {\n        // Test case 3:\n        int[] arr = {1, 2, 3, 4};\n        int start = 0;\n        int end = 3;\n        int q_start = 2;\n        int q_end = 3;\n        int seg_index = 0;\n\n        assertEquals(tree.getSumTree(start, end, q_start, q_end, seg_index), 4);\n    }\n}\n",
        "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        int[] arr = new int[]{1, 2, 3, 4, 5};\n        SegmentTree segmentTree = new SegmentTree(arr);\n        assertEquals(segmentTree.getSumTree(0, 4, 0, 4, 0), 15);\n    }\n}",
        "package com.thealgorithms.datastructures.trees;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        // Test case 1: Test the sum of a single element in the array\n        int[] arr = new int[]{1};\n        SegmentTree tree = new SegmentTree(arr);\n        assertEquals(1, tree.getSumTree(0, 0, 0, 0));\n\n        // Test case 2: Test the sum of a range of elements in the array\n        arr = new int[]{1, 2, 3};\n        tree = new SegmentTree(arr);\n        assertEquals(6, tree.getSumTree(0, 2, 0, 2));\n\n        // Test case 3: Test the sum of a range of elements in the array when there are duplicates\n        arr = new int[]{1, 1, 1};\n        tree = new SegmentTree(arr);\n        assertEquals(3, tree.getSumTree(0, 2, 0, 2));\n\n        // Test case 4: Test the sum of a range of elements in the array when there are no duplicates\n        arr = new int[]{1, 2, 3};\n        tree = new SegmentTree(arr);\n        assertEquals(6, tree.getSumTree(0, 2, 0, 2));\n    }\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SegmentTreeTest {\n    @Test\n    public void getSumTreeTest() {\n        // Create a new instance of the SegmentTree class\n        SegmentTree segmentTree = new SegmentTree();\n        \n        // Define some test data\n        int[] arr = {1, 2, 3, 4, 5};\n        int startIndex = 0;\n        int endIndex = 4;\n        int queryStartIndex = 1;\n        int queryEndIndex = 3;\n        \n        // Call the getSumTree method with the test data\n        int sum = segmentTree.getSumTree(arr, startIndex, endIndex, queryStartIndex, queryEndIndex);\n        \n        // Check that the result is correct\n        assertEquals(10, sum);\n    }\n}"
    ]
}