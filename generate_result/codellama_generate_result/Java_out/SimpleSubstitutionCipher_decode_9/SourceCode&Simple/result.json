{
    "project_name": "Java",
    "file_name": "SimpleSubstitutionCipher.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/ciphers/SimpleSubstitutionCipher.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.ciphers",
    "docstring": "/**\n     * Decrypt message by replacing each element with its opposite character in\n     * cipher.\n     *\n     * @return message\n     */",
    "source_code": "\npublic static String decode(String encryptedMessage, String cipherSmall) {\n    StringBuilder decoded = new StringBuilder();\n\n    Map<Character, Character> cipherMap = new HashMap<>();\n\n    char beginSmallLetter = 'a';\n    char beginCapitalLetter = 'A';\n\n    cipherSmall = cipherSmall.toLowerCase();\n    String cipherCapital = cipherSmall.toUpperCase();\n\n    for (int i = 0; i < cipherSmall.length(); i++) {\n        cipherMap.put(cipherSmall.charAt(i), beginSmallLetter++);\n        cipherMap.put(cipherCapital.charAt(i), beginCapitalLetter++);\n    }\n\n    for (int i = 0; i < encryptedMessage.length(); i++) {\n        if (Character.isAlphabetic(encryptedMessage.charAt(i))) {\n            decoded.append(cipherMap.get(encryptedMessage.charAt(i)));\n        } else {\n            decoded.append(encryptedMessage.charAt(i));\n        }\n    }\n\n    return decoded.toString();\n}\n",
    "class_name": "SimpleSubstitutionCipher",
    "method_name": "decode",
    "arguments": [
        "String encryptedMessage",
        "String cipherSmall"
    ],
    "generate_test": [
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String message = \"Hello World\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        String expectedDecodedMessage = \"Ifmmp Xpsme\";\n\n        assertEquals(expectedDecodedMessage, SimpleSubstitutionCipher.decode(message, cipherSmall));\n    }\n}",
        "\npackage com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        // Arrange\n        String message = \"Hello World\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        \n        // Act\n        String actual = SimpleSubstitutionCipher.decode(message, cipherSmall);\n        \n        // Assert\n        assertEquals(\"Hello World\", actual);\n    }\n}",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        // Arrange\n        String message = \"Hello World!\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        String cipherCapital = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        \n        // Act\n        String decodedMessage = SimpleSubstitutionCipher.decode(message, cipherSmall);\n        \n        // Assert\n        assertEquals(\"Hello World!\", decodedMessage);\n    }\n}",
        "@Test\npublic void decodeTest() {\n    String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n    String encryptedMessage = \"Uryyb jbeyq\";\n    String decodedMessage = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n    assertEquals(\"Hello World\", decodedMessage);\n}",
        "\npackage com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        SimpleSubstitutionCipher cipher = new SimpleSubstitutionCipher();\n        assertEquals(\"hello world\", cipher.decode(encryptedMessage, cipherSmall));\n    }\n}\n",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"Hello World\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        String decoded = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n        assertEquals(\"ebiilb\", decoded);\n    }\n}",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        // Arrange\n        String encryptedMessage = \"Xlqx Xwmhv\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        SimpleSubstitutionCipher ssc = new SimpleSubstitutionCipher();\n\n        // Act\n        String actualResult = ssc.decode(encryptedMessage, cipherSmall);\n\n        // Assert\n        assertEquals(\"Hello World\", actualResult);\n    }\n}",
        "\n@Test\npublic void decodeTest() {\n    String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n    String encryptedMessage = \"Hello, World!\";\n    String expectedDecodedMessage = \"Ifmmp, Xpsme!\";\n\n    assertEquals(expectedDecodedMessage, SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));\n}",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"abcdefghijklmnopqrstuvwxyz\";\n        String cipherSmall = \"zyxwvutsrqponmlkjihgfedcba\";\n        SimpleSubstitutionCipher cipher = new SimpleSubstitutionCipher();\n        String decodedMessage = cipher.decode(encryptedMessage, cipherSmall);\n        assertEquals(\"abcdefghijklmnopqrstuvwxyz\", decodedMessage);\n    }\n}",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String decoded = SimpleSubstitutionCipher.decode(\"aBcD\", \"abcd\");\n        assertEquals(\"ABCD\", decoded);\n    }\n}"
    ]
}