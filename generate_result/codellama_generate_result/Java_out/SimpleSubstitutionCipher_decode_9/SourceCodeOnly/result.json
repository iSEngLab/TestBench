{
    "project_name": "Java",
    "file_name": "SimpleSubstitutionCipher.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/ciphers/SimpleSubstitutionCipher.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.ciphers",
    "docstring": "/**\n     * Decrypt message by replacing each element with its opposite character in\n     * cipher.\n     *\n     * @return message\n     */",
    "source_code": "\npublic static String decode(String encryptedMessage, String cipherSmall) {\n    StringBuilder decoded = new StringBuilder();\n\n    Map<Character, Character> cipherMap = new HashMap<>();\n\n    char beginSmallLetter = 'a';\n    char beginCapitalLetter = 'A';\n\n    cipherSmall = cipherSmall.toLowerCase();\n    String cipherCapital = cipherSmall.toUpperCase();\n\n    for (int i = 0; i < cipherSmall.length(); i++) {\n        cipherMap.put(cipherSmall.charAt(i), beginSmallLetter++);\n        cipherMap.put(cipherCapital.charAt(i), beginCapitalLetter++);\n    }\n\n    for (int i = 0; i < encryptedMessage.length(); i++) {\n        if (Character.isAlphabetic(encryptedMessage.charAt(i))) {\n            decoded.append(cipherMap.get(encryptedMessage.charAt(i)));\n        } else {\n            decoded.append(encryptedMessage.charAt(i));\n        }\n    }\n\n    return decoded.toString();\n}\n",
    "class_name": "SimpleSubstitutionCipher",
    "method_name": "decode",
    "arguments": [
        "String encryptedMessage",
        "String cipherSmall"
    ],
    "generate_test": [
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String cipherText = \"Hello World!\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        String decoded = SimpleSubstitutionCipher.decode(cipherText, cipherSmall);\n        assertEquals(\"Hello World!\", decoded);\n    }\n}",
        "\npackage com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String expectedDecodedMessage = \"hello world\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        String encryptedMessage = \"pqrstuvwxyzaabcdefghijklmno\";\n        \n        assertEquals(expectedDecodedMessage, SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));\n    }\n}\n",
        "\nimport com.thealgorithms.ciphers.SimpleSubstitutionCipher;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"Hello World\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        String decoded = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n        assertEquals(\"hifmmp xpsme\", decoded);\n    }\n}",
        "\npackage com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String encodedMessage = \"Lbh penpxrq gur pbqr!\";\n        String expectedDecodedMessage = \"Hello, World!\";\n        assertEquals(expectedDecodedMessage, SimpleSubstitutionCipher.decode(encodedMessage, \"abcdefghijklmnopqrstuvwxyz\"));\n    }\n}",
        "@Test\npublic void decodeTest() {\n    String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n    String encryptedMessage = \"pqrstuvwxyzabcdefghijklmno\";\n    String decodedMessage = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n    assertEquals(\"The quick brown fox jumps over the lazy dog\", decodedMessage);\n}",
        "import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String expected = \"hello world\";\n        String actual = SimpleSubstitutionCipher.decode(\"khoor zruog\", \"abcdefghijklmnopqrstuvwxyz\");\n        assertEquals(expected, actual);\n    }\n}",
        "\npackage com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"Hello, World!\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        String cipherCapital = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        \n        Map<Character, Character> cipherMap = new HashMap<>();\n        \n        char beginSmallLetter = 'a';\n        char beginCapitalLetter = 'A';\n        \n        for (int i = 0; i < cipherSmall.length(); i++) {\n            cipherMap.put(cipherSmall.charAt(i), beginSmallLetter++);\n            cipherMap.put(cipherCapital.charAt(i), beginCapitalLetter++);\n        }\n        \n        String decoded = SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall);\n        \n        assertEquals(\"Ifmmp, Xpsme!\", decoded);\n    }\n}",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        String encryptedMessage = \"qwertyuiopasdfghjklzxcvbnm\";\n        assertEquals(SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall), \"qwertyuiopasdfghjklzxcvbnm\");\n    }\n}",
        "@Test\npublic void decodeTest() {\n    String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n    String encryptedMessage = \"Hello World!\";\n    String expectedDecodedMessage = \"Ifmmp Xpsme!\";\n\n    assertEquals(expectedDecodedMessage, SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void decodeTest() {\n        String encryptedMessage = \"Hello World\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        assertEquals(\"Khoor Zruog\", SimpleSubstitutionCipher.decode(encryptedMessage, cipherSmall));\n    }\n}"
    ]
}