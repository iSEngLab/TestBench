{
    "project_name": "Java",
    "file_name": "SimpleSubstitutionCipher.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/ciphers/SimpleSubstitutionCipher.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.ciphers",
    "docstring": "/**\n     * Encrypt text by replacing each element with its opposite character.\n     *\n     * @return Encrypted message\n     */",
    "source_code": "\npublic static String encode(String message, String cipherSmall) {\n    StringBuilder encoded = new StringBuilder();\n\n    // This map is used to encode\n    Map<Character, Character> cipherMap = new HashMap<>();\n\n    char beginSmallLetter = 'a';\n    char beginCapitalLetter = 'A';\n\n    cipherSmall = cipherSmall.toLowerCase();\n    String cipherCapital = cipherSmall.toUpperCase();\n\n    // To handle Small and Capital letters\n    for (int i = 0; i < cipherSmall.length(); i++) {\n        cipherMap.put(beginSmallLetter++, cipherSmall.charAt(i));\n        cipherMap.put(beginCapitalLetter++, cipherCapital.charAt(i));\n    }\n\n    for (int i = 0; i < message.length(); i++) {\n        if (Character.isAlphabetic(message.charAt(i))) {\n            encoded.append(cipherMap.get(message.charAt(i)));\n        } else {\n            encoded.append(message.charAt(i));\n        }\n    }\n\n    return encoded.toString();\n}\n",
    "class_name": "SimpleSubstitutionCipher",
    "method_name": "encode",
    "arguments": [
        "String message",
        "String cipherSmall"
    ],
    "generate_test": [
        "@Test\npublic void encodeTest() {\n    String message = \"Hello, World!\";\n    String cipherSmall = \"xyzabcdefghijklmnopqrstuvwxyzyxwvutsrqponmlkjihgfedcba\";\n    String expectedEncodedMessage = \"Khoor, Zruog!\";\n\n    assertEquals(expectedEncodedMessage, SimpleSubstitutionCipher.encode(message, cipherSmall));\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String message = \"Hello World!\";\n        String cipherSmall = \"abcdedfghijklmnopqrstuvwxyz\";\n        String expectedEncodedMessage = \"Uryyb Jbeyq!\";\n\n        SimpleSubstitutionCipher simpleSubstitutionCipher = new SimpleSubstitutionCipher();\n        String actualEncodedMessage = simpleSubstitutionCipher.encode(message, cipherSmall);\n\n        assertEquals(expectedEncodedMessage, actualEncodedMessage);\n    }\n}",
        "@Test\npublic void encodeTest() {\n    String plaintext = \"Hello World!\";\n    String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n    String cipherCapital = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    Map<Character, Character> cipherMap = new HashMap<>();\n    \n    for (int i = 0; i < cipherSmall.length(); i++) {\n        cipherMap.put(cipherSmall.charAt(i), beginSmallLetter++);\n        cipherMap.put(cipherCapital.charAt(i), beginCapitalLetter++);\n    }\n    \n    StringBuilder encoded = new StringBuilder();\n    for (int i = 0; i < plaintext.length(); i++) {\n        if (Character.isAlphabetic(plaintext.charAt(i))) {\n            encoded.append(cipherMap.get(plaintext.charAt(i)));\n        } else {\n            encoded.append(plaintext.charAt(i));\n        }\n    }\n    \n    assertEquals(\"Nczbxhz gsvf!\", encoded.toString());\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String message = \"Hello World!\";\n        String cipherSmall = \"abcd\";\n        \n        // Expected result: \"Elnv Dkzb!\"\n        String expectedEncodedMessage = SimpleSubstitutionCipher.encode(message, cipherSmall);\n        \n        assertEquals(expectedEncodedMessage, \"Elnv Dkzb!\");\n    }\n}",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String plaintext = \"hello\";\n        String cipherKey = \"1234567890\"; // 10-digit key\n\n        String encodedMessage = SimpleSubstitutionCipher.encode(plaintext, cipherKey);\n        assertEquals(\"khoor\", encodedMessage); // Check that the encoded message is correct\n    }\n}",
        "\n@Test\npublic void encodeTest() {\n    String message = \"Hello World!\";\n    String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n    assertEquals(\"Hellow Orld!\", SimpleSubstitutionCipher.encode(message, cipherSmall));\n}",
        "@Test\npublic void encodeTest() {\n    String message = \"hello world\";\n    String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n    String expectedEncodedMessage = \"hkjnmdwvxfgqeyuiptcbzrlan\";\n    \n    SimpleSubstitutionCipher cipher = new SimpleSubstitutionCipher();\n    String actualEncodedMessage = cipher.encode(message, cipherSmall);\n    \n    assertEquals(expectedEncodedMessage, actualEncodedMessage);\n}",
        "@Test\npublic void encodeTest() {\n    String message = \"hello\";\n    String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n    String expectedOutput = \"ifmmpxpsme\"; // this is the expected output for \"hello\" with the given cipher\n    \n    SimpleSubstitutionCipher cipher = new SimpleSubstitutionCipher();\n    String actualOutput = cipher.encode(message, cipherSmall);\n    \n    assertEquals(expectedOutput, actualOutput);\n}",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String input = \"hello\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        String expectedOutput = \"ifmmp\"; // calculated manually using the cipher alphabet\n        \n        SimpleSubstitutionCipher instance = new SimpleSubstitutionCipher();\n        String actualOutput = instance.encode(input, cipherSmall);\n        \n        assertEquals(expectedOutput, actualOutput);\n    }\n}",
        "package com.thealgorithms.ciphers;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SimpleSubstitutionCipherTest {\n    @Test\n    public void encodeTest() {\n        String message = \"Hello World!\";\n        String cipherSmall = \"abcdefghijklmnopqrstuvwxyz\";\n        String encoded = SimpleSubstitutionCipher.encode(message, cipherSmall);\n        \n        assertEquals(\"Ifmmp Xpsme!\", encoded);\n    }\n}"
    ]
}