Source code: 


public static String encode(String message, String cipherSmall) {
    StringBuilder encoded = new StringBuilder();

    // This map is used to encode
    Map<Character, Character> cipherMap = new HashMap<>();

    char beginSmallLetter = 'a';
    char beginCapitalLetter = 'A';

    cipherSmall = cipherSmall.toLowerCase();
    String cipherCapital = cipherSmall.toUpperCase();

    // To handle Small and Capital letters
    for (int i = 0; i < cipherSmall.length(); i++) {
        cipherMap.put(beginSmallLetter++, cipherSmall.charAt(i));
        cipherMap.put(beginCapitalLetter++, cipherCapital.charAt(i));
    }

    for (int i = 0; i < message.length(); i++) {
        if (Character.isAlphabetic(message.charAt(i))) {
            encoded.append(cipherMap.get(message.charAt(i)));
        } else {
            encoded.append(message.charAt(i));
        }
    }

    return encoded.toString();
}



No.1 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SimpleSubstitutionCipherTest {
    @Test
    public void encodeTest() {
        String message = "hello world";
        String cipherSmall = "abcdefghijklmnopqrstuvwxyz";
        String expectedOutput = "ifmmp xpsme"; // The encoded string

        assertEquals(expectedOutput, SimpleSubstitutionCipher.encode(message, cipherSmall));
    }
}


No.2 generated result --------------------------


package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SimpleSubstitutionCipherTest {
    @Test
    public void encodeTest() {
        String message = "hello world";
        String cipherSmall = "abcdefghijklmnopqrstuvwxyz";
        
        assertEquals(SimpleSubstitutionCipher.encode(message, cipherSmall), "ifmmp xpsme");
    }
}


No.3 generated result --------------------------

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SimpleSubstitutionCipherTest {
    @Test
    public void encodeTest() {
        String message = "hello world";
        String cipherSmall = "abcdefghijklmnopqrstuvwxyz";
        String expectedResult = "hfzlxvwlrqektmjdsbdfc";

        assertEquals(expectedResult, SimpleSubstitutionCipher.encode(message, cipherSmall));
    }
}


No.4 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SimpleSubstitutionCipherTest {
    @Test
    public void encodeTest() {
        String message = "Hello World";
        String cipherSmall = "abcdefghijklmnopqrstuvwxyz";
        String expected = "Ifmmp Xpsme";
        assertEquals(expected, SimpleSubstitutionCipher.encode(message, cipherSmall));
    }
}


No.5 generated result --------------------------

package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SimpleSubstitutionCipherTest {
    @Test
    public void encodeTest() {
        String message = "Hello World!";
        String cipherSmall = "abcdefghijklmnopqrstuvwxyz";
        assertEquals("encode(message, cipherSmall)", "Ifmmp Xpsme!");
        
        String cipherCapital = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        assertEquals("encode(message, cipherCapital)", "IFMMP XPSME!");
    }
}


No.6 generated result --------------------------

@Test
public void encodeTest() {
    String input = "Hello World!";
    String expectedOutput = "Jgnnq Yqtnf!"; // This is the encoded output for "Hello World!" using the cipher "abcdefghijklmnopqrstuvwxyz"
    assertEquals(expectedOutput, SimpleSubstitutionCipher.encode(input, "abcdefghijklmnopqrstuvwxyz"));
}


No.7 generated result --------------------------


package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SimpleSubstitutionCipherTest {
    @Test
    public void encodeTest() {
        String message = "Hello World";
        String cipherSmall = "hello world";
        String expectedOutput = "Hillo Wurld";

        assertEquals(expectedOutput, SimpleSubstitutionCipher.encode(message, cipherSmall));
    }
}


No.8 generated result --------------------------


package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SimpleSubstitutionCipherTest {
    @Test
    public void encodeTest() {
        // Test that the input strings are not null and have the correct length
        assertNotNull(encode("hello", "key"));
        assertEquals(5, encode("hello", "key").length());
        
        // Test that the encoded string is correct for a simple substitution cipher
        String expected = "khoor";
        String actual = encode("hello", "key");
        assertEquals(expected, actual);
    }
}



No.9 generated result --------------------------


package com.thealgorithms.ciphers;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SimpleSubstitutionCipherTest {
    @Test
    public void encodeTest() {
        String message = "Hello World!";
        String cipherSmall = "abcdefghijklmnopqrstuvwxyz";
        assertEquals("Ifmmp Xpsme!", SimpleSubstitutionCipher.encode(message, cipherSmall));
    }
}


No.10 generated result --------------------------


import com.thealgorithms.ciphers.SimpleSubstitutionCipher;

public class SimpleSubstitutionCipherTest {
    @Test
    public void encodeTest() {
        String message = "Hello World";
        String cipherSmall = "abcdefghijklmnopqrstuvwxyz";
        String expectedOutput = "ifmmp xpsme";
        
        assertEquals(expectedOutput, SimpleSubstitutionCipher.encode(message, cipherSmall));
    }
}


