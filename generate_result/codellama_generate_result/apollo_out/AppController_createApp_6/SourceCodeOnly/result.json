{
    "project_name": "apollo",
    "file_name": "AppController.java",
    "relative_path": "apollo/apollo-portal/src/main/java/com/ctrip/framework/apollo/openapi/v1/controller/AppController.java",
    "execute_path": "apollo",
    "package": "com.ctrip.framework.apollo.openapi.v1.controller",
    "docstring": "/**\n   * @see com.ctrip.framework.apollo.portal.controller.AppController#create(AppModel)\n   */",
    "source_code": "\n@Transactional\n@PreAuthorize(value = \"@consumerPermissionValidator.hasCreateApplicationPermission(#request)\")\n@PostMapping(value = \"/apps\")\npublic void createApp(\n    @RequestBody OpenCreateAppDTO req,\n    HttpServletRequest request\n) {\n  if (null == req.getApp()) {\n    throw new BadRequestException(\"App is null\");\n  }\n  final OpenAppDTO app = req.getApp();\n  if (null == app.getAppId()) {\n    throw new BadRequestException(\"AppId is null\");\n  }\n  // create app\n  this.appOpenApiService.createApp(req);\n  if (req.isAssignAppRoleToSelf()) {\n    long consumerId = this.consumerAuthUtil.retrieveConsumerId(request);\n    consumerService.assignAppRoleToConsumer(consumerId, app.getAppId());\n  }\n}\n",
    "class_name": "AppController",
    "method_name": "createApp",
    "arguments": [
        "OpenCreateAppDTO req",
        "HttpServletRequest request"
    ],
    "generate_test": [
        "The response to the instruction would be as follows:\n\npackage com.ctrip.framework.apollo.openapi.v1.controller;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AppControllerTest {\n    @Test\n    public void createAppTest() {\n        OpenCreateAppDTO req = new OpenCreateAppDTO();\n        req.setApp(new OpenAppDTO());\n        req.getApp().setAppId(\"test\");\n        req.setAssignAppRoleToSelf(true);\n        \n        HttpServletRequest request = mock(HttpServletRequest.class);\n        when(request.getHeader(\"Authorization\")).thenReturn(\"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\");\n        \n        AppController controller = new AppController();\n        controller.createApp(req, request);\n        \n        assertEquals(\"test\", req.getApp().getAppId());\n        verify(request).setHeader(\"Authorization\", \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\");\n    }\n}",
        "package com.ctrip.framework.apollo.openapi.v1.controller;\n\nimport org.junit.jupiter.api.*;\nimport static org.mockito.Mockito.*;\n\npublic class AppControllerTest {\n    @Test\n    public void createAppTest() {\n        // Set up mocks and stubs\n        OpenCreateAppDTO req = new OpenCreateAppDTO();\n        req.setApp(new OpenAppDTO());\n        req.getApp().setAppId(\"12345\");\n\n        HttpServletRequest request = mock(HttpServletRequest.class);\n        when(request.getParameter(\"app_id\")).thenReturn(\"12345\");\n\n        AppController appController = new AppController();\n        appController.setAppOpenApiService(mock(AppOpenApiService.class));\n        appController.setConsumerAuthUtil(mock(ConsumerAuthUtil.class));\n        appController.setConsumerService(mock(ConsumerService.class));\n\n        // Test the createApp() method with a null request body\n        OpenCreateAppDTO reqNull = new OpenCreateAppDTO();\n        reqNull.setApp(null);\n        assertThrows(BadRequestException.class, () -> appController.createApp(reqNull));\n\n        // Test the createApp() method with a valid request body and parameters\n        when(appController.getAppOpenApiService().createApp(req)).thenReturn(\"Created\");\n        when(appController.getConsumerAuthUtil().retrieveConsumerId(request)).thenReturn(1234L);\n        when(appController.getConsumerService().assignAppRoleToConsumer(1234L, \"12345\")).thenReturn(\"Assigned\");\n\n        assertEquals(\"Created\", appController.createApp(req));\n    }\n}",
        "\n@Test\npublic void createAppTest() {\n  // Arrange\n  OpenCreateAppDTO req = new OpenCreateAppDTO();\n  HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n\n  // Act\n  appController.createApp(req, request);\n\n  // Assert\n  verify(appOpenApiService, times(1)).createApp(any());\n}",
        "@Test\npublic void createAppTest() {\n    OpenCreateAppDTO req = new OpenCreateAppDTO();\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(request.getMethod()).thenReturn(\"POST\");\n    when(request.getHeader(\"Authorization\")).thenReturn(\"Bearer <token>\");\n    when(consumerAuthUtil.retrieveConsumerId(request)).thenReturn(1L);\n    when(appOpenApiService.createApp(req)).thenReturn(null);\n    when(consumerService.assignAppRoleToConsumer(anyLong(), anyString())).thenReturn(null);\n    \n    appController.createApp(req, request);\n    \n    verify(request, times(1)).getMethod();\n    verify(request, times(1)).getHeader(\"Authorization\");\n    verify(consumerAuthUtil, times(1)).retrieveConsumerId(request);\n    verify(appOpenApiService, times(1)).createApp(req);\n    verify(consumerService, times(1)).assignAppRoleToConsumer(anyLong(), anyString());\n}",
        "package com.ctrip.framework.apollo.openapi.v1.controller;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AppControllerTest {\n    @Test\n    public void createAppTest() {\n        OpenCreateAppDTO req = new OpenCreateAppDTO();\n        req.setApp(new OpenAppDTO());\n        req.getApp().setAppId(\"test_app\");\n        req.setAssignAppRoleToSelf(true);\n        \n        HttpServletRequest request = mock(HttpServletRequest.class);\n        when(request.getParameter(\"consumerId\")).thenReturn(\"123456\");\n        \n        AppController appController = new AppController();\n        appController.createApp(req, request);\n    }\n}",
        "@Test\npublic void createAppTest() {\n  OpenCreateAppDTO req = new OpenCreateAppDTO();\n  HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n  \n  req.setApp(new OpenAppDTO());\n  req.getApp().setAppId(\"app1\");\n  req.setAssignAppRoleToSelf(true);\n  \n  this.mockMvc.perform(post(\"/apps\")\n      .contentType(MediaType.APPLICATION_JSON)\n      .content(asJsonString(req)))\n      .andExpect(status().isOk());\n}",
        "package com.ctrip.framework.apollo.openapi.v1.controller;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AppControllerTest {\n    @Test\n    public void createAppTest() {\n        OpenCreateAppDTO req = new OpenCreateAppDTO();\n        req.setApp(new OpenAppDTO());\n        HttpServletRequest request = null;\n        \n        // Test with valid app and request\n        assertDoesNotThrow(() -> controller.createApp(req, request));\n        \n        // Test with invalid app\n        req.getApp().setAppId(null);\n        assertThrows(BadRequestException.class, () -> controller.createApp(req, request));\n        \n        // Test with null request\n        request = null;\n        assertThrows(NullPointerException.class, () -> controller.createApp(req, request));\n    }\n}",
        "\n@Test\npublic void createAppTest() {\n    // Set up the test data\n    OpenCreateAppDTO req = new OpenCreateAppDTO();\n    req.setApp(new OpenAppDTO());\n    req.getApp().setAppId(\"appId\");\n    \n    // Mock the dependencies\n    ConsumerPermissionValidator consumerPermissionValidator = mock(ConsumerPermissionValidator.class);\n    AppOpenApiService appOpenApiService = mock(AppOpenApiService.class);\n    ConsumerService consumerService = mock(ConsumerService.class);\n    when(consumerPermissionValidator.hasCreateApplicationPermission(any())).thenReturn(true);\n    \n    // Invoke the method and assert its behavior\n    AppController appController = new AppController(appOpenApiService, consumerService, consumerPermissionValidator);\n    ResponseEntity<Void> response = appController.createApp(req, mock(HttpServletRequest.class));\n    assertEquals(HttpStatus.OK, response.getStatusCode());\n    \n    // Verify that the dependencies were invoked correctly\n    verify(appOpenApiService).createApp(any());\n    verify(consumerService).assignAppRoleToConsumer(anyLong(), anyString());\n}",
        "@Test\npublic void createAppTest() {\n  // Arrange\n  OpenCreateAppDTO req = new OpenCreateAppDTO();\n  HttpServletRequest request = mock(HttpServletRequest.class);\n  when(request.getParameter(\"app\")).thenReturn(req);\n  \n  // Act\n  void createApp(req, request);\n  \n  // Assert\n  verify(consumerPermissionValidator, times(1)).hasCreateApplicationPermission(any());\n  assertNotNull(req.getApp().getAppId());\n}",
        "package com.ctrip.framework.apollo.openapi.v1.controller;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AppControllerTest {\n    @Test\n    public void createAppTest() {\n        // Arrange\n        OpenCreateAppDTO req = new OpenCreateAppDTO();\n        HttpServletRequest request = new MockHttpServletRequest();\n        \n        // Act\n        String result = appOpenApiService.createApp(req);\n        \n        // Assert\n        assertEquals(\"App created successfully\", result);\n    }\n}"
    ]
}