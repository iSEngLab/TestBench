{
    "project_name": "commons-math",
    "file_name": "AccurateMathCalc.java",
    "relative_path": "commons-math/commons-math-core/src/main/java/org/apache/commons/math4/core/jdkmath/AccurateMathCalc.java",
    "execute_path": "commons-math/commons-math-core",
    "package": "org.apache.commons.math4.core.jdkmath",
    "docstring": "/**\n     * Print an array.\n     * @param out text output stream where output should be printed\n     * @param name array name\n     * @param expectedLen expected length of the array\n     * @param array2d array data\n     */",
    "source_code": "\nstatic void printarray(PrintStream out, String name, int expectedLen, double[][] array2d) {\n    out.println(name);\n    checkLen(expectedLen, array2d.length);\n    out.println(TABLE_START_DECL + \" \");\n    int i = 0;\n    for (double[] array : array2d) { // \"double array[]\" causes PMD parsing error\n        out.print(\"        {\");\n        for (double d : array) { // assume inner array has very few entries\n            out.printf(\"%-25.25s\", format(d)); // multiple entries per line\n        }\n        out.println(\"}, // \" + i++);\n    }\n    out.println(TABLE_END_DECL);\n}\n",
    "class_name": "AccurateMathCalc",
    "method_name": "printarray",
    "arguments": [
        "PrintStream out",
        "String name",
        "int expectedLen",
        "double[][] array2d"
    ],
    "generate_test": [
        "\npackage org.apache.commons.math4.core.jdkmath;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        // Set up test data\n        double[][] array2d = new double[][] {{1.0, 2.0}, {3.0, 4.0}};\n        String name = \"testArray\";\n        int expectedLen = 2;\n\n        // Set up the print stream\n        ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n        PrintStream printStream = new PrintStream(outContent);\n\n        // Call the method to be tested\n        AccurateMathCalc.printarray(printStream, name, expectedLen, array2d);\n\n        // Get the output from the print stream\n        String output = outContent.toString();\n\n        // Check that the output is correct\n        assertEquals(\"testArray\", output.split(\"\\n\")[0]);\n        assertTrue(output.contains(\"{1.0, 2.0},\"));\n        assertTrue(output.contains(\"{3.0, 4.0},\"));\n    }\n}",
        "package org.apache.commons.math4.core.jdkmath;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.io.PrintStream;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        double[][] array2d = new double[3][4];\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 4; j++) {\n                array2d[i][j] = i + j;\n            }\n        }\n        \n        String name = \"test\";\n        int expectedLen = 12;\n        \n        PrintStream out = new PrintStream(System.out);\n        printarray(out, name, expectedLen, array2d);\n        \n        assertEquals(\"test\", out.toString());\n        assertEquals(expectedLen, array2d.length);\n    }\n}",
        "package org.apache.commons.math4.core.jdkmath;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        double[][] array2d = new double[][] {{1, 2}, {3, 4}};\n        String name = \"Array Name\";\n        int expectedLen = 2;\n        PrintStream out = System.out; // or any other output stream\n\n        printarray(out, name, expectedLen, array2d);\n\n        assertEquals(\"Array Name\", out.toString());\n        assertEquals(TABLE_START_DECL + \" \", out.toString().substring(0, 13));\n        assertEquals(TABLE_END_DECL, out.toString().substring(out.toString().length() - 9));\n    }\n}",
        "\npackage org.apache.commons.math4.core.jdkmath;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        // Set up test data\n        String name = \"testName\";\n        int expectedLen = 2;\n        double[][] array2d = new double[][] {{1.0, 2.0}, {3.0, 4.0}};\n\n        // Set up output stream\n        ByteArrayOutputStream outStream = new ByteArrayOutputStream();\n        PrintStream out = new PrintStream(outStream);\n\n        // Invoke the method under test\n        printarray(out, name, expectedLen, array2d);\n\n        // Check the output\n        String actualOutput = outStream.toString();\n        assertEquals(expectedOutput, actualOutput);\n    }\n}",
        "package org.apache.commons.math4.core.jdkmath;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        PrintStream out = System.out; // Use System.out as the PrintStream\n        String name = \"testArray\"; // Name of the array to be printed\n        int expectedLen = 3; // Expected length of the array\n        double[][] array2d = {{1, 2}, {3, 4}}; // 2D array with two rows and two columns\n        \n        printarray(out, name, expectedLen, array2d);\n        \n        assertEquals(expectedLen, array2d.length); // Check that the length of the array is correct\n        for (double[] array : array2d) { // Check that each inner array has two elements\n            assertEquals(array[0], array[1]); // Check that each element in the inner array is equal to its neighbor\n        }\n    }\n}",
        "@Test\npublic void printarrayTest() {\n    PrintStream out = new PrintStream(System.out);\n    String name = \"testArray\";\n    int expectedLen = 2;\n    double[][] array2d = {{1, 2}, {3, 4}};\n    AccurateMathCalc.printarray(out, name, expectedLen, array2d);\n}",
        "\n@Test\npublic void printarrayTest() {\n    // Define variables and constants\n    PrintStream out = System.out;\n    String name = \"myArray\";\n    int expectedLen = 3;\n    double[][] array2d = new double[3][2];\n    \n    // Populate the array with test data\n    for (int i = 0; i < 3; i++) {\n        for (int j = 0; j < 2; j++) {\n            array2d[i][j] = Math.random();\n        }\n    }\n    \n    // Call the printarray method and check its output\n    printarray(out, name, expectedLen, array2d);\n    String actualOutput = out.toString().trim();\n    assertEquals(actualOutput, \"myArray\\n\" + TABLE_START_DECL + \"\\n        {0.12345678901234567890}, // 0\\n        {0.12345678901234567890}, // 1\\n        {0.12345678901234567890}, // 2\\n\" + TABLE_END_DECL);\n}",
        "\npackage org.apache.commons.math4.core.jdkmath;\n\nimport java.io.PrintStream;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        // Create a 2D double array with two inner arrays\n        double[][] array2d = new double[2][2];\n        array2d[0][0] = 1.0;\n        array2d[0][1] = 2.0;\n        array2d[1][0] = 3.0;\n        array2d[1][1] = 4.0;\n        \n        // Create a PrintStream object to capture the output of printarray\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        PrintStream out = new PrintStream(baos);\n        \n        // Call printarray with the expected values\n        String name = \"My Array\";\n        int expectedLen = 2;\n        printarray(out, name, expectedLen, array2d);\n        \n        // Verify that the output matches the expected format\n        String expectedOutput = \"My Array\\n\" +\n                \"[\\n\" +\n                \"    {1.000000, 2.000000}, // 0\\n\" +\n                \"    {3.000000, 4.000000}  // 1\\n\" +\n                \"]\\n\";\n        assertEquals(expectedOutput, baos.toString());\n        \n        // Verify that the length of the array is correct\n        List<Double> doubleList = Arrays.asList(array2d[0][0], array2d[0][1], array2d[1][0], array2d[1][1]);\n        assertEquals(doubleList.size(), expectedLen);\n    }\n}",
        "\n@Test\npublic void printarrayTest() {\n    double[][] array2d = new double[2][3];\n    array2d[0] = new double[] {1, 2, 3};\n    array2d[1] = new double[] {4, 5, 6};\n    PrintStream out = new ByteArrayOutputStream();\n    printarray(out, \"My Array\", 2, array2d);\n    String expectedOutput = \"My Array\\n\" +\n            TABLE_START_DECL + \"\\n\" +\n            \"        {1.00, 2.00, 3.00}\\n\" +\n            \"        {4.00, 5.00, 6.00}\\n\" +\n            TABLE_END_DECL;\n    assertEquals(expectedOutput, out.toString());\n}\n",
        "\npackage org.apache.commons.math4.core.jdkmath;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AccurateMathCalcTest {\n    @Test\n    public void printarrayTest() {\n        double[][] array2d = new double[3][4]; // 3 rows and 4 columns\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 4; j++) {\n                array2d[i][j] = i + j;\n            }\n        }\n        PrintStream out = System.out; // or any other PrintStream object\n        String name = \"testArray\";\n        int expectedLen = 3;\n        \n        printarray(out, name, expectedLen, array2d);\n    }\n}"
    ]
}