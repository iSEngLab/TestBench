{
    "project_name": "javacv",
    "file_name": "Blobs.java",
    "relative_path": "javacv/src/main/java/org/bytedeco/javacv/Blobs.java",
    "execute_path": "javacv",
    "package": "org.bytedeco.javacv",
    "docstring": null,
    "source_code": "// Determine the prior (lower number) region that meets the desired conditions\npublic static int PriorRegion(int Parent, int Color, double MinArea, double MaxArea, int Label)\n{\n    double DParent = (double) Parent; \n    double DColor = (double) Color; if(DColor > 0) DColor = 1;\n    \n    int i;\n    for(i = Label; i >= 0; i--)\n    {\n        double [] Region = RegionData[i];\n        double ThisParent = Region[BLOBPARENT];\n        double ThisColor = Region[BLOBCOLOR];\n        if(DParent >= 0 && DParent != ThisParent) continue;\n        if(DColor >= 0 && DColor != ThisColor) continue;\n        if(Region[BLOBAREA] < MinArea || Region[BLOBAREA] > MaxArea) continue;  \n        break;      // We have a match!\n    }\n    if(i < 0) i = -1;   // Use -1 to flag that there was no match\n    return i;\n}\n",
    "class_name": "Blobs",
    "method_name": "PriorRegion",
    "arguments": [
        "int Parent",
        "int Color",
        "double MinArea",
        "double MaxArea",
        "int Label"
    ],
    "generate_test": [
        "\n@Test\npublic void PriorRegionTest() {\n    // Test case 1: Parent and Color both specified, match found\n    int parent = 5;\n    int color = 2;\n    double minArea = 0.3;\n    double maxArea = 0.8;\n    int label = 2;\n    \n    assertEquals(PriorRegion(parent, color, minArea, maxArea, label), 1);\n    \n    // Test case 2: Parent and Color both specified, match not found\n    parent = 5;\n    color = 10;\n    minArea = 0.3;\n    maxArea = 0.8;\n    label = 2;\n    \n    assertEquals(PriorRegion(parent, color, minArea, maxArea, label), -1);\n    \n    // Test case 3: Parent and Color both not specified, match found\n    parent = -1;\n    color = -1;\n    minArea = 0.3;\n    maxArea = 0.8;\n    label = 2;\n    \n    assertEquals(PriorRegion(parent, color, minArea, maxArea, label), 1);\n    \n    // Test case 4: Parent and Color both not specified, match not found\n    parent = -1;\n    color = -1;\n    minArea = 0.3;\n    maxArea = 0.8;\n    label = 20;\n    \n    assertEquals(PriorRegion(parent, color, minArea, maxArea, label), -1);\n}",
        "\npackage org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int parent = 5;\n        int color = 0;\n        double minArea = 100;\n        double maxArea = 1000;\n        int label = 3;\n\n        int expected = -1; // No match found\n        int actual = Blobs.PriorRegion(parent, color, minArea, maxArea, label);\n\n        assertEquals(expected, actual);\n    }\n}",
        "\npackage org.bytedeco.javacv;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int parent = 10;\n        int color = 255;\n        double minArea = 500.0;\n        double maxArea = 600.0;\n        int label = 3;\n        \n        int result = Blobs.PriorRegion(parent, color, minArea, maxArea, label);\n        \n        assertEquals(-1, result);\n    }\n}",
        "\n@Test\npublic void PriorRegionTest() {\n    // Test case 1: Parent = -1, Color = -1, MinArea = 0.5, MaxArea = 2, Label = 0\n    int result = Blobs.PriorRegion(-1, -1, 0.5, 2, 0);\n    assertEquals(0, result);\n    \n    // Test case 2: Parent = 3, Color = 4, MinArea = 0.5, MaxArea = 2, Label = 1\n    result = Blobs.PriorRegion(3, 4, 0.5, 2, 1);\n    assertEquals(-1, result);\n    \n    // Test case 3: Parent = -1, Color = -1, MinArea = 0.5, MaxArea = 2, Label = 2\n    result = Blobs.PriorRegion(-1, -1, 0.5, 2, 2);\n    assertEquals(1, result);\n    \n    // Test case 4: Parent = 3, Color = 4, MinArea = 0.5, MaxArea = 2, Label = 3\n    result = Blobs.PriorRegion(3, 4, 0.5, 2, 3);\n    assertEquals(-1, result);\n}",
        "\npackage org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int Parent = 5;\n        int Color = 2;\n        double MinArea = 100.0;\n        double MaxArea = 200.0;\n        int Label = 3;\n        \n        assertEquals(PriorRegion(Parent, Color, MinArea, MaxArea, Label), 1);\n    }\n}",
        "\npackage org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        int Parent = 5;\n        int Color = 1;\n        double MinArea = 20.0;\n        double MaxArea = 30.0;\n        int Label = 3;\n        \n        int expectedPriorRegion = -1; // No match found\n        \n        int actualPriorRegion = Blobs.PriorRegion(Parent, Color, MinArea, MaxArea, Label);\n        \n        assertEquals(expectedPriorRegion, actualPriorRegion);\n    }\n}",
        "\n@Test\npublic void PriorRegionTest() {\n    int parent = 1;\n    int color = 2;\n    double minArea = 3.0;\n    double maxArea = 4.0;\n    int label = 5;\n    \n    int result = Blobs.PriorRegion(parent, color, minArea, maxArea, label);\n    assertEquals(-1, result);\n}",
        "\n@Test\npublic void PriorRegionTest() {\n    int Parent = 0;\n    int Color = 1;\n    double MinArea = 10.0;\n    double MaxArea = 20.0;\n    int Label = 3;\n    \n    int expectedResult = -1; // We don't expect a match because the input parameters don't meet the conditions specified in the method\n    \n    int actualResult = PriorRegion(Parent, Color, MinArea, MaxArea, Label);\n    \n    assertEquals(expectedResult, actualResult);\n}",
        "\n@Test\npublic void PriorRegionTest() {\n    int parent = 0;\n    int color = 1;\n    double minArea = 5.0;\n    double maxArea = 10.0;\n    int label = 2;\n    \n    int expectedResult = -1;\n    int actualResult = PriorRegion(parent, color, minArea, maxArea, label);\n    \n    assertEquals(expectedResult, actualResult);\n}",
        "package org.bytedeco.javacv;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BlobsTest {\n    @Test\n    public void PriorRegionTest() {\n        // Test case 1: parent = -1, color = -1, minArea = 0, maxArea = Double.MAX_VALUE, label = 0\n        int expectedPriorRegion = 0;\n        assertEquals(expectedPriorRegion, PriorRegion(-1, -1, 0, Double.MAX_VALUE, 0));\n        \n        // Test case 2: parent = 5, color = 7, minArea = 100, maxArea = 1000, label = 3\n        expectedPriorRegion = 3;\n        assertEquals(expectedPriorRegion, PriorRegion(5, 7, 100, 1000, 3));\n        \n        // Test case 3: parent = 99, color = -1, minArea = 0, maxArea = Double.MAX_VALUE, label = -1\n        expectedPriorRegion = -1;\n        assertEquals(expectedPriorRegion, PriorRegion(99, -1, 0, Double.MAX_VALUE, -1));\n    }\n}"
    ]
}