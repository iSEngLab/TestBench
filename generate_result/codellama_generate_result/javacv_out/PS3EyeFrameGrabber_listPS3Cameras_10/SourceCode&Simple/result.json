{
    "project_name": "javacv",
    "file_name": "PS3EyeFrameGrabber.java",
    "relative_path": "javacv/src/main/java/org/bytedeco/javacv/PS3EyeFrameGrabber.java",
    "execute_path": "javacv",
    "package": "org.bytedeco.javacv",
    "docstring": "/** Ask the driver for all installed PS3 cameras. Resulting array is sorted in order of camera index.\n     *  Its size is defined by CLCamera.cameraCount().\n     * \n     * @return array of camera unique uuids or null if there is no PS3 camera\n     */",
    "source_code": "\npublic static String[] listPS3Cameras() {\n    int no = getCameraCount();\n    String[] uuids;\n    if (no > 0) {\n        uuids = new String[no];\n        for (--no; no >=0; no--) { uuids[no] = CLCamera.cameraUUID(no); }\n        return uuids;\n    }\n    return null;\n}\n",
    "class_name": "PS3EyeFrameGrabber",
    "method_name": "listPS3Cameras",
    "arguments": [],
    "generate_test": [
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        int cameraCount = PS3EyeFrameGrabber.getCameraCount();\n        String[] uuids = new String[cameraCount];\n        for (int i = 0; i < cameraCount; i++) {\n            uuids[i] = CLCamera.cameraUUID(i);\n        }\n        assertArrayEquals(uuids, PS3EyeFrameGrabber.listPS3Cameras());\n    }\n}",
        "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        // Create an instance of the PS3EyeFrameGrabber class\n        PS3EyeFrameGrabber grabber = new PS3EyeFrameGrabber();\n        \n        // Call the listPS3Cameras method on the grabber instance\n        String[] uuids = grabber.listPS3Cameras();\n        \n        // Check that the returned array is not null and has at least one element\n        assertNotNull(uuids);\n        assertTrue(uuids.length > 0);\n    }\n}",
        "\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        int no = PS3EyeFrameGrabber.getCameraCount();\n        String[] uuids;\n        if (no > 0) {\n            uuids = new String[no];\n            for (--no; no >= 0; no--) {\n                uuids[no] = CLCamera.cameraUUID(no);\n            }\n            assertArrayEquals(uuids, PS3EyeFrameGrabber.listPS3Cameras());\n        } else {\n            assertNull(PS3EyeFrameGrabber.listPS3Cameras());\n        }\n    }\n}",
        "\n@Test\npublic void listPS3CamerasTest() {\n    int expectedNumberOfCameras = 1; // Replace with the expected number of cameras\n    String[] uuids = PS3EyeFrameGrabber.listPS3Cameras();\n    assertEquals(expectedNumberOfCameras, uuids.length);\n}",
        "\npackage org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        String[] uuids = PS3EyeFrameGrabber.listPS3Cameras();\n        assertNotNull(uuids);\n        for (String uuid : uuids) {\n            assertTrue(uuid.length() > 0);\n        }\n    }\n}",
        "\npackage org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        int no = PS3EyeFrameGrabber.getCameraCount();\n        String[] uuids;\n        if (no > 0) {\n            uuids = new String[no];\n            for (--no; no >= 0; no--) {\n                uuids[no] = PS3EyeFrameGrabber.cameraUUID(no);\n            }\n            assertArrayEquals(uuids, PS3EyeFrameGrabber.listPS3Cameras());\n        } else {\n            assertNull(PS3EyeFrameGrabber.listPS3Cameras());\n        }\n    }\n}",
        "\npackage org.bytedeco.javacv;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        int no = getCameraCount();\n        String[] uuids;\n        if (no > 0) {\n            uuids = new String[no];\n            for (--no; no >= 0; no--) {\n                uuids[no] = CLCamera.cameraUUID(no);\n            }\n            return uuids;\n        }\n        return null;\n    }\n}\n",
        "\npackage org.bytedeco.javacv;\n\nimport cl.eye.CLCamera;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        String[] uuids = PS3EyeFrameGrabber.listPS3Cameras();\n        assertNotNull(uuids);\n        for (String uuid : uuids) {\n            CLCamera camera = new CLCamera(uuid);\n            assertNotNull(camera);\n        }\n    }\n}",
        "\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        int no = PS3EyeFrameGrabber.getCameraCount();\n        String[] uuids;\n        if (no > 0) {\n            uuids = new String[no];\n            for (--no; no >= 0; no--) {\n                uuids[no] = PS3EyeFrameGrabber.cameraUUID(no);\n            }\n            assertNotNull(uuids);\n        } else {\n            uuids = null;\n            assertNull(uuids);\n        }\n    }\n}",
        "package org.bytedeco.javacv;\n\nimport cl.eye.CLCamera;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        String[] uuids = PS3EyeFrameGrabber.listPS3Cameras();\n        \n        assertNotNull(uuids);\n        for (String uuid : uuids) {\n            assertFalse(uuid.isEmpty());\n        }\n    }\n}"
    ]
}