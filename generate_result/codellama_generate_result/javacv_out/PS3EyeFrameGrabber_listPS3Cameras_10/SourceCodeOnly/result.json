{
    "project_name": "javacv",
    "file_name": "PS3EyeFrameGrabber.java",
    "relative_path": "javacv/src/main/java/org/bytedeco/javacv/PS3EyeFrameGrabber.java",
    "execute_path": "javacv",
    "package": "org.bytedeco.javacv",
    "docstring": "/** Ask the driver for all installed PS3 cameras. Resulting array is sorted in order of camera index.\n     *  Its size is defined by CLCamera.cameraCount().\n     * \n     * @return array of camera unique uuids or null if there is no PS3 camera\n     */",
    "source_code": "\npublic static String[] listPS3Cameras() {\n    int no = getCameraCount();\n    String[] uuids;\n    if (no > 0) {\n        uuids = new String[no];\n        for (--no; no >=0; no--) { uuids[no] = CLCamera.cameraUUID(no); }\n        return uuids;\n    }\n    return null;\n}\n",
    "class_name": "PS3EyeFrameGrabber",
    "method_name": "listPS3Cameras",
    "arguments": [],
    "generate_test": [
        "\npackage org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        int no = getCameraCount();\n        String[] uuids;\n        if (no > 0) {\n            uuids = new String[no];\n            for (--no; no >=0; no--) { uuids[no] = CLCamera.cameraUUID(no); }\n            return uuids;\n        }\n        assertNull(uuids, \"The list of PS3 cameras should be null if there are no cameras\");\n    }\n}\n",
        "\npackage org.bytedeco.javacv;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        String[] uuids = PS3EyeFrameGrabber.listPS3Cameras();\n        assertNotNull(uuids);\n        for (String uuid : uuids) {\n            assertEquals(\"UUID\", uuid);\n        }\n    }\n}",
        "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        int no = PS3EyeFrameGrabber.getCameraCount();\n        String[] uuids;\n        if (no > 0) {\n            uuids = new String[no];\n            for (int i = 0; i < no; i++) {\n                uuids[i] = PS3EyeFrameGrabber.cameraUUID(i);\n            }\n            assertEquals(uuids.length, no);\n        } else {\n            fail(\"No cameras were found\");\n        }\n    }\n}",
        "\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        String[] uuids = PS3EyeFrameGrabber.listPS3Cameras();\n        assertNotNull(uuids);\n        assertEquals(1, uuids.length);\n        assertEquals(\"uuid_0\", uuids[0]);\n    }\n}",
        "\npackage org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        int no = PS3EyeFrameGrabber.getCameraCount();\n        assertTrue(no > 0);\n        String[] uuids = new String[no];\n        for (--no; no >=0; no--) {\n            uuids[no] = CLCamera.cameraUUID(no);\n        }\n        assertArrayEquals(uuids, PS3EyeFrameGrabber.listPS3Cameras());\n    }\n}",
        "\n@Test\npublic void listPS3CamerasTest() {\n    String[] uuids = PS3EyeFrameGrabber.listPS3Cameras();\n    \n    assertNotNull(uuids);\n    assertEquals(3, uuids.length);\n    assertEquals(\"Camera UUID 0\", uuids[0]);\n    assertEquals(\"Camera UUID 1\", uuids[1]);\n    assertEquals(\"Camera UUID 2\", uuids[2]);\n}",
        "\npackage org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        int no = CLCamera.getCameraCount();\n        assertTrue(no > 0);\n        String[] uuids = new String[no];\n        for (int i = 0; i < no; i++) {\n            uuids[i] = CLCamera.cameraUUID(i);\n        }\n        assertEquals(no, uuids.length);\n    }\n}",
        "\npackage org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        String[] uuids = PS3EyeFrameGrabber.listPS3Cameras();\n        assertNotNull(uuids);\n        for (String uuid : uuids) {\n            assertEquals(\"01234567-89ab-cdef-0123-456789abcdef\", uuid);\n        }\n    }\n}\n",
        "package org.bytedeco.javacv;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        // Set up test data\n        int no = 2;\n        String[] uuids = new String[no];\n        uuids[0] = \"Camera1\";\n        uuids[1] = \"Camera2\";\n\n        // Call the method under test\n        String[] result = PS3EyeFrameGrabber.listPS3Cameras();\n\n        // Verify the result\n        assertArrayEquals(result, uuids);\n    }\n}",
        "\npackage org.bytedeco.javacv;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class PS3EyeFrameGrabberTest {\n    @Test\n    public void listPS3CamerasTest() {\n        int expectedNumberOfCameras = 0;\n        String[] actualUuids = PS3EyeFrameGrabber.listPS3Cameras();\n        \n        assertEquals(expectedNumberOfCameras, actualUuids.length);\n    }\n}"
    ]
}