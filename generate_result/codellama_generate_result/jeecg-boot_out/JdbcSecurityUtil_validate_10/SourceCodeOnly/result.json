{
    "project_name": "jeecg-boot",
    "file_name": "JdbcSecurityUtil.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/security/JdbcSecurityUtil.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.util.security",
    "docstring": "/**\n     * \u6821\u9a8csql\u662f\u5426\u6709\u7279\u5b9a\u7684key\n     * @param jdbcUrl\n     * @return\n     */",
    "source_code": "\npublic static void validate(String jdbcUrl){\n    if(oConvertUtils.isEmpty(jdbcUrl)){\n        return;\n    }\n    String urlConcatChar = \"?\";\n    if(jdbcUrl.indexOf(urlConcatChar)<0){\n        return;\n    }\n    String argString = jdbcUrl.substring(jdbcUrl.indexOf(urlConcatChar)+1);\n    String[] keyAndValues = argString.split(\"&\");\n    for(String temp: keyAndValues){\n        String key = temp.split(\"=\")[0];\n        for(String prop: notAllowedProps){\n            if(prop.equalsIgnoreCase(key)){\n                throw new JeecgBootException(\"\u8fde\u63a5\u5730\u5740\u6709\u5b89\u5168\u98ce\u9669\uff0c\u3010\"+key+\"\u3011\");\n            }\n        }\n    }\n}\n",
    "class_name": "JdbcSecurityUtil",
    "method_name": "validate",
    "arguments": [
        "String jdbcUrl"
    ],
    "generate_test": [
        "package org.jeecg.common.util.security;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost:3306/mydb\";\n        assertTrue(JdbcSecurityUtil.validate(jdbcUrl)); // The URL is valid\n\n        jdbcUrl = \"jdbc:oracle:thin:@//host:port/service_name\";\n        assertTrue(JdbcSecurityUtil.validate(jdbcUrl)); // The URL is valid\n\n        jdbcUrl = \"jdbc:sqlserver://localhost\\\\SQLEXPRESS;DatabaseName=mydb\";\n        assertTrue(JdbcSecurityUtil.validate(jdbcUrl)); // The URL is valid\n\n        jdbcUrl = \"jdbc:postgresql://host:5432/mydb\";\n        assertTrue(JdbcSecurityUtil.validate(jdbcUrl)); // The URL is valid\n    }\n}",
        "package org.jeecg.common.util.security;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost/testdb?user=root&password=root\";\n        assertThrows(JeecgBootException.class, () -> JdbcSecurityUtil.validate(jdbcUrl));\n        \n        jdbcUrl = \"jdbc:oracle:thin:@127.0.0.1:1521/orcl?user=system&password=manager\";\n        assertThrows(JeecgBootException.class, () -> JdbcSecurityUtil.validate(jdbcUrl));\n        \n        jdbcUrl = \"jdbc:sqlserver://localhost;databaseName=testdb\";\n        assertDoesNotThrow(() -> JdbcSecurityUtil.validate(jdbcUrl));\n    }\n}",
        "package org.jeecg.common.util.security;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost/mydatabase?user=root&password=123456\";\n        assertTrue(JdbcSecurityUtil.validate(jdbcUrl));\n        \n        jdbcUrl = \"jdbc:postgresql://localhost/mydatabase?user=root&password=123456\";\n        assertTrue(JdbcSecurityUtil.validate(jdbcUrl));\n        \n        jdbcUrl = \"jdbc:sqlserver://localhost;databaseName=mydatabase;user=root;password=123456\";\n        assertTrue(JdbcSecurityUtil.validate(jdbcUrl));\n    }\n}",
        "package org.jeecg.common.util.security;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        // Arrange\n        String jdbcUrl = \"jdbc:mysql://localhost/test?user=root&password=root\";\n        String[] notAllowedProps = {\"user\", \"password\"};\n\n        // Act\n        JdbcSecurityUtil.validate(jdbcUrl, notAllowedProps);\n\n        // Assert\n        assertTrue(true); // The test passes if the method doesn't throw any exceptions\n    }\n}",
        "package org.jeecg.common.util.security;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost:3306/mydatabase?user=root&password=root\";\n        JdbcSecurityUtil.validate(jdbcUrl);\n        \n        assertThrows(JeecgBootException.class, () -> {\n            String argString = jdbcUrl.substring(jdbcUrl.indexOf(\"?\") + 1);\n            String[] keyAndValues = argString.split(\"&\");\n            for (String temp : keyAndValues) {\n                String key = temp.split(\"=\")[0];\n                if (\"password\".equalsIgnoreCase(key)) {\n                    throw new JeecgBootException(\"\u8fde\u63a5\u5730\u5740\u6709\u5b89\u5168\u98ce\u9669\uff0c\u3010\" + key + \"\u3011\");\n                }\n            }\n        });\n        \n        assertDoesNotThrow(() -> JdbcSecurityUtil.validate(jdbcUrl));\n    }\n}",
        "package org.jeecg.common.util.security;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost/testdb?user=root&password=123456\";\n        JdbcSecurityUtil.validate(jdbcUrl);\n        assertEquals(\"\u8fde\u63a5\u5730\u5740\u6709\u5b89\u5168\u98ce\u9669\uff0c[user]\", e.getMessage());\n    }\n}",
        "\npackage org.jeecg.common.util.security;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost/mydatabase?user=root&password=root\";\n        JdbcSecurityUtil.validate(jdbcUrl);\n        \n        // Test that the method correctly checks for allowed properties\n        assertDoesNotThrow(() -> {\n            JdbcSecurityUtil.validate(\"jdbc:mysql://localhost/mydatabase?user=root&password=root\");\n        });\n        \n        // Test that the method throws an exception when an unallowed property is present\n        assertThrows(JeecgBootException.class, () -> {\n            JdbcSecurityUtil.validate(\"jdbc:mysql://localhost/mydatabase?user=root&password=root&key=value\");\n        });\n        \n        // Test that the method correctly checks for allowed properties in a URL with multiple parameters\n        assertDoesNotThrow(() -> {\n            JdbcSecurityUtil.validate(\"jdbc:mysql://localhost/mydatabase?user=root&password=root&key1=value1&key2=value2\");\n        });\n        \n        // Test that the method throws an exception when a disallowed property is present in a URL with multiple parameters\n        assertThrows(JeecgBootException.class, () -> {\n            JdbcSecurityUtil.validate(\"jdbc:mysql://localhost/mydatabase?user=root&password=root&key1=value1&key2=value2&key3=value3\");\n        });\n    }\n}",
        "package org.jeecg.common.util.security;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:mysql://localhost:3306/jeecgboot?user=root&password=123456\";\n        String[] notAllowedProps = {\"user\", \"password\"};\n        \n        // test with a valid JDBC URL and allowed properties\n        JdbcSecurityUtil.validate(jdbcUrl, notAllowedProps);\n        assertTrue(true);\n        \n        // test with an invalid JDBC URL\n        jdbcUrl = \"jdbc:mysql://localhost:3306/jeecgboot?user=root&password=123456\";\n        JdbcSecurityUtil.validate(jdbcUrl, notAllowedProps);\n        assertTrue(true);\n        \n        // test with a valid JDBC URL and an allowed property\n        jdbcUrl = \"jdbc:mysql://localhost:3306/jeecgboot?user=root\";\n        JdbcSecurityUtil.validate(jdbcUrl, notAllowedProps);\n        assertTrue(true);\n        \n        // test with a valid JDBC URL and an allowed property in uppercase\n        jdbcUrl = \"jdbc:mysql://localhost:3306/jeecgboot?USER=root\";\n        JdbcSecurityUtil.validate(jdbcUrl, notAllowedProps);\n        assertTrue(true);\n        \n        // test with a valid JDBC URL and an allowed property in lowercase\n        jdbcUrl = \"jdbc:mysql://localhost:3306/jeecgboot?user=root\";\n        JdbcSecurityUtil.validate(jdbcUrl, notAllowedProps);\n        assertTrue(true);\n    }\n}",
        "package org.jeecg.common.util.security;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        // Test a valid URL with no security risk\n        String jdbcUrl = \"jdbc:mysql://localhost/test?user=root&password=root\";\n        JdbcSecurityUtil.validate(jdbcUrl);\n        \n        // Test a URL with an unallowed property\n        jdbcUrl = \"jdbc:mysql://localhost/test?user=root&password=root&foo=bar\";\n        assertThrows(JeecgBootException.class, () -> JdbcSecurityUtil.validate(jdbcUrl));\n        \n        // Test a URL with multiple unallowed properties\n        jdbcUrl = \"jdbc:mysql://localhost/test?user=root&password=root&foo=bar&baz=qux\";\n        assertThrows(JeecgBootException.class, () -> JdbcSecurityUtil.validate(jdbcUrl));\n    }\n}",
        "package org.jeecg.common.util.security;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JdbcSecurityUtilTest {\n    @Test\n    public void validateTest() {\n        String jdbcUrl = \"jdbc:postgresql://127.0.0.1:5432/test?user=username&password=password\";\n        assertTrue(JdbcSecurityUtil.validate(jdbcUrl));\n        \n        jdbcUrl = \"jdbc:postgresql://127.0.0.1:5432/test?user=username&password=password&key=value\";\n        assertFalse(JdbcSecurityUtil.validate(jdbcUrl));\n    }\n}"
    ]
}