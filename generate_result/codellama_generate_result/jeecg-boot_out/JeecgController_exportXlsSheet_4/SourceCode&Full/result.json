{
    "project_name": "jeecg-boot",
    "file_name": "JeecgController.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/system/base/controller/JeecgController.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.system.base.controller",
    "docstring": "/**\n     * \u6839\u636e\u6bcf\u9875sheet\u6570\u91cf\u5bfc\u51fa\u591asheet\n     *\n     * @param request\n     * @param object \u5b9e\u4f53\u7c7b\n     * @param clazz \u5b9e\u4f53\u7c7bclass\n     * @param title \u6807\u9898\n     * @param exportFields \u5bfc\u51fa\u5b57\u6bb5\u81ea\u5b9a\u4e49\n     * @param pageNum \u6bcf\u4e2asheet\u7684\u6570\u636e\u6761\u6570\n     * @param request\n     */",
    "source_code": "\nprotected ModelAndView exportXlsSheet(HttpServletRequest request, T object, Class<T> clazz, String title,String exportFields,Integer pageNum) {\n    // Step.1 \u7ec4\u88c5\u67e5\u8be2\u6761\u4ef6\n    QueryWrapper<T> queryWrapper = QueryGenerator.initQueryWrapper(object, request.getParameterMap());\n    LoginUser sysUser = (LoginUser) SecurityUtils.getSubject().getPrincipal();\n    // Step.2 \u8ba1\u7b97\u5206\u9875sheet\u6570\u636e\n    double total = service.count();\n    int count = (int)Math.ceil(total/pageNum);\n    //update-begin-author:liusq---date:20220629--for: \u591asheet\u5bfc\u51fa\u6839\u636e\u9009\u62e9\u5bfc\u51fa\u5199\u6cd5\u8c03\u6574 ---\n    // Step.3  \u8fc7\u6ee4\u9009\u4e2d\u6570\u636e\n    String selections = request.getParameter(\"selections\");\n    if (oConvertUtils.isNotEmpty(selections)) {\n        List<String> selectionList = Arrays.asList(selections.split(\",\"));\n        queryWrapper.in(\"id\",selectionList);\n    }\n    //update-end-author:liusq---date:20220629--for: \u591asheet\u5bfc\u51fa\u6839\u636e\u9009\u62e9\u5bfc\u51fa\u5199\u6cd5\u8c03\u6574 ---\n    // Step.4 \u591asheet\u5904\u7406\n    List<Map<String, Object>> listMap = new ArrayList<Map<String, Object>>();\n    for (int i = 1; i <=count ; i++) {\n        Page<T> page = new Page<T>(i, pageNum);\n        IPage<T> pageList = service.page(page, queryWrapper);\n        List<T> exportList = pageList.getRecords();\n        Map<String, Object> map = new HashMap<>(5);\n        ExportParams exportParams=new ExportParams(title + \"\u62a5\u8868\", \"\u5bfc\u51fa\u4eba:\" + sysUser.getRealname(), title+i,jeecgBaseConfig.getPath().getUpload());\n        exportParams.setType(ExcelType.XSSF);\n        //map.put(\"title\",exportParams);\n        //\u8868\u683cTitle\n        map.put(NormalExcelConstants.PARAMS,exportParams);\n        //\u8868\u683c\u5bf9\u5e94\u5b9e\u4f53\n        map.put(NormalExcelConstants.CLASS,clazz);\n        //\u6570\u636e\u96c6\u5408\n        map.put(NormalExcelConstants.DATA_LIST, exportList);\n        listMap.add(map);\n    }\n    // Step.4 AutoPoi \u5bfc\u51faExcel\n    ModelAndView mv = new ModelAndView(new JeecgEntityExcelView());\n    //\u6b64\u5904\u8bbe\u7f6e\u7684filename\u65e0\u6548 ,\u524d\u7aef\u4f1a\u91cd\u66f4\u65b0\u8bbe\u7f6e\u4e00\u4e0b\n    mv.addObject(NormalExcelConstants.FILE_NAME, title);\n    mv.addObject(NormalExcelConstants.MAP_LIST, listMap);\n    return mv;\n}\n",
    "class_name": "JeecgController",
    "method_name": "exportXlsSheet",
    "arguments": [
        "HttpServletRequest request",
        "T object",
        "Class<T> clazz",
        "String title",
        "String exportFields",
        "Integer pageNum"
    ],
    "generate_test": [
        "package org.jeecg.common.system.base.controller;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.jeecg.common.aspect.annotation.Dict;\nimport org.jeecg.common.system.base.entity.JeecgEntity;\nimport org.springframework.web.servlet.ModelAndView;\nimport java.io.OutputStream;\n\n/**\n * \u901a\u7528Excel\u5bfc\u51fa\u65b9\u6cd5\uff0c\u6839\u636e\u4f20\u5165\u7684\u5b9e\u4f53\u5bf9\u8c61\u548c\u5b57\u6bb5\u540d\u6570\u7ec4\uff0c\u6784\u9020\u4e00\u4e2aexcel\u6587\u4ef6\u5e76\u8fd4\u56de\u4e0b\u8f7d\n * @param title excel\u6807\u9898\n * @param pojoClass excel\u5bf9\u5e94\u7684\u5b9e\u4f53\u7c7b\u7c7b\u578b\n * @param queryParams \u67e5\u8be2\u53c2\u6570\n */\n@Slf4j\npublic class JeecgEntityExcelView extends HSSFWorkbook {\n    private String[] fields; //\u5b57\u6bb5\u540d\u6570\u7ec4\n    private String title; // excel\u6807\u9898\n    private Class<?> pojoClass;//excel\u5bf9\u5e94\u7684\u5b9e\u4f53\u7c7b\u7c7b\u578b\n    public void setAttr(String title, Class<?> pojoClass, String... fields) {\n        this.title = title;\n        this.pojoClass = pojoClass;\n        this.fields = fields;\n    }\n    public void renderMergedOutputStream( JeecgEntity entity, OutputStream out, HttpServletRequest request ) throws Exception {\n        // \u8fd9\u91cc\u8c03\u7528\u5b9e\u73b0\u7c7b\u7684renderMergedOutputStream\u65b9\u6cd5\uff0c\u53ef\u4ee5\u91cd\u5199\u8be5\u65b9\u6cd5\u5b9e\u73b0\u5176\u4ed6\u6e32\u67d3\u65b9\u5f0f\n        this.renderMergedOutputStream(entity, out, request);\n    }\n}\n    \n\n### JUnit Test:",
        "### [TEST_TITLE]\n- [TEST1]\n\n[TEST_CASES]\n\n### Tests:\n    @Test\n    public void testXXX() {\n        <FILL>\n    }\n### [/TEST_TITLE]\n\n### Response:",
        "### BaseController Test case:\npackage org.jeecg.common.system.base.controller;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JeecgControllerTest {\n    @Test\n    public void exportXlsSheetTest() {\n        <FILL>\n    }\n}\n    \n\n### Response:",
        "\n    //\u5c01\u88c5\u8fd4\u56de\u7c7b\u578b,\u4e3b\u8981\u662f\u9488\u5bf9AJAX\u8bf7\u6c42\n    public static class Result<T> implements Serializable{\n    \n        private String code = SUCCESS_CODE;//\u64cd\u4f5c\u7801\n        private String msg; \t\t//\u63d0\u793a\u4fe1\u606f\n        private T data;  \t\t\t//\u6570\u636e\n        private String ok;\t\t\t//\u6210\u529f\u6807\u8bc6\n        private static final long serialVersionUID = 1L;\n    \n        public Result() {}\n        \n        public Result(String code,String msg){\n            this.code=code;\n            this.msg=msg;\n        }\n        \n        public String getCode() {\n\t\treturn code;\n\t}\n\tpublic void setCode(String code) {\n\t\tthis.code = code;\n\t}\n\tpublic String getMsg() {\n\t\treturn msg;\n\t}\n\tpublic void setMsg(String msg) {\n\t\tthis.msg = msg;\n\t}\n        public T getData() {\n            return data;\n        }\n    \n        public void setData(T data) {\n            this.data = data;\n        }\n        \n        public String getOk() {\n\t\treturn ok;\n\t}\n\tpublic void setOk(String ok) {\n\t\tthis.ok = ok;\n\t}\n    \n    }\n    \n    //\u64cd\u4f5c\u7801\u5e38\u91cf\uff0c\u7528\u4e8e\u6807\u8bc6\u64cd\u4f5c\u7ed3\u679c\n    public static class ResultCode implements Serializable{\n        public final static String SUCCESS_CODE=\"0\"; \t//\u6210\u529f\n        public final static String FAILURE_CODE=\"1\"; \t//\u5931\u8d25\n    \n        public ResultCode(){}\n    }\n    \n\n### JAXB:",
        "package org.jeecg.common.system.base.controller;\n\nimport java.io.IOException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport io.swagger.annotations.*;\nimport org.springframework.web.bind.annotation.*;\nimport org.jeecg.common.system.base.entity.JeecgEntity;\nimport org.jeecg.common.system.base.service.IJeecgService;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n\n/**\n * \u901a\u7528\u63a7\u5236\u5668\n */\n@RestController\n@RequestMapping(\"/\")\n@Api(tags = \"\u5e73\u53f0\u901a\u7528\u63a5\u53e3\")\npublic class JeecgController<T extends JeecgEntity> {\n    @Autowired\n    protected IJeecgService<T> service;\n    \n    /**\n     * \u6839\u636e\u552f\u4e00\u952e\u67e5\u8be2\u5355\u6761\u6570\u636e\n     * \n     * @param id \u4e3b\u952eID\n     * @return \u5355\u6761\u6570\u636e\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636eid\u67e5\u8be2\")\n    @GetMapping(value = \"/{id}\")\n    public Result<?> queryById(@PathVariable String id) {\n        T entity = service.getById(id);\n        if (entity == null) {\n            return Result.error(\"\u672a\u627e\u5230\u5bf9\u5e94\u6570\u636e\");\n        }\n        return Result.ok(entity);\n    }\n    \n    /**\n     * \u6839\u636e\u5b9e\u4f53\u4e2d\u7684\u5c5e\u6027\u67e5\u8be2\u5355\u6761\u6570\u636e\n     * \n     * @param entity \u6761\u4ef6\u503c\n     * @return \u5355\u6761\u6570\u636e\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636e\u5b9e\u4f53\u4e2d\u5c5e\u6027\u67e5\u8be2\u5355\u6761\u6570\u636e\")\n    @PostMapping(value = \"/queryOneByEntity\")\n    public Result<?> queryOneByEntity(@RequestBody T entity) {\n        if (entity == null) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        T oneByEntity = service.getOneByEntity(entity);\n        if (oneByEntity == null) {\n            return Result.error(\"\u672a\u627e\u5230\u5bf9\u5e94\u6570\u636e\");\n        }\n        return Result.ok(oneByEntity);\n    }\n    \n    /**\n     * \u6839\u636e\u5b9e\u4f53\u4e2d\u7684\u5c5e\u6027\u67e5\u8be2\u7b26\u5408\u6761\u4ef6\u7684\u6240\u6709\u6570\u636e\u5217\u8868\n     * \n     * @param entity \u5b9e\u4f53\u5bf9\u8c61\n     * @return \u6240\u6709\u6570\u636e\u5217\u8868\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636e\u5c5e\u6027\u67e5\u8be2\u6240\u6709\u6570\u636e\u5217\u8868\")\n    @PostMapping(value = \"/queryListByEntity\")\n    public Result<?> queryListByEntity(@RequestBody T entity) {\n        if (entity == null) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        return Result.ok(service.listByEntity(entity));\n    }\n    \n    /**\n     * \u6839\u636e\u5b9e\u4f53\u4e2d\u7684\u5c5e\u6027\u67e5\u8be2\u7b26\u5408\u6761\u4ef6\u7684\u6240\u6709\u6570\u636e\u5217\u8868\uff0c\u5e76\u8fdb\u884c\u5206\u9875\n     * \n     * @param pageIndex \u8d77\u59cb\u7d22\u5f15\n     * @param pageSize \u6bcf\u9875\u5c55\u793a\u6570\u91cf\n     * @param entity \u5b9e\u4f53\u5bf9\u8c61\n     * @return \u6240\u6709\u6570\u636e\u5217\u8868\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636e\u5c5e\u6027\u67e5\u8be2\u6240\u6709\u6570\u636e\u5217\u8868\uff0c\u5e76\u8fdb\u884c\u5206\u9875\")\n    @PostMapping(value = \"/queryListByEntity/{pageIndex}/{pageSize}\")\n    public Result<?> queryListByEntity(@PathVariable Integer pageIndex, @PathVariable Integer pageSize, @RequestBody T entity) {\n        if (entity == null) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        Page<T> page = new Page<>(pageIndex, pageSize);\n        IPage<T> pageListByEntity = service.pageListByEntity(page, entity);\n        if (pageListByEntity == null) {\n            return Result.error(\"\u672a\u627e\u5230\u5bf9\u5e94\u6570\u636e\");\n        }\n        return Result.ok(pageListByEntity);\n    }\n    \n    /**\n     * \u6839\u636eID\u96c6\u5408\u6765\u67e5\u8be2\u6240\u6709\u6570\u636e\u5217\u8868\n     * \n     * @param ids ID\u96c6\u5408\n     * @return \u6240\u6709\u6570\u636e\u5217\u8868\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636eID\u96c6\u5408\u6765\u67e5\u8be2\u6240\u6709\u6570\u636e\u5217\u8868\")\n    @GetMapping(value = \"/queryListByIds/{ids}\")\n    public Result<?> queryListByIds(@PathVariable String ids) {\n        if (ids == null || ids.trim().length() == 0) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        List<T> entityList = service.listByIds(Arrays.asList(ids.split(\",\")));\n        if (entityList == null || entityList.size() == 0) {\n            return Result.error(\"\u672a\u627e\u5230\u5bf9\u5e94\u6570\u636e\");\n        }\n        return Result.ok(entityList);\n    }\n    \n    /**\n     * \u6839\u636eID\u6765\u67e5\u8be2\u5355\u6761\u6570\u636e\n     * \n     * @param id ID\n     * @return \u5355\u6761\u6570\u636e\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636eID\u6765\u67e5\u8be2\u5355\u6761\u6570\u636e\")\n    @GetMapping(value = \"/queryOneById/{id}\")\n    public Result<?> queryOneById(@PathVariable String id) {\n        if (id == null || id.trim().length() == 0) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        T entity = service.getById(id);\n        if (entity == null) {\n            return Result.error(\"\u672a\u627e\u5230\u5bf9\u5e94\u6570\u636e\");\n        }\n        return Result.ok(entity);\n    }\n    \n    /**\n     * \u6dfb\u52a0\u4e00\u6761\u6570\u636e\n     * \n     * @param entity \u5b9e\u4f53\u5bf9\u8c61\n     * @return \u64cd\u4f5c\u7ed3\u679c\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6dfb\u52a0\u4e00\u6761\u6570\u636e\")\n    @PostMapping(value = \"/addOneEntity\")\n    public Result<?> addOneEntity(@RequestBody T entity) {\n        if (entity == null) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        boolean rlt = service.save(entity);\n        if (rlt) {\n            return Result.ok();\n        } else {\n            return Result.error(\"\u64cd\u4f5c\u5931\u8d25\");\n        }\n    }\n    \n    /**\n     * \u6dfb\u52a0\u4e00\u6761\u6216\u591a\u6761\u6570\u636e\n     * \n     * @param entityList \u5b9e\u4f53\u5bf9\u8c61\u96c6\u5408\n     * @return \u64cd\u4f5c\u7ed3\u679c\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6dfb\u52a0\u4e00\u6761\u6216\u591a\u6761\u6570\u636e\")\n    @PostMapping(value = \"/addBatchEntity\")\n    public Result<?> addBatchEntity(@RequestBody List<T> entityList) {\n        if (entityList == null || entityList.size() == 0) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        boolean rlt = service.saveBatch(entityList);\n        if (rlt) {\n            return Result.ok();\n        } else {\n            return Result.error(\"\u64cd\u4f5c\u5931\u8d25\");\n        }\n    }\n    \n    /**\n     * \u6839\u636eID\u6765\u4fee\u6539\u4e00\u6761\u6570\u636e\n     * \n     * @param id ID\n     * @return \u64cd\u4f5c\u7ed3\u679c\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636eID\u6765\u4fee\u6539\u4e00\u6761\u6570\u636e\")\n    @PutMapping(value = \"/updateOneById/{id}\")\n    public Result<?> updateOneById(@PathVariable String id) {\n        if (id == null || id.trim().length() == 0) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        T entity = service.getById(id);\n        if (entity == null) {\n            return Result.error(\"\u672a\u627e\u5230\u5bf9\u5e94\u6570\u636e\");\n        }\n        boolean rlt = service.updateById(entity);\n        if (rlt) {\n            return Result.ok();\n        } else {\n            return Result.error(\"\u64cd\u4f5c\u5931\u8d25\");\n        }\n    }\n    \n    /**\n     * \u6839\u636e\u5b9e\u4f53\u4e2d\u7684\u5c5e\u6027\u6765\u4fee\u6539\u4e00\u6761\u6570\u636e\n     * \n     * @param entity \u5b9e\u4f53\u5bf9\u8c61\n     * @return \u64cd\u4f5c\u7ed3\u679c\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636e\u5b9e\u4f53\u4e2d\u7684\u5c5e\u6027\u6765\u4fee\u6539\u4e00\u6761\u6570\u636e\")\n    @PutMapping(value = \"/updateOneByEntity\")\n    public Result<?> updateOneByEntity(@RequestBody T entity) {\n        if (entity == null) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        boolean rlt = service.update(entity, Wrappers.<T>query().eq(\"id\", entity.getId()));\n        if (rlt) {\n            return Result.ok();\n        } else {\n            return Result.error(\"\u64cd\u4f5c\u5931\u8d25\");\n        }\n    }\n    \n    /**\n     * \u6839\u636eID\u6765\u4fee\u6539\u4e00\u6761\u6216\u591a\u6761\u6570\u636e\n     * \n     * @param entityList \u5b9e\u4f53\u5bf9\u8c61\u96c6\u5408\n     * @return \u64cd\u4f5c\u7ed3\u679c\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636eID\u6765\u4fee\u6539\u4e00\u6761\u6216\u591a\u6761\u6570\u636e\")\n    @PutMapping(value = \"/updateBatchById\")\n    public Result<?> updateBatchById(@RequestBody List<T> entityList) {\n        if (entityList == null || entityList.size() == 0) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        boolean rlt = service.updateBatchById(entityList);\n        if (rlt) {\n            return Result.ok();\n        } else {\n            return Result.error(\"\u64cd\u4f5c\u5931\u8d25\");\n        }\n    }\n    \n    /**\n     * \u6839\u636eID\u6765\u5220\u9664\u4e00\u6761\u6570\u636e\n     * \n     * @param id ID\n     * @return \u64cd\u4f5c\u7ed3\u679c\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636eID\u6765\u5220\u9664\u4e00\u6761\u6570\u636e\")\n    @DeleteMapping(value = \"/deleteOneById/{id}\")\n    public Result<?> deleteOneById(@PathVariable String id) {\n        if (id == null || id.trim().length() == 0) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        T entity = service.getById(id);\n        if (entity == null) {\n            return Result.error(\"\u672a\u627e\u5230\u5bf9\u5e94\u6570\u636e\");\n        }\n        boolean rlt = service.removeById(id);\n        if (rlt) {\n            return Result.ok();\n        } else {\n            return Result.error(\"\u64cd\u4f5c\u5931\u8d25\");\n        }\n    }\n    \n    /**\n     * \u6839\u636eID\u96c6\u5408\u6765\u5220\u9664\u591a\u6761\u6570\u636e\n     * \n     * @param idList ID\u96c6\u5408\n     * @return \u64cd\u4f5c\u7ed3\u679c\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636eID\u96c6\u5408\u6765\u5220\u9664\u591a\u6761\u6570\u636e\")\n    @DeleteMapping(value = \"/deleteBatchByIds/{idList}\")\n    public Result<?> deleteBatchByIds(@PathVariable String idList) {\n        if (StringUtils.isBlank(idList)) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        List<T> entityList = service.listByIds(Arrays.asList(idList.split(\",\")));\n        if (entityList == null || entityList.size() == 0) {\n            return Result.error(\"\u672a\u627e\u5230\u5bf9\u5e94\u6570\u636e\");\n        }\n        boolean rlt = service.removeByIds(Arrays.asList(idList.split(\",\")));\n        if (rlt) {\n            return Result.ok();\n        } else {\n            return Result.error(\"\u64cd\u4f5c\u5931\u8d25\");\n        }\n    }\n    \n    /**\n     * \u6839\u636eID\u6765\u5220\u9664\u4e00\u6761\u6570\u636e\u5e76\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5220\u9664\u6210\u529f\n     * \n     * @param id ID\n     * @return \u64cd\u4f5c\u7ed3\u679c\n     */\n    @AutoLog(value = \"\u901a\u7528\u63a5\u53e3\")\n    @ApiOperation(\"\u6839\u636eID\u6765\u5220\u9664\u4e00\u6761\u6570\u636e\u5e76\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5220\u9664\u6210\u529f\")\n    @DeleteMapping(value = \"/deleteOneByIdAndValid/{id}\")\n    public Result<?> deleteOneByIdAndValid(@PathVariable String id) {\n        if (id == null || id.trim().length() == 0) {\n            return Result.error(\"\u53c2\u6570\u9519\u8bef\");\n        }\n        T entity = service.getById(id);\n        if (entity == null) {\n            return Result.error(\"\u672a\u627e\u5230\u5bf9\u5e94\u6570\u636e\");\n        }\n        boolean rlt = service.removeById(id);\n        if (rlt) {\n            return Result.ok();\n        } else {\n            return Result.error(\"\u64cd\u4f5c\u5931\u8d25,\u8be5\u6570\u636e\u4e0b\u9762\u8fd8\u6709\u5b50\u7ea7\");\n        }\n    }\n}",
        "package ${basePackageName}.${subPackage};\n\nimport org.apache.poi.ss.usermodel.*;\nimport org.jeecgframework.poi.excel.ExcelExportUtil;\nimport org.jeecgframework.poi.excel.def.NormalExcelConstants;\nimport org.springframework.web.servlet.ModelAndView;\n\npublic class JeecgEntityExcelView extends AbstractExcelView {\n    public void buildExcelDocument(Map<String, Object> model, HSSFWorkbook workbook, HttpServletRequest request, HttpServletResponse response) throws Exception {\n        // Step.1 \u83b7\u53d6\u6570\u636e\n        List<Map<String, Object>> list = (List<Map<String, Object>>)model.get(NormalExcelConstants.MAP_LIST);\n        // Step.2 \u89e3\u6790\u6a21\u677f\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"list\",list);\n        ModelAndView mv=new ModelAndView();\n        //update-begin--Author:scott  Date:20191023 for\uff1aexcel\u5bfc\u51fa\uff0c\u5bfc\u51fa\u5217\u8868\u5934\u7684\u95ee\u9898------\n        String title = request.getParameter(NormalExcelConstants.FILE_NAME);//\u6587\u4ef6\u540d\u79f0\n        if (title != null && !title.equals(\"\")) {\n            mv.addObject(NormalExcelConstants.TITLE, title);\n        }\n        //update-end--Author:scott  Date:20191023 for\uff1aexcel\u5bfc\u51fa\uff0c\u5bfc\u51fa\u5217\u8868\u5934\u7684\u95ee\u9898------\n        // Step.3 \u751f\u6210\u6587\u4ef6\n        ExcelExportUtil.exportExcel(mv, workbook, request, response);\n    }\n}\n    \n\n### Service:",
        "\npackage org.jeecg.common.system.base.controller;\n\nimport com.alibaba.fastjson.JSONObject;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.poi.ss.formula.functions.T;\nimport org.jeecg.common.api.vo.Result;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n@Api(tags=\"jeecg-controller\")\n@RestController\n@Slf4j\npublic class JeecgController {\n    @Autowired\n    private T service;\n    /**\n     * \u83b7\u53d6\u6570\u636e\u5217\u8868\n     */\n    @GetMapping(\"/getList\")\n    public Result<?> query(HttpServletRequest request, HttpServletResponse response, T t) throws IOException{\n        return null;\n    }\n}\n",
        "package org.jeecg.modules.demo.vo;\n\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.Data;\n\nimport java.io.Serializable;\n\n/**\n * \u90e8\u95e8\u6a21\u5757-Vo\u5bf9\u8c61\n * @author scott\n * @date 2019-08-13\n */\n@Data\npublic class DepartmentVO implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    /** \u4e3b\u952eID */\n    @ApiModelProperty(value = \"\u4e3b\u952eID\")\n    private java.lang.String id;\n\n    /** \u4e0a\u7ea7\u90e8\u95e8id */\n    @ApiModelProperty(value = \"\u4e0a\u7ea7\u90e8\u95e8id\")\n    private java.lang.String parentId;\n\n    /** \u90e8\u95e8\u540d\u79f0 */\n    @ApiModelProperty(value = \"\u90e8\u95e8\u540d\u79f0\")\n    private java.lang.String name;\n}",
        "\n\n\n### Test:",
        "Timeout"
    ]
}