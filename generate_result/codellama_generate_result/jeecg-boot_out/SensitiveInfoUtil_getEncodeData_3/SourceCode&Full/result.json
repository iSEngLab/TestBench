{
    "project_name": "jeecg-boot",
    "file_name": "SensitiveInfoUtil.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/desensitization/util/SensitiveInfoUtil.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.desensitization.util",
    "docstring": "/**\n     * \u5904\u7406\u6570\u636e \u83b7\u53d6\u52a0\u5bc6\u540e\u7684\u6570\u636e \u6216\u662f\u683c\u5f0f\u5316\u540e\u7684\u6570\u636e\n     * @param data \u5b57\u7b26\u4e32\n     * @param sensitiveEnum \u7c7b\u578b\n     * @return \u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\n     */",
    "source_code": "\npublic static String getEncodeData(String data, SensitiveEnum sensitiveEnum){\n    String result;\n    switch (sensitiveEnum){\n        case ENCODE:\n            try {\n                result = AesEncryptUtil.encrypt(data);\n            } catch (Exception exception) {\n                log.error(\"\u6570\u636e\u52a0\u5bc6\u9519\u8bef\", exception.getMessage());\n                result = data;\n            }\n            break;\n        case CHINESE_NAME:\n            result = chineseName(data);\n            break;\n        case ID_CARD:\n            result = idCardNum(data);\n            break;\n        case FIXED_PHONE:\n            result = fixedPhone(data);\n            break;\n        case MOBILE_PHONE:\n            result = mobilePhone(data);\n            break;\n        case ADDRESS:\n            result = address(data, 3);\n            break;\n        case EMAIL:\n            result = email(data);\n            break;\n        case BANK_CARD:\n            result = bankCard(data);\n            break;\n        case CNAPS_CODE:\n            result = cnapsCode(data);\n            break;\n        default:\n            result = data;\n    }\n    return result;\n}\n",
    "class_name": "SensitiveInfoUtil",
    "method_name": "getEncodeData",
    "arguments": [
        "String data",
        "SensitiveEnum sensitiveEnum"
    ],
    "generate_test": [
        "package com.github.jeasyrest;\n\nimport java.util.*;\n\n/**\n * <Class Comment>\n */\npublic class SensitiveInfoUtil extends BaseSensitiveInfoUtil {\n\n    private static Map<String, IRsaKey> rsaKeys = new HashMap<>();\n\n    \n    public static void setRsaKeys(Map<String, IRsaKey> rsaKeys) {\n        SensitiveInfoUtil.rsaKeys = rsaKeys;\n    }\n\n    @Override\n    protected byte[] encryptData(byte[] plainText, String keyId){\n        if(!rsaKeys.containsKey(keyId)) throw new RuntimeException(\"Invalid RSA Key ID\");\n        \n        return super.encryptData(plainText, rsaKeys.get(keyId));\n    }\n}\n    \n\n### JUNIT Test case:\npackage org.jeecg.common.desensitization.util;\n\nimport java.security.*;\nimport java.util.*;\n\npublic class SensitiveInfoUtilTest {\n    \n    @Test\n    public void testEncode(){\n        <FILL>\n    }\n}\n    ",
        "package org.jeecg.common.desensitization.util;\n\nimport java.util.*;\n\npublic class SensitiveInfoUtil {\n\n  /**\n   * \u83b7\u53d6\u5404\u654f\u611f\u4fe1\u606f\u7684\u7f16\u7801\u7ed3\u679c\n   * @param sensitiveType \u654f\u611f\u7c7b\u578b\n   * @param data \u9700\u8981\u8fdb\u884c\u7f16\u7801\u7684\u6570\u636e\n   * @return \u7f16\u7801\u540e\u7684\u7ed3\u679c\n   */\n    public static String encode(String sensitiveType, String data){\n        return null;\n    }\n}\n\n    ",
        "package org.jeecg.common.desensitization.util;\n\nimport java.time.LocalDate;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Random;\nimport java.util.stream.Collectors;\n\n/**\n * \u654f\u611f\u4fe1\u606f\u8131\u654f\u5de5\u5177\u7c7b\n */\npublic class SensitiveInfoUtil {\n    public static final int SENSITIVE_SIZE = 4;\n\n    /**\n     * [\u4e2d\u6587\u540d] \u53ea\u663e\u793a\u7b2c\u4e00\u4e2a\u6c49\u5b57\uff0c\u5176\u4ed6\u9690\u85cf\u4e3a2\u4e2a\u661f\u53f7<\u4f8b\u5b50\uff1a**\u674e>\n     * @param fullName \u59d3\u540d\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u59d3\u540d\n     */\n    public static String chineseName(String fullName) {\n        if (oConvertUtils.isEmpty(fullName)) {\n            return \"\";\n        }\n        String name = fullName.substring(0, 1);\n        String stars = \"**\";\n        return name + stars;\n    }\n\n    /**\n     * [\u8eab\u4efd\u8bc1\u53f7] \u663e\u793a\u6700\u540e\u56db\u4f4d\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u5171\u8ba118\u4f4d\u6216\u800515\u4f4d\u3002<\u4f8b\u5b50\uff1a*************5762>\n     * @param idCardNum \u8eab\u4efd\u8bc1\u53f7\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8eab\u4efd\u8bc1\u53f7\n     */\n    public static String idCardNum(String idCardNum) {\n        if (oConvertUtils.isEmpty(idCardNum)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(idCardNum, idCardNum.length()-sensitiveSize);\n    }\n\n    /**\n     * [\u56fa\u5b9a\u7535\u8bdd] \u540e\u56db\u4f4d\uff0c\u5176\u4ed6\u9690\u85cf\u3002<\u4f8b\u5b50\uff1a****1234>\n     * @param phoneNum \u56fa\u5b9a\u7535\u8bdd\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u56fa\u5b9a\u7535\u8bdd\u53f7\u7801\n     */\n    public static String fixedPhone(String phoneNum) {\n        if (oConvertUtils.isEmpty(phoneNum)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(phoneNum, phoneNum.length()-sensitiveSize);\n    }\n\n    /**\n     * [\u624b\u673a\u53f7\u7801] \u524d\u4e09\u4f4d\uff0c\u540e\u56db\u4f4d\uff0c\u5176\u4ed6\u9690\u85cf\u3002<\u4f8b\u5b50:138******1234>\n     * @param mobilePhone \u79fb\u52a8\u7535\u8bdd\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u79fb\u52a8\u7535\u8bdd\u53f7\u7801\n     */\n    public static String mobilePhone(String mobilePhone) {\n        if (oConvertUtils.isEmpty(mobilePhone)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        String name = mobilePhone.substring(0, 3);\n        String end = formatRight(mobilePhone,4);\n        String stars = String.join(\"\", Collections.nCopies(mobilePhone.length()-sensitiveSize*2,\"*\"));\n        return name + stars + end;\n    }\n\n    /**\n     * [\u5730\u5740] \u53ea\u663e\u793a\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002<\u4f8b\u5b50\uff1a******1\u5f04>\n     * @param address \u5730\u5740\u4fe1\u606f\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u5730\u5740\u4fe1\u606f\n     */\n    public static String address(String address) {\n        if (oConvertUtils.isEmpty(address)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(address,sensitiveSize);\n    }\n\n    /**\n     * [\u7535\u5b50\u90ae\u7bb1] \u90ae\u7bb1\u524d\u7f00\u4ec5\u663e\u793a\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u524d\u7f00\u5176\u4ed6\u9690\u85cf\uff0c\u7528\u661f\u53f7\u4ee3\u66ff\uff0c@\u53ca\u540e\u9762\u7684\u5730\u5740\u663e\u793a<\u4f8b\u5b50:g**@163.com>\n     * @param email \u7535\u5b50\u90ae\u7bb1\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u7535\u5b50\u90ae\u7bb1\n     */\n    public static String email(String email) {\n        if (oConvertUtils.isEmpty(email)) {\n            return \"\";\n        }\n        String name = email.substring(0,1);\n        String stars = \"**\";\n        return name+stars+email.substring(1);\n    }\n\n    /**\n     * [\u751f\u65e5\u671f] \u53ea\u663e\u793a\u5e74\u4efd\u6708\u3002\u4f8b\u5982\uff1a19****52>\n     * @param birthday \u51fa\u751f\u65e5\u671f\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u51fa\u751f\u65e5\u671f\n     */\n    public static String birthday(String birthday) {\n        if (oConvertUtils.isEmpty(birthday)) {\n            return \"\";\n        }\n        String year = birthday.substring(0,4);\n        String monthDay = birthday.substring(8);\n        String stars = \"******\";\n        return year+stars+monthDay;\n    }\n\n    /**\n     * [\u5176\u4ed6] \u4fdd\u7559\u539f\u59cb\u4fe1\u606f\u3002\u4f8b\u5982\uff1a123456789>\n     * @param otherInfo \u5176\u4ed6\u4fe1\u606f\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u5176\u4ed6\u4fe1\u606f\n     */\n    public static String otherInfo(String otherInfo) {\n        if (oConvertUtils.isEmpty(otherInfo)) {\n            return \"\";\n        }\n        return otherInfo;\n    }\n\n    /**\n     * [\u516c\u53f8\u540d\u79f0] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1aABC*************XYZ>\n     * @param companyName \u516c\u53f8\u540d\u79f0\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u516c\u53f8\u540d\u79f0\n     */\n    public static String companyName(String companyName) {\n        if (oConvertUtils.isEmpty(companyName)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        String name = companyName.substring(0, 3);\n        String stars = \"******\";\n        String end = formatRight(companyName,3+sensitiveSize);\n        return name + stars + end;\n    }\n\n    /**\n     * [\u94f6\u5c40\u7f16\u53f7] \u53ea\u663e\u793a\u6700\u540e\u56db\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param bankNumber \u94f6\u5c40\u7f16\u53f7\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u94f6\u5c40\u7f16\u53f7\n     */\n    public static String bankNumber(String bankNumber) {\n        if (oConvertUtils.isEmpty(bankNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(bankNumber,4+sensitiveSize);\n    }\n\n    /**\n     * [\u94f6\u540d\u79f0] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1aABC*************XYZ>\n     * @param bankName \u94f6\u884c\u5168\u540d\u79f0\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u94f6\u884c\u5168\u540d\u79f0\n     */\n    public static String bankName(String bankName) {\n        if (oConvertUtils.isEmpty(bankName)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        String name = bankName.substring(0, 3);\n        String stars = \"******\";\n        String end = formatRight(bankName, 3+sensitiveSize);\n        return name + stars + end;\n    }\n\n    /**\n     * [\u94f6\u8d26\u6237] \u53ea\u663e\u793a\u6700\u540e\u56db\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param bankAccountNumber \u94f6\u884c\u8d26\u53f7\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u94f6\u884c\u8d26\u6237\n     */\n    public static String bankAccountNumber(String bankAccountNumber) {\n        if (oConvertUtils.isEmpty(bankAccountNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(bankAccountNumber, 4+sensitiveSize);\n    }\n\n    /**\n     * [\u8bc1\u4ef6\u7f16\u53f7] \u53ea\u663e\u793a\u6700\u540e\u56db\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param certificateId \u8bc1\u4ef6\u7f16\u53f7\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8bc1\u4ef6\u7f16\u53f7\n     */\n    public static String certificateNumber(String certificateNumber) {\n        if (oConvertUtils.isEmpty(certificateNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(certificateNumber, 4+sensitiveSize);\n    }\n\n    /**\n     * [\u94f6\u8d26\u6237] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param bankAccountName \u94f6\u884c\u8d26\u6237\u540d\u79f0\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u94f6\u884c\u8d26\u6237\u540d\u79f0\n     */\n    public static String bankAccountName(String bankAccountName) {\n        if (oConvertUtils.isEmpty(bankAccountName)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        String name = bankAccountName.substring(0, 3);\n        String stars = \"******\";\n        String end = formatRight(bankAccountName, 3+sensitiveSize);\n        return name + stars + end;\n    }\n\n    /**\n     * [\u94f6\u5361\u53f7] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param licensePlateNumber \u94f6\u724c\u7f16\u53f7\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u94f6\u724c\u7f16\u53f7\n     */\n    public static String licensePlateNumber(String licensePlateNumber) {\n        if (oConvertUtils.isEmpty(licensePlateNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(licensePlateNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u94f6\u7bb1\u7f16\u53f7] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param vehicleNumber \u8f66\u8f86\u7f16\u53f7\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8f66\u8f86\u7f16\u53f7\n     */\n    public static String vehicleNumber(String vehicleNumber) {\n        if (oConvertUtils.isEmpty(vehicleNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(vehicleNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u94f6\u7bb1\u7f16\u53f7] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param vehicleLicensePlateNumber \u8f66\u8f86\u724c\u7f16\u53f7\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8f66\u8f86\u724c\u7f16\u53f7\n     */\n    public static String vehicleLicensePlateNumber(String vehicleLicensePlateNumber) {\n        if (oConvertUtils.isEmpty(vehicleLicensePlateNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(vehicleLicensePlateNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u8bc1\u4ef6\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param certificateIdNumber \u8bc1\u4ef6\u7f16\u53f7\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8bc1\u4ef6\u7f16\u53f7\u53f7\u7801\n     */\n    public static String certificateIdNumber(String certificateIdNumber) {\n        if (oConvertUtils.isEmpty(certificateIdNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(certificateIdNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u8bc1\u4ef6\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param certificateSerialNumber \u8bc1\u4e66\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8bc1\u4ef6\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String certificateSerialNumber(String certificateSerialNumber) {\n        if (oConvertUtils.isEmpty(certificateSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(certificateSerialNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u8bc1\u4e66\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a1123456789>\n     * @param certificateIdNumberAndSerialNumber \u8bc1\u4ef6\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8bc1\u4e66\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String certificateIdNumberAndSerialNumber(String certificateIdNumberAndSerialNumber) {\n        if (oConvertUtils.isEmpty(certificateIdNumberAndSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(certificateIdNumberAndSerialNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u8bc1\u4ef6\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param licensePlateNumberAndSerialNumber \u94f6\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u94f6\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String licensePlateNumberAndSerialNumber(String licensePlateNumberAndSerialNumber) {\n        if (oConvertUtils.isEmpty(licensePlateNumberAndSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(licensePlateNumberAndSerialNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u8bc1\u4e66\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param vehicleLicensePlateNumberAndSerialNumber \u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String vehicleLicensePlateNumberAndSerialNumber(String vehicleLicensePlateNumberAndSerialNumber) {\n        if (oConvertUtils.isEmpty(vehicleLicensePlateNumberAndSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(vehicleLicensePlateNumberAndSerialNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u8bc1\u4e66\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param vehicleCertificateIdNumberAndSerialNumber \u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String vehicleCertificateIdNumberAndSerialNumber(String vehicleCertificateIdNumberAndSerialNumber) {\n        if (oConvertUtils.isEmpty(vehicleCertificateIdNumberAndSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(vehicleCertificateIdNumberAndSerialNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u94f6\u724c\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param licensePlateNumberAndSerialNumber \u94f6\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u94f6\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String licensePlateNumberAndSerialNumber(String licensePlateNumberAndSerialNumber) {\n        if (oConvertUtils.isEmpty(licensePlateNumberAndSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(licensePlateNumberAndSerialNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u8bc1\u4e66\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param vehicleCertificateIdNumberAndSerialNumber \u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String vehicleCertificateIdNumberAndSerialNumber(String vehicleCertificateIdNumberAndSerialNumber) {\n        if (oConvertUtils.isEmpty(vehicleCertificateIdNumberAndSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(vehicleCertificateIdNumberAndSerialNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u94f6\u724c\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param vehicleCertificateIdNumberAndSerialNumber \u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String vehicleLicensePlateNumberAndCertificateIdNumberAndSerialNumber(String vehicleLicensePlateNumberAndCertificateIdNumberAndSerialNumber) {\n        if (oConvertUtils.isEmpty(vehicleLicensePlateNumberAndCertificateIdNumberAndSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(vehicleLicensePlateNumberAndCertificateIdNumberAndSerialNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u94f6\u724c\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param vehicleCertificateIdNumberAndSerialNumber \u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String vehicleCertificateIdNumberAndSerialNumber(String vehicleCertificateIdNumberAndSerialNumber) {\n        if (oConvertUtils.isEmpty(vehicleCertificateIdNumberAndSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(vehicleCertificateIdNumberAndSerialNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u8bc1\u4e66\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param vehicleCertificateIdNumberAndSerialNumber \u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String licensePlateNumberAndCertificateIdNumberAndSerialNumber(String vehicleCertificateIdNumberAndSerialNumber) {\n        if (oConvertUtils.isEmpty(vehicleCertificateIdNumberAndSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(vehicleCertificateIdNumberAndSerialNumber, 3+sensitiveSize);\n    }\n\n    /**\n     * [\u8bc1\u4e66\u53f7\u7801] \u53ea\u663e\u793a\u524d\u4e09\u4f4d\u5b57\u7b26\uff0c\u5176\u4ed6\u9690\u85cf\u3002\u4f8b\u5982\uff1a123456789>\n     * @param vehicleCertificateIdNumberAndSerialNumber \u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     * @return \u683c\u5f0f\u5316\u540e\u7684\u8f66\u8f86\u724c\u7f16\u53f7\u5e8f\u5217\u53f7\u7801\n     */\n    public static String vehicleLicensePlateNumberAndCertificateIdNumberAndSerialNumber(String vehicleLicensePlateNumberAndCertificateIdNumberAndSerialNumber) {\n        if (oConvertUtils.isEmpty(vehicleLicensePlateNumberAndCertificateIdNumberAndSerialNumber)) {\n            return \"\";\n        }\n        int sensitiveSize = SENSITIVE_SIZE;\n        return formatRight(vehicleLicensePlateNumberAndCertificateIdNumberAndSerialNumber, 3+sensitiveSize);\n    }\n\n}\n",
        "import com.alibaba.fastjson.JSON;\nimport org.jeecg.common.desensitization.enums.SensitiveTypeEnum;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    private String name = \"\u5f20\u4e09\";\n    @Test\n    public void getEncodeDataTest() {\n        <FILL>\n    }\n}\n\n### Response:",
        "package org.jeecg.common.desensitization.util;\n\nimport java.io.*;\nimport java.net.URLDecoder;\nimport java.nio.charset.StandardCharsets;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class SensitiveInfoUtil {\n    /**\n     * \u654f\u611f\u4fe1\u606f\u8131\u654f\u5904\u7406\n     */\n    private static final Map<String, Integer> DESENSITIZATION_MAP = new HashMap<>();\n    static {\n        // [\u59d3\u540d] \u4e2d\u95f4\u4e24\u4e2a\u5b57\u663e\u793a\u661f\u53f7\uff0c\u975e\u4e25\u683c\u6a21\u5f0f\u4e0b\u5168\u90e8\u66ff\u6362\u6210\u661f\u53f7\uff0c\u4f8b\u5982\uff1a**\u674e**\n        DESENSITIZATION_MAP.put(\"name\", 2);\n        // [\u8eab\u4efd\u8bc1] \u663e\u793a\u6700\u540e\u56db\u4f4d\n        DESENSITIZATION_MAP.put(\"idCardNum\", 4);\n        // [\u94f6\u884c\u5361\u53f7] \u524d\u516d\u4f4d\uff0c\u540e\u56db\u4f4d\uff0c\u5176\u4ed6\u7528\u661f\u53f7\u9690\u85cf\u6bcf\u4f4d1\u4e2a\u661f\u53f7\n        DESENSITIZATION_MAP.put(\"bankCard\", 6);\n    }\n\n    /**\n     * \u8131\u654f\u5904\u7406\n     */\n    public static String getEncodeData(String data) {\n        if (oConvertUtils.isEmpty(data)) {\n            return \"\";\n        }\n        Map<String, Integer> desensitizationMap = new HashMap<>();\n        desensitizationMap.putAll(DESENSITIZATION_MAP);\n        List<Integer> positions = getPositions(desensitizationMap, data);\n        if (positions == null) {\n            return \"\";\n        }\n        String result = \"\";\n        try {\n            byte[] bytes = data.getBytes(\"utf-8\");\n            for (int i = 0; i < positions.size(); i++) {\n                int position = positions.get(i);\n                // \u8131\u654f\u4f4d\u7f6e\u540e\u9762\u7684\u5185\u5bb9\u957f\u5ea6\n                int length = bytes.length - position;\n                if (length > 0) {\n                    byte[] dest = new byte[length];\n                    System.arraycopy(bytes, position, dest, 0, length);\n                    result += URLDecoder.decode(new String(dest), \"utf-8\");\n                }\n            }\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n        }\n        return result;\n    }\n\n    /**\n     * \u83b7\u53d6\u8131\u654f\u5b57\u6bb5\u7684\u4f4d\u7f6e\n     */\n    private static List<Integer> getPositions(Map<String, Integer> desensitizationMap, String data) {\n        // \u8bb0\u5f55\u8131\u654f\u5b57\u6bb5\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0b\u6807\n        List<Integer> positions = new ArrayList<>();\n        // \u904d\u5386\u6240\u6709\u8131\u654f\u5b57\u6bb5\n        for (String key : desensitizationMap.keySet()) {\n            int startIndex = data.indexOf(key);\n            while (startIndex != -1) {\n                positions.add(startIndex + key.length());\n                startIndex = data.indexOf(key, startIndex + 1);\n            }\n        }\n        return positions;\n    }\n}\n    \n\n### JUNIT Test case:\npackage org.jeecg.common.desensitization.util;\n\nimport java.io.*;\nimport java.net.URLDecoder;\nimport java.nio.charset.StandardCharsets;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class SensitiveInfoUtilTest {\n    /**\n     * \u654f\u611f\u4fe1\u606f\u8131\u654f\u5904\u7406\n     */\n    private static final Map<String, Integer> DESENSITIZATION_MAP = new HashMap<>();\n    static {\n        // [\u59d3\u540d] \u4e2d\u95f4\u4e24\u4e2a\u5b57\u7b26\u663e\u793a\u661f\u53f7\uff0c\u975e\u4e25\u683c\u6a21\u5f0f\u4e0b\u5168\u90e8\u66ff\u6362\u6210\u661f\u53f7\uff0c\u4f8b\u5982\uff1a**\u674e**\n        DESENSITIZATION_MAP.put(\"name\", 2);\n        // [\u8eab\u4efd\u8bc1] \u663e\u793a\u6700\u540e\u56db\u4f4d\n        DESENSITIZATION_MAP.put(\"idCardNum\", 4);\n    }\n\n    /**\n     * \u8131\u654f\u5904\u7406\n     */\n    public static String getEncodeData(String data) {\n        if (oConvertUtils.isEmpty(data)) {\n            return \"\";\n        }\n        Map<String, Integer> desensitizationMap = new HashMap<>();\n        desensitizationMap.putAll(DESENSITIZATION_MAP);\n        List<Integer> positions = getPositions(desensitizationMap, data);\n        if (positions == null) {\n            return \"\";\n        }\n        String result = \"\";\n        try {\n            byte[] bytes = data.getBytes(\"utf-8\");\n            for (int i = 0; i < positions.size(); i++) {\n                int position = positions.get(i);\n                // \u8131\u654f\u4f4d\u7f6e\u540e\u9762\u7684\u5185\u5bb9\u957f\u5ea6\n                int length = bytes.length - position;\n                if (length > 0) {\n                    byte[] dest = new byte[length];\n                    System.arraycopy(bytes, position, dest, 0, length);\n                    result += URLDecoder.decode(new String(dest, StandardCharsets.UTF_8), \"utf-8\");\n                }\n            }\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n        }\n        return result;\n    }\n\n    /**\n     * \u83b7\u53d6\u8131\u654f\u5b57\u6bb5\u7684\u4f4d\u7f6e\n     */\n    private static List<Integer> getPositions(Map<String, Integer> desensitizationMap, String data) {\n        // \u8bb0\u5f55\u8131\u654f\u5b57\u6bb5\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0b\u6807\n        List<Integer> positions = new ArrayList<>();\n        for (String key : desensitizationMap.keySet()) {\n            int startIndex = data.indexOf(key);\n            while (startIndex != -1) {\n                positions.add(startIndex + key.length());\n                startIndex = data.indexOf(key, startIndex + 1);\n            }\n        }\n        return positions;\n    }\n}",
        "package org.jeecg.common.desensitization;\n\nimport java.util.*;\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.jeecg.Application;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ActiveProfiles;\nimport org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.jeecg.common.desensitization.util.SensitiveInfoUtil;\nimport static org.junit.jupiter.api.Assertions.*;\n\n@RunWith(org.springframework.test.context.junit4.SpringRunner.class)\n@SpringBootTest()\npublic class SensitiveInfoUtilTest {\n    private String name = \"\u5c0f\u660e\";\n    private String address = \"\u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u6e05\u6cb3\u4e2d\u885710\u53f7\u9662\u529e\u516c\u697c3\u697c402\u5ba4\";\n    private String cardNum = \"6222600000000000005\";\n    private String phoneNumber = \"18501908087\";\n    private String email = \"g.wu@jeecg.com\";\n    private String cnapsCode = \"123456\";\n    \n    @Test\n    public void name() {\n        assertEquals(\"*\u660e\", SensitiveInfoUtil.name(this.name));\n    }\n\n    @Test\n    public void address() {\n        assertEquals(\"\u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u6e05\u6cb3\u4e2d\u885710\u53f7\u9662\u529e\u516c\u697c3\u697c402\u5ba4\", SensitiveInfoUtil.address(this.address));\n    }\n\n    @Test\n    public void bankCard() {\n        assertEquals(\"622260**********05\", SensitiveInfoUtil.bankCard(this.cardNum));\n    }\n\n    @Test\n    public void phoneNumber() {\n        assertEquals(\"185*****87\", SensitiveInfoUtil.phoneNumber(this.phoneNumber));\n    }\n    \n    @Test\n    public void email() {\n        assertEquals(\"g**@163.com\", SensitiveInfoUtil.email(this.email));\n    }\n    \n    @Test\n    public void cnapsCode() {\n        assertEquals(\"12********\", SensitiveInfoUtil.cnapsCode(this.cnapsCode));\n    }\n}",
        "package com.jeecg.common.desensitization;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void getEncodeDataTest() {\n        String name = \"Jec*y\";\n        int sensitiveSize = 3;\n        String desensitization = DesensitizationUtil.getName(name,sensitiveSize);\n        assertEquals(\"Je****y\",desensitization);\n    }\n}",
        "\npackage org.jeecg.common.desensitization;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * \u8131\u654f\u7b56\u7565\u63a5\u53e3\n */\npublic interface DesensitizeStrategy {\n    /**\n     * \u8131\u654f\u65b9\u6cd5\n     * @param dataMap \u5f85\u8131\u654f\u7684\u6570\u636eMap\uff0ckey\u4e3a\u5b57\u6bb5\u540d\u79f0\n     * @return Map<String, String> \u8131\u654f\u540e\u7684\u6570\u636eMap\n     */\n    public Map<String, String> desensitize(Map<String, String> dataMap);\n}",
        "\n",
        "package org.jeecg.common.desensitization.util;\n\nimport java.util.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void getEncodeDataTest() {\n        String name = \"\u5f20\u4e09\";\n        String idCard = \"123456789012345678\";\n        String phone = \"15812345678\";\n        String address = \"\u5317\u4eac\u5e02\u6d77\u6dc0\u533a\u4e2d\u5173\u6751\u5927\u88571\u53f7\u4e2d\u56fd\u94f6\u884c\u8425\u4e1a\u5385\";\n        String email = \"test@163.com\";\n        String bankCard = \"6222600524784593\";\n        String cnapsCode = \"1234567890\";\n        assertEquals(\"\u5f20********\", SensitiveInfoUtil.name(name));\n        assertEquals(\"123******78\", SensitiveInfoUtil.idCard(idCard));\n        assertEquals(\"158*****8\", SensitiveInfoUtil.phone(phone));\n        assertEquals(\"\u5317************\u5385\", SensitiveInfoUtil.address(address));\n        assertEquals(\"t****@163.com\", SensitiveInfoUtil.email(email));\n        assertEquals(\"622260***********93\", SensitiveInfoUtil.bankCard(bankCard));\n        assertEquals(\"12******8\", SensitiveInfoUtil.cnapsCode(cnapsCode));\n    }\n}"
    ]
}