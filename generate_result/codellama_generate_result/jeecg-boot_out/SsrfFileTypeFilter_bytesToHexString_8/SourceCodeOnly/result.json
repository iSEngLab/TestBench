{
    "project_name": "jeecg-boot",
    "file_name": "SsrfFileTypeFilter.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/util/filter/SsrfFileTypeFilter.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.util.filter",
    "docstring": "/**\n     * \u83b7\u5f97\u6587\u4ef6\u5934\u90e8\u5b57\u7b26\u4e32\n     *\n     * @param src\n     * @return\n     */",
    "source_code": "\nprivate static String bytesToHexString(byte[] src) {\n    StringBuilder stringBuilder = new StringBuilder();\n    if (src == null || src.length <= 0) {\n        return null;\n    }\n    for (int i = 0; i < src.length; i++) {\n        int v = src[i] & 0xFF;\n        String hv = Integer.toHexString(v);\n        if (hv.length() < 2) {\n            stringBuilder.append(0);\n        }\n        stringBuilder.append(hv);\n    }\n    return stringBuilder.toString();\n}\n",
    "class_name": "SsrfFileTypeFilter",
    "method_name": "bytesToHexString",
    "arguments": [
        "byte[] src"
    ],
    "generate_test": [
        "@Test\npublic void bytesToHexStringTest() {\n    byte[] src = new byte[]{(byte) 0xFF, (byte) 0xAA, (byte) 0x55};\n    String expected = \"ffaa55\";\n    assertEquals(expected, SsrfFileTypeFilter.bytesToHexString(src));\n}",
        "package org.jeecg.common.util.filter;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SsrfFileTypeFilterTest {\n    private SsrfFileTypeFilter filter = new SsrfFileTypeFilter();\n    \n    @Test\n    public void bytesToHexStringTest() {\n        byte[] input = new byte[] {0x01, 0x02, 0x03};\n        String expectedOutput = \"0x010203\";\n        \n        assertEquals(expectedOutput, filter.bytesToHexString(input));\n    }\n}",
        "package org.jeecg.common.util.filter;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SsrfFileTypeFilterTest {\n    @Test\n    public void bytesToHexStringTest() {\n        byte[] input = new byte[]{(byte) 0xFF, (byte) 0xF2, (byte) 0x3A};\n        String expectedOutput = \"FFF23A\";\n\n        assertEquals(expectedOutput, bytesToHexString(input));\n    }\n}",
        "\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SsrfFileTypeFilterTest {\n    @Test\n    public void bytesToHexStringTest() {\n        byte[] input = new byte[] { 0x12, 0x34, 0x56, 0x78 };\n        String expectedOutput = \"12345678\";\n        assertEquals(expectedOutput, bytesToHexString(input));\n    }\n}\n",
        "package org.jeecg.common.util.filter;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class SsrfFileTypeFilterTest {\n    @Test\n    public void bytesToHexStringTest() {\n        // Test with null input\n        assertNull(SsrfFileTypeFilter.bytesToHexString(null));\n\n        // Test with an empty array\n        byte[] emptyArray = {};\n        String expectedResult = \"\";\n        assertEquals(expectedResult, SsrfFileTypeFilter.bytesToHexString(emptyArray));\n\n        // Test with a single-byte array\n        byte[] singleByteArray = { (byte) 0xFF };\n        expectedResult = \"ff\";\n        assertEquals(expectedResult, SsrfFileTypeFilter.bytesToHexString(singleByteArray));\n\n        // Test with a multi-byte array\n        byte[] multiByteArray = { (byte) 0xAB, (byte) 0xCD, (byte) 0xEF };\n        expectedResult = \"abcdef\";\n        assertEquals(expectedResult, SsrfFileTypeFilter.bytesToHexString(multiByteArray));\n    }\n}",
        "package org.jeecg.common.util.filter;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.io.File;\n\npublic class SsrfFileTypeFilterTest {\n    @Test\n    public void bytesToHexStringTest() {\n        byte[] src = new byte[]{10, 20, 30};\n        String expected = \"0a141e\";\n        assertEquals(expected, SsrfFileTypeFilter.bytesToHexString(src));\n    }\n}",
        "package org.jeecg.common.util.filter;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SsrfFileTypeFilterTest {\n    @Test\n    public void bytesToHexStringTest() {\n        byte[] src = new byte[1];\n        String result = bytesToHexString(src);\n        assertEquals(\"00\", result);\n    }\n}",
        "\npackage org.jeecg.common.util.filter;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SsrfFileTypeFilterTest {\n    @Test\n    public void bytesToHexStringTest() {\n        byte[] input = new byte[16];\n        for (int i = 0; i < 16; i++) {\n            input[i] = (byte) (i + 1);\n        }\n        \n        String output = bytesToHexString(input);\n        assertEquals(\"0102030405060708090a0b0c0d\", output);\n    }\n}",
        "package org.jeecg.common.util.filter;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SsrfFileTypeFilterTest {\n    @Test\n    public void bytesToHexStringTest() {\n        byte[] input = new byte[2];\n        String expectedOutput = \"0x34\";\n\n        // Act\n        String actualOutput = SsrfFileTypeFilter.bytesToHexString(input);\n\n        // Assert\n        assertEquals(expectedOutput, actualOutput);\n    }\n}",
        "package org.jeecg.common.util.filter;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SsrfFileTypeFilterTest {\n    @Test\n    public void bytesToHexStringTest() {\n        byte[] input = new byte[3];\n        input[0] = 1;\n        input[1] = 2;\n        input[2] = 3;\n        String expectedOutput = \"010203\";\n\n        assertEquals(expectedOutput, bytesToHexString(input));\n    }\n}"
    ]
}