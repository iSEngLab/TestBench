Source code: 


private static String bytesToHexString(byte[] src) {
    StringBuilder stringBuilder = new StringBuilder();
    if (src == null || src.length <= 0) {
        return null;
    }
    for (int i = 0; i < src.length; i++) {
        int v = src[i] & 0xFF;
        String hv = Integer.toHexString(v);
        if (hv.length() < 2) {
            stringBuilder.append(0);
        }
        stringBuilder.append(hv);
    }
    return stringBuilder.toString();
}



No.1 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] src = new byte[]{(byte) 0xFF, (byte) 0xAA, (byte) 0x55};
    String expected = "ffaa55";
    assertEquals(expected, SsrfFileTypeFilter.bytesToHexString(src));
}


No.2 generated result --------------------------

package org.jeecg.common.util.filter;

import static org.junit.jupiter.api.Assertions.*;

public class SsrfFileTypeFilterTest {
    private SsrfFileTypeFilter filter = new SsrfFileTypeFilter();
    
    @Test
    public void bytesToHexStringTest() {
        byte[] input = new byte[] {0x01, 0x02, 0x03};
        String expectedOutput = "0x010203";
        
        assertEquals(expectedOutput, filter.bytesToHexString(input));
    }
}


No.3 generated result --------------------------

package org.jeecg.common.util.filter;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SsrfFileTypeFilterTest {
    @Test
    public void bytesToHexStringTest() {
        byte[] input = new byte[]{(byte) 0xFF, (byte) 0xF2, (byte) 0x3A};
        String expectedOutput = "FFF23A";

        assertEquals(expectedOutput, bytesToHexString(input));
    }
}


No.4 generated result --------------------------


import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SsrfFileTypeFilterTest {
    @Test
    public void bytesToHexStringTest() {
        byte[] input = new byte[] { 0x12, 0x34, 0x56, 0x78 };
        String expectedOutput = "12345678";
        assertEquals(expectedOutput, bytesToHexString(input));
    }
}



No.5 generated result --------------------------

package org.jeecg.common.util.filter;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

public class SsrfFileTypeFilterTest {
    @Test
    public void bytesToHexStringTest() {
        // Test with null input
        assertNull(SsrfFileTypeFilter.bytesToHexString(null));

        // Test with an empty array
        byte[] emptyArray = {};
        String expectedResult = "";
        assertEquals(expectedResult, SsrfFileTypeFilter.bytesToHexString(emptyArray));

        // Test with a single-byte array
        byte[] singleByteArray = { (byte) 0xFF };
        expectedResult = "ff";
        assertEquals(expectedResult, SsrfFileTypeFilter.bytesToHexString(singleByteArray));

        // Test with a multi-byte array
        byte[] multiByteArray = { (byte) 0xAB, (byte) 0xCD, (byte) 0xEF };
        expectedResult = "abcdef";
        assertEquals(expectedResult, SsrfFileTypeFilter.bytesToHexString(multiByteArray));
    }
}


No.6 generated result --------------------------

package org.jeecg.common.util.filter;

import static org.junit.jupiter.api.Assertions.*;
import java.io.File;

public class SsrfFileTypeFilterTest {
    @Test
    public void bytesToHexStringTest() {
        byte[] src = new byte[]{10, 20, 30};
        String expected = "0a141e";
        assertEquals(expected, SsrfFileTypeFilter.bytesToHexString(src));
    }
}


No.7 generated result --------------------------

package org.jeecg.common.util.filter;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SsrfFileTypeFilterTest {
    @Test
    public void bytesToHexStringTest() {
        byte[] src = new byte[1];
        String result = bytesToHexString(src);
        assertEquals("00", result);
    }
}


No.8 generated result --------------------------


package org.jeecg.common.util.filter;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SsrfFileTypeFilterTest {
    @Test
    public void bytesToHexStringTest() {
        byte[] input = new byte[16];
        for (int i = 0; i < 16; i++) {
            input[i] = (byte) (i + 1);
        }
        
        String output = bytesToHexString(input);
        assertEquals("0102030405060708090a0b0c0d", output);
    }
}


No.9 generated result --------------------------

package org.jeecg.common.util.filter;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SsrfFileTypeFilterTest {
    @Test
    public void bytesToHexStringTest() {
        byte[] input = new byte[2];
        String expectedOutput = "0x34";

        // Act
        String actualOutput = SsrfFileTypeFilter.bytesToHexString(input);

        // Assert
        assertEquals(expectedOutput, actualOutput);
    }
}


No.10 generated result --------------------------

package org.jeecg.common.util.filter;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class SsrfFileTypeFilterTest {
    @Test
    public void bytesToHexStringTest() {
        byte[] input = new byte[3];
        input[0] = 1;
        input[1] = 2;
        input[2] = 3;
        String expectedOutput = "010203";

        assertEquals(expectedOutput, bytesToHexString(input));
    }
}


