{
    "project_name": "jfreechart",
    "file_name": "DatasetUtils.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.general",
    "docstring": "/**\n     * Calculates the total of all the values in a {@link PieDataset}.  If\n     * the dataset contains negative or {@code null} values, they are\n     * ignored.\n     *\n     * @param dataset  the dataset ({@code null} not permitted).\n     *\n     * @return The total.\n     */",
    "source_code": "\npublic static double calculatePieDatasetTotal(PieDataset dataset) {\n    Args.nullNotPermitted(dataset, \"dataset\");\n    List keys = dataset.getKeys();\n    double totalValue = 0;\n    Iterator iterator = keys.iterator();\n    while (iterator.hasNext()) {\n        Comparable current = (Comparable) iterator.next();\n        if (current != null) {\n            Number value = dataset.getValue(current);\n            double v = 0.0;\n            if (value != null) {\n                v = value.doubleValue();\n            }\n            if (v > 0) {\n                totalValue = totalValue + v;\n            }\n        }\n    }\n    return totalValue;\n}\n",
    "class_name": "DatasetUtils",
    "method_name": "calculatePieDatasetTotal",
    "arguments": [
        "PieDataset dataset"
    ],
    "generate_test": [
        "public static double calculatePieDatasetTotal(PieDataset dataset) {\n    double total = 0;\n    for (int i = 0; i < dataset.getItemCount(); i++) {\n        total += dataset.getValue(i);\n    }\n    return total;\n}",
        "\npackage org.jfree.data.general;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Java\", 40);\n        dataset.setValue(\"Python\", 30);\n        dataset.setValue(\"C++\", 25);\n        assertEquals(105, DatasetUtils.calculatePieDatasetTotal(dataset));\n    }\n}",
        "import org.jfree.data.general.DatasetUtils;\nimport static org.junit.Assert.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Create a pie dataset with 3 slices, each with a value of 10\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Slice 1\", new Double(10));\n        dataset.setValue(\"Slice 2\", new Double(10));\n        dataset.setValue(\"Slice 3\", new Double(10));\n\n        // Calculate the total value of the pie chart\n        double total = DatasetUtils.calculatePieDatasetTotal(dataset);\n\n        // Assert that the total is equal to 30 (10 + 10 + 10)\n        assertEquals(30, total, 0.00001);\n    }\n}",
        "package org.jfree.data.general;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Category 1\", 25);\n        dataset.setValue(\"Category 2\", 75);\n        assertEquals(100, DatasetUtils.calculatePieDatasetTotal(dataset));\n    }\n}",
        "package org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Item 1\", 20);\n        dataset.setValue(\"Item 2\", 30);\n        dataset.setValue(\"Item 3\", 50);\n        \n        double total = DatasetUtils.calculatePieDatasetTotal(dataset);\n        \n        assertEquals(total, 100.0);\n    }\n}",
        "\npackage org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Series 1\", 20);\n        dataset.setValue(\"Series 2\", 30);\n        double total = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(50, total, 0.0001);\n    }\n}",
        "package org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"A\", 10);\n        dataset.setValue(\"B\", 20);\n        dataset.setValue(\"C\", 30);\n\n        double total = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(60, total, 0.001);\n    }\n}",
        "package org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Series 1\", 10.0);\n        dataset.setValue(\"Series 2\", 20.0);\n        double total = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(30.0, total, 0.0);\n    }\n}",
        "package org.jfree.data.general;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Create a list of PieDataset objects\n        List<PieDataset> datasets = new ArrayList<>();\n        datasets.add(new DefaultPieDataset());\n        datasets.add(new DefaultPieDataset());\n        datasets.add(new DefaultPieDataset());\n\n        // Use DatasetUtils to calculate the total of each dataset\n        double total1 = DatasetUtils.calculatePieDatasetTotal(datasets.get(0));\n        double total2 = DatasetUtils.calculatePieDatasetTotal(datasets.get(1));\n        double total3 = DatasetUtils.calculatePieDatasetTotal(datasets.get(2));\n\n        // Check that the totals are correct\n        assertEquals(0, total1);\n        assertEquals(0, total2);\n        assertEquals(0, total3);\n    }\n}\n\nIn this example, we create a list of `PieDataset` objects and use the `calculatePieDatasetTotal()` method to calculate the total of each dataset. We then check that the totals are correct using the `assertEquals()` method from JUnit.",
        "@Test\npublic void calculatePieDatasetTotalTest() {\n    PieDataset dataset = new DefaultPieDataset();\n    dataset.setValue(\"Data 1\", 20);\n    dataset.setValue(\"Data 2\", 30);\n    dataset.setValue(\"Data 3\", 50);\n    assertEquals(100, DatasetUtils.calculatePieDatasetTotal(dataset));\n}"
    ]
}