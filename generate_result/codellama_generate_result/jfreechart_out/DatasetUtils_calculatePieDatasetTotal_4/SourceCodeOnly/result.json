{
    "project_name": "jfreechart",
    "file_name": "DatasetUtils.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.general",
    "docstring": "/**\n     * Calculates the total of all the values in a {@link PieDataset}.  If\n     * the dataset contains negative or {@code null} values, they are\n     * ignored.\n     *\n     * @param dataset  the dataset ({@code null} not permitted).\n     *\n     * @return The total.\n     */",
    "source_code": "\npublic static double calculatePieDatasetTotal(PieDataset dataset) {\n    Args.nullNotPermitted(dataset, \"dataset\");\n    List keys = dataset.getKeys();\n    double totalValue = 0;\n    Iterator iterator = keys.iterator();\n    while (iterator.hasNext()) {\n        Comparable current = (Comparable) iterator.next();\n        if (current != null) {\n            Number value = dataset.getValue(current);\n            double v = 0.0;\n            if (value != null) {\n                v = value.doubleValue();\n            }\n            if (v > 0) {\n                totalValue = totalValue + v;\n            }\n        }\n    }\n    return totalValue;\n}\n",
    "class_name": "DatasetUtils",
    "method_name": "calculatePieDatasetTotal",
    "arguments": [
        "PieDataset dataset"
    ],
    "generate_test": [
        "\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        List keys = dataset.getKeys();\n        double totalValue = 0;\n        Iterator iterator = keys.iterator();\n        while (iterator.hasNext()) {\n            Comparable current = (Comparable) iterator.next();\n            if (current != null) {\n                Number value = dataset.getValue(current);\n                double v = 0.0;\n                if (value != null) {\n                    v = value.doubleValue();\n                }\n                if (v > 0) {\n                    totalValue = totalValue + v;\n                }\n            }\n        }\n        assertEquals(totalValue, DatasetUtils.calculatePieDatasetTotal(dataset), 0.0);\n    }\n}",
        "@Test\npublic void calculatePieDatasetTotalTest() {\n    // Arrange\n    PieDataset dataset = new DefaultPieDataset();\n    dataset.setValue(\"Apple\", 10.5);\n    dataset.setValue(\"Banana\", 20.7);\n    dataset.setValue(\"Orange\", 30.9);\n\n    // Act\n    double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n\n    // Assert\n    assertEquals(61.1, totalValue, 0.001);\n}",
        "\npackage org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"A\", 10);\n        dataset.setValue(\"B\", 20);\n        dataset.setValue(\"C\", 30);\n\n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n\n        assertEquals(60, totalValue, 0.01);\n    }\n}",
        "\nimport org.jfree.data.general.*;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        assertEquals(0, DatasetUtils.calculatePieDatasetTotal(dataset), 1e-5);\n\n        dataset.setValue(\"Category 1\", 10.0);\n        dataset.setValue(\"Category 2\", 20.0);\n        assertEquals(30.0, DatasetUtils.calculatePieDatasetTotal(dataset), 1e-5);\n    }\n}",
        "\npackage org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        double totalValue = 0;\n        \n        // test with empty dataset\n        assertEquals(totalValue, DatasetUtils.calculatePieDatasetTotal(dataset));\n        \n        // test with non-empty dataset\n        List keys = dataset.getKeys();\n        Iterator iterator = keys.iterator();\n        while (iterator.hasNext()) {\n            Comparable current = (Comparable) iterator.next();\n            if (current != null) {\n                Number value = dataset.getValue(current);\n                double v = 0.0;\n                if (value != null) {\n                    v = value.doubleValue();\n                }\n                if (v > 0) {\n                    totalValue = totalValue + v;\n                }\n            }\n        }\n        \n        assertEquals(totalValue, DatasetUtils.calculatePieDatasetTotal(dataset));\n    }\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Create a test dataset\n        PieDataset dataset = new PieDataset();\n        \n        // Add some data items to the dataset\n        dataset.addValue(\"A\", 10);\n        dataset.addValue(\"B\", 20);\n        dataset.addValue(\"C\", 30);\n        \n        // Calculate the total value of all data items in the dataset\n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n        \n        // Assert that the total value is correct\n        assertEquals(60, totalValue, 0.001);\n    }\n}",
        "\npackage org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        List keys = dataset.getKeys();\n        double totalValue = 0;\n        \n        // Test case: empty dataset\n        assertEquals(totalValue, DatasetUtils.calculatePieDatasetTotal(dataset));\n        \n        // Test case: single value in dataset\n        dataset.setValue(\"A\", new Double(1.5));\n        totalValue = 1.5;\n        assertEquals(totalValue, DatasetUtils.calculatePieDatasetTotal(dataset));\n        \n        // Test case: multiple values in dataset\n        dataset.setValue(\"B\", new Double(2.5));\n        dataset.setValue(\"C\", new Double(3.5));\n        totalValue = 1.5 + 2.5 + 3.5;\n        assertEquals(totalValue, DatasetUtils.calculatePieDatasetTotal(dataset));\n        \n        // Test case: null value in dataset\n        dataset.setValue(\"D\", new Double(null));\n        totalValue = 1.5 + 2.5 + 3.5;\n        assertEquals(totalValue, DatasetUtils.calculatePieDatasetTotal(dataset));\n    }\n}",
        "\npackage org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Key 1\", 10.0);\n        dataset.setValue(\"Key 2\", 5.0);\n        dataset.setValue(\"Key 3\", 8.0);\n\n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n\n        assertEquals(23.0, totalValue, 0.01);\n    }\n}",
        "\npackage org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Create a PieDataset with some values\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"A\", 10.0);\n        dataset.setValue(\"B\", 20.0);\n        dataset.setValue(\"C\", 30.0);\n        \n        // Calculate the total value of the PieDataset\n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n        \n        // Assert that the total value is correct\n        assertEquals(60.0, totalValue, 0.01);\n    }\n}",
        "\nimport org.jfree.data.general.DatasetUtils;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        List keys = dataset.getKeys();\n        \n        // Fill the dataset with some data\n        for (int i = 0; i < keys.size(); i++) {\n            Comparable key = (Comparable) keys.get(i);\n            dataset.setValue(key, Math.random() * 100);\n        }\n        \n        // Calculate the total value of the dataset\n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n        \n        // Check that the total value is correct\n        assertEquals(totalValue, keys.size() * 100, 0.01);\n    }\n}"
    ]
}