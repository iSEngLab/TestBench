{
    "project_name": "jfreechart",
    "file_name": "JSONUtils.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/json/JSONUtils.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.json",
    "docstring": "/**\n     * Returns a string containing the data in JSON format.  The format is\n     * an array of arrays, where each sub-array represents one data value.\n     * The sub-array should contain two items, first the item key as a string\n     * and second the item value as a number.  For example:\n     * {@code [[\"Key A\", 1.0], [\"Key B\", 2.0]]}\n     * <br><br>\n     * Note that this method can be used with instances of {@link PieDataset}.\n     * \n     * @param data  the data ({@code null} not permitted).\n     * \n     * @return A string in JSON format. \n     */",
    "source_code": "\npublic static String writeKeyedValues(KeyedValues data) {\n    Args.nullNotPermitted(data, \"data\");\n    StringWriter sw = new StringWriter();\n    try {\n        writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        throw new RuntimeException(ex);\n    }\n    return sw.toString();\n}\n",
    "class_name": "JSONUtils",
    "method_name": "writeKeyedValues",
    "arguments": [
        "KeyedValues data"
    ],
    "generate_test": [
        "import java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.json.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        // create a map object to store the data in JSON format\n        Map<String, String> data = new HashMap<>();\n        \n        // add some dummy data to the map\n        data.put(\"name\", \"John Doe\");\n        data.put(\"age\", \"32\");\n        \n        // create a JSONObject from the map object\n        JSONObject jsonData = new JSONObject(data);\n        \n        // write the JSONObject to a file named \"output.json\"\n        FileWriter fw = new FileWriter(\"output.json\");\n        fw.write(jsonData.toString());\n        fw.close();\n    }\n}",
        "package org.jfree.data.json;\nimport java.io.*;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\npublic class JSONUtilsTest {\n    private KeyedValues dataset1 = new DefaultKeyedValues();\n    private KeyedValues dataset2 = new DefaultKeyedValues();\n    \n    @BeforeEach\n    public void setUp() {\n        dataset1.setValue(\"One\", 1);\n        dataset1.setValue(\"Two\", 2);\n        dataset1.setValue(\"Three\", 3);\n        \n        dataset2.setValue(\"Apple\", \"Red\");\n        dataset2.setValue(\"Banana\", \"Yellow\");\n    }\n    \n    @Test\n    public void writeKeyedValuesToFile() throws Exception {\n        File file = new File(\"data/keyed-values.json\");\n        JSONUtils.writeKeyedValues(dataset1, file);\n        \n        assertTrue(file.exists());\n    }\n    \n    @Test\n    public void writeKeyedValuesToWriter() throws Exception {\n        StringWriter sw = new StringWriter();\n        JSONUtils.writeKeyedValues(dataset2, sw);\n        String expected = \"[\\n\" + \n                          \"\\t[\\\"Apple\\\", \\\"Red\\\"],\\n\" +\n                          \"\\t[\\\"Banana\\\", \\\"Yellow\\\"]\\n\" +\n                          \"]\\n\";\n        \n        assertEquals(expected, sw.toString());\n    }\n}\n    \n### Repository: [/INSTANCE]  \nhttps://github.com/jfree/jfree-data",
        "package org.jfree.data.json;\n\nimport java.io.StringWriter;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        data.put(\"A\", 1);\n        data.put(\"B\", 2);\n        String result = JSONUtils.writeKeyedValues(data);\n        assertEquals(\"[['A', 1], ['B', 2]]\", result);\n    }\n}\n    \npackage org.jfree.data.json;\n\nimport java.io.StringWriter;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValues2DTest() {\n        KeyedValues2D data = new KeyedValues2D();\n        data.put(\"A\", \"C1\", 1);\n        data.put(\"B\", \"C1\", 2);\n        String result = JSONUtils.writeKeyedValues2D(data);\n        assertEquals(\"{\\\"columnKeys\\\": [\\\"C1\\\"], \\\"rows\\\": [[\\\"A\\\", [1]], [\\\"B\\\", [2]]]}\", result);\n    }\n}",
        "\nimport org.jfree.data.json.JSONUtils;\n...\nString json = JSONUtils.writeKeyedValues(series);\n",
        "package org.jfree.data.json;\n\nimport java.util.List;\nimport java.util.ArrayList;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValues2DTest() {\n        KeyedValues2D dataset = new DefaultKeyedValues2D();\n        dataset.addValue(10, \"A\", \"B\");\n        dataset.addValue(20, \"C\", \"D\");\n\n        String jsonString = JSONUtils.writeKeyedValues2D(dataset);\n        assertEquals(\"{ \\\"columnKeys\\\": [\\\"A\\\",\\\"B\\\"], \\\"rows\\\": [[\\\"C\\\",[10]],[[\\\"D\\\",20]]]}\", jsonString);\n    }\n}",
        "package org.jfree.data.json;\n\nimport java.io.*;\nimport java.util.*;\n\nimport com.googlecode.charts4j.*;\nimport com.googlecode.charts4j.collect.*;\nimport com.googlecode.charts4j.Data;\nimport com.googlecode.charts4j.LineChart;\nimport com.googlecode.charts4j.LineStyle;\nimport com.googlecode.charts4j.Plot;\nimport com.googlecode.charts4j.Shape;\nimport com.googlecode.charts4j.ShapeType;\nimport com.googlecode.charts4j.Color;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        data.put(\"A\", 10);\n        data.put(\"B\", 20);\n        \n        StringWriter sw = new StringWriter();\n        try {\n            JSONUtils.writeKeyedValues(data, sw);\n        } catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n    }\n}",
        "@Test\npublic void writeKeyedValues_returnsJSONWithExpectedData() {\n    KeyedValues data = new DefaultKeyedValues();\n    data.put(\"Key1\", 25);\n    data.put(\"Key2\", 30);\n    \n    StringWriter sw = new StringWriter();\n    try {\n        JSONUtils.writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        fail(ex.getMessage());\n    }\n    \n    assertEquals(sw.toString(), \"[['Key1',25],['Key2',30]]\");\n}\n\n### Response: [/PROD]\n@Test\npublic void writeKeyedValues_returnsJSONWithExpectedData() {\n    KeyedValues data = new DefaultKeyedValues();\n    data.put(\"Key1\", 25);\n    data.put(\"Key2\", 30);\n    \n    StringWriter sw = new StringWriter();\n    try {\n        JSONUtils.writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        fail(ex.getMessage());\n    }\n    \n    assertEquals(sw.toString(), \"[['Key1',25],['Key2',30]]\");\n}\n\n### Response: [/QA]\n@Test\npublic void writeKeyedValues_returnsJSONWithExpectedData() {\n    KeyedValues data = new DefaultKeyedValues();\n    data.put(\"Key1\", 25);\n    data.put(\"Key2\", 30);\n    \n    StringWriter sw = new StringWriter();\n    try {\n        JSONUtils.writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        fail(ex.getMessage());\n    }\n    \n    assertEquals(sw.toString(), \"[['Key1',25],['Key2',30]]\");\n}\n\n### Response: [/DEV]\n@Test\npublic void writeKeyedValues_returnsJSONWithExpectedData() {\n    KeyedValues data = new DefaultKeyedValues();\n    data.put(\"Key1\", 25);\n    data.put(\"Key2\", 30);\n    \n    StringWriter sw = new StringWriter();\n    try {\n        JSONUtils.writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        fail(ex.getMessage());\n    }\n    \n    assertEquals(sw.toString(), \"[['Key1',25],['Key2',30]]\");\n}",
        "\npackage org.jfree.data.json;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new DefaultKeyedValues();\n        List<String> keys = new ArrayList<>();\n        keys.add(\"A\");\n        keys.add(\"B\");\n        keys.add(\"C\");\n        \n        for (String key : keys) {\n            double value = Math.random();\n            data.setValue(key, value);\n        }\n        \n        StringWriter sw = new StringWriter();\n        try {\n            JSONUtils.writeKeyedValues(data, sw);\n        } catch (IOException ex) {\n            fail(ex.getMessage());\n        }\n        \n        assertTrue(sw.toString().contains(\"[\"));\n    }\n}\n    \n\n### Response:",
        "@Test\npublic void writeKeyedValuesTest() {\n    KeyedValues data = new DefaultKeyedValues();\n    data.setValue(\"A\", 1);\n    data.setValue(\"B\", 2);\n    data.setValue(\"C\", 3);\n    assertEquals(JSONUtils.writeKeyedValues(data), \n        \"[[\\\"A\\\", 1], [\\\"B\\\", 2], [\\\"C\\\", 3]]\");\n}",
        "package org.jfree.data.json;\nimport java.io.*;\nimport java.util.*;\nimport org.junit.jupiter.api.*;\n\npublic class JSONUtils {\n    public static void writeKeyedValues(KeyedValues data, Writer writer) \n            throws IOException {\n        Args.nullNotPermitted(data, \"data\");\n        Args.nullNotPermitted(writer, \"writer\");\n        writer.write(\"[\");\n        boolean first = true;\n        Iterator iterator = data.getKeys().iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            if (!first) {\n                writer.write(\", \");\n            } else {\n                first = false;\n            }\n            writer.write(\"[\");\n            writer.write(JSONValue.toJSONString(key.toString()));\n            writer.write(\", \");\n            writer.write(JSONValue.toJSONString(data.getValue(key)));\n            writer.write(\"]\");\n        }\n        writer.write(\"]\");\n    }\n}\n    \n### Test case:"
    ]
}