{
    "project_name": "jfreechart",
    "file_name": "JSONUtils.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/json/JSONUtils.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.json",
    "docstring": "/**\n     * Returns a string containing the data in JSON format.  The format is\n     * an array of arrays, where each sub-array represents one data value.\n     * The sub-array should contain two items, first the item key as a string\n     * and second the item value as a number.  For example:\n     * {@code [[\"Key A\", 1.0], [\"Key B\", 2.0]]}\n     * <br><br>\n     * Note that this method can be used with instances of {@link PieDataset}.\n     * \n     * @param data  the data ({@code null} not permitted).\n     * \n     * @return A string in JSON format. \n     */",
    "source_code": "\npublic static String writeKeyedValues(KeyedValues data) {\n    Args.nullNotPermitted(data, \"data\");\n    StringWriter sw = new StringWriter();\n    try {\n        writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        throw new RuntimeException(ex);\n    }\n    return sw.toString();\n}\n",
    "class_name": "JSONUtils",
    "method_name": "writeKeyedValues",
    "arguments": [
        "KeyedValues data"
    ],
    "generate_test": [
        "@Test\npublic void writeKeyedValuesTest() {\n    // Create a KeyedValues object with some data\n    KeyedValues keyedValues = new KeyedValues();\n    keyedValues.put(\"key1\", \"value1\");\n    keyedValues.put(\"key2\", \"value2\");\n    \n    // Write the KeyedValues object to a StringWriter\n    StringWriter sw = new StringWriter();\n    JSONUtils.writeKeyedValues(keyedValues, sw);\n    \n    // Read the written data from the StringWriter and compare it to the expected result\n    String expectedResult = \"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\";\n    assertEquals(expectedResult, sw.toString());\n}",
        "\n@Test\npublic void writeKeyedValuesTest() {\n    KeyedValues data = new KeyedValues();\n    StringWriter sw = new StringWriter();\n    \n    try {\n        JSONUtils.writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        fail(\"Unexpected IOException: \" + ex.getMessage());\n    }\n    \n    assertEquals(\"<FILL>\", sw.toString());\n}",
        "\nThe response to the request is as follows:\n\npackage org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        data.put(\"key1\", \"value1\");\n        data.put(\"key2\", \"value2\");\n        \n        String expectedOutput = \"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\";\n        \n        assertEquals(expectedOutput, JSONUtils.writeKeyedValues(data));\n    }\n}",
        "\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        data.addValue(\"key1\", \"value1\");\n        data.addValue(\"key2\", \"value2\");\n        \n        StringWriter sw = new StringWriter();\n        JSONUtils.writeKeyedValues(data, sw);\n        \n        assertEquals(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\", sw.toString());\n    }\n}",
        "\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        \n        // Add some values to the keyed values object\n        data.put(\"key1\", \"value1\");\n        data.put(\"key2\", 2);\n        \n        // Write the keyed values to a string writer\n        JSONUtils.writeKeyedValues(data, sw);\n        \n        // Check that the result is as expected\n        String expected = \"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":2}\";\n        assertEquals(expected, sw.toString());\n    }\n}",
        "\n@Test\npublic void writeKeyedValuesTest() {\n    KeyedValues data = new KeyedValues();\n    StringWriter sw = new StringWriter();\n    try {\n        JSONUtils.writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        throw new RuntimeException(ex);\n    }\n    assertEquals(\"\", sw.toString());\n}",
        "\npackage org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        \n        try {\n            JSONUtils.writeKeyedValues(data, sw);\n        } catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n        \n        assertEquals(\"{\\\"key\\\":\\\"value\\\"}\", sw.toString());\n    }\n}",
        "\npackage org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        try {\n            JSONUtils.writeKeyedValues(data, sw);\n            assertEquals(\"\", sw.toString());\n        } catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n    }\n}",
        "package org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        data.put(\"key1\", \"value1\");\n        data.put(\"key2\", 2);\n        StringWriter sw = new StringWriter();\n        \n        JSONUtils.writeKeyedValues(data, sw);\n        \n        assertEquals(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":2}\", sw.toString());\n    }\n}",
        "package org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        // Create a KeyedValues object with some data\n        KeyedValues kv = new KeyedValues();\n        kv.put(\"key1\", \"value1\");\n        kv.put(\"key2\", 123);\n        \n        // Write the KeyedValues object to a StringWriter\n        StringWriter sw = new StringWriter();\n        JSONUtils.writeKeyedValues(kv, sw);\n        \n        // Check that the resulting string is correct\n        assertEquals(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":123}\", sw.toString());\n    }\n}"
    ]
}