{
    "project_name": "jfreechart",
    "file_name": "Regression.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/statistics/Regression.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.statistics",
    "docstring": "/**\n     * Returns the parameters 'a' and 'b' for an equation y = ax^b, fitted to\n     * the data using a power regression equation.  The result is returned as\n     * an array, where double[0] --&gt; a, and double[1] --&gt; b.\n     *\n     * @param data  the data.\n     *\n     * @return The parameters.\n     */",
    "source_code": "\npublic static double[] getPowerRegression(double[][] data) {\n\n    int n = data.length;\n    if (n < 2) {\n        throw new IllegalArgumentException(\"Not enough data.\");\n    }\n\n    double sumX = 0;\n    double sumY = 0;\n    double sumXX = 0;\n    double sumXY = 0;\n    for (int i = 0; i < n; i++) {\n        double x = Math.log(data[i][0]);\n        double y = Math.log(data[i][1]);\n        sumX += x;\n        sumY += y;\n        double xx = x * x;\n        sumXX += xx;\n        double xy = x * y;\n        sumXY += xy;\n    }\n    double sxx = sumXX - (sumX * sumX) / n;\n    double sxy = sumXY - (sumX * sumY) / n;\n    double xbar = sumX / n;\n    double ybar = sumY / n;\n\n    double[] result = new double[2];\n    result[1] = sxy / sxx;\n    result[0] = Math.pow(Math.exp(1.0), ybar - result[1] * xbar);\n\n    return result;\n\n}\n",
    "class_name": "Regression",
    "method_name": "getPowerRegression",
    "arguments": [
        "double[][] data"
    ],
    "generate_test": [
        "The getPowerRegressionTest() method in Regression class calculates the power regression for a set of data. The test case can be written as follows:\n\nimport org.junit.jupiter.api.*;\n\nimport static org.junit.jupiter.api.Assertions.assertArrayEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[] x = new double[]{1, 2, 3, 4, 5};\n        double[] y = new double[]{1, 4, 9, 16, 25};\n        Regression regression = new Regression(x, y);\n        double[] result = regression.getPowerRegression();\n        assertArrayEquals(new double[]{2.0, -3.0, 1}, result);\n    }\n}\n\nThe getPowerRegression() method takes the following steps:\n\n* It calculates the number of data points and checks that there are enough to perform a linear regression. If not, it throws an IllegalArgumentException.\n* It initializes two arrays for storing the x and y values of the data.\n* It sets the maximum value of y equal to the sum of all the y values.\n* It calculates the minimum value of y by finding the smallest element in the y array.\n* It calculates the standard deviation of y by dividing the difference between the maximum and minimum values by 1.4826. This is a formula for calculating standard deviation based on sample data.\n* It calculates the slope by using the following formula: (sum of xy - nx\\*sy) / (sum of x^2 - nx^2).\n* It calculates the intercept by subtracting the product of the slope and the minimum value of x from the sum of y.\n\nThe assertArrayEquals() method in the test case checks that the calculated result is equal to the expected result, which is [2.0, -3.0, 1]. If they are not equal, an AssertionError will be thrown.",
        "package org.jfree.data.statistics;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        List<double[]> data = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            double x = Math.random();\n            double y = Math.pow(2, x);\n            data.add(new double[]{x, y});\n        }\n        Regression regression = new Regression(data, 3);\n        assertNotNull(regression);\n    }\n}",
        "package org.jfree.data.statistics;\n\nimport java.util.Arrays;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    private static final double EPSILON = 1E-6;\n    \n    @Test\n    public void getPowerRegressionTest() {\n        // regression coefficients should be: 0, 1, 2\n        assertArrayEquals(new double[]{0.5}, Regression.getPowerRegression(1), EPSILON);\n        assertArrayEquals(new double[]{0.5, 1.0}, Regression.getPowerRegression(2), EPSILON);\n        assertArrayEquals(new double[]{0.5, 1.0, 1.5}, Regression.getPowerRegression(3), EPSILON);\n    }\n    \n    @Test\n    public void getSimpleLinearRegressionTest() {\n        // regression coefficients should be: 1, 2\n        double[] xData = new double[]{0, 1};\n        double[] yData = new double[]{0, 3};\n        assertArrayEquals(new double[]{1.0, 2.0}, Regression.getSimpleLinearRegression(xData, yData), EPSILON);\n    }\n    \n    @Test\n    public void getMultipleLinearRegressionTest() {\n        // regression coefficients should be: 1, 2, 3\n        double[] xData = new double[]{0, 1};\n        double[] yData = new double[]{0, 6};\n        assertArrayEquals(new double[]{1.0, 2.0, 3.0}, Regression.getMultipleLinearRegression(xData, yData), EPSILON);\n    }\n    \n    @Test\n    public void getSimpleExponentialRegressionTest() {\n        // regression coefficients should be: 1, 2\n        double[] xData = new double[]{0, Math.log(3)};\n        double[] yData = new double[]{0, 3};\n        assertArrayEquals(new double[]{1.0, 2.0}, Regression.getSimpleExponentialRegression(xData, yData), EPSILON);\n    }\n    \n    @Test\n    public void getMultipleExponentialRegressionTest() {\n        // regression coefficients should be: 1, 2, 3\n        double[] xData = new double[]{0, Math.log(3)};\n        double[] yData = new double[]{0, 6};\n        assertArrayEquals(new double[]{1.0, 2.0, 3.0}, Regression.getMultipleExponentialRegression(xData, yData), EPSILON);\n    }\n    \n    @Test\n    public void getSimpleLogarithmicRegressionTest() {\n        // regression coefficients should be: 1, 2\n        double[] xData = new double[]{0, 4};\n        double[] yData = new double[]{0, Math.log(5)};\n        assertArrayEquals(new double[]{1.0, 2.0}, Regression.getSimpleLogarithmicRegression(xData, yData), EPSILON);\n    }\n    \n    @Test\n    public void getMultipleLogarithmicRegressionTest() {\n        // regression coefficients should be: 1, 2, 3\n        double[] xData = new double[]{0, 4};\n        double[] yData = new double[]{0, 6};\n        assertArrayEquals(new double[]{1.0, 2.0, 3.0}, Regression.getMultipleLogarithmicRegression(xData, yData), EPSILON);\n    }\n    \n    @Test\n    public void getPowerRegressionTest() {\n        // regression coefficients should be: 1, 2\n        double[] xData = new double[]{0, Math.pow(3, 1)};\n        double[] yData = new double[]{0, 6};\n        assertArrayEquals(new double[]{1.0, 2.0}, Regression.getPowerRegression(xData, yData), EPSILON);\n    }\n    \n    @Test\n    public void getSimplePolynomialRegressionTest() {\n        // regression coefficients should be: 1, 2, 3, 4\n        double[] xData = new double[]{0, 1, 2};\n        double[] yData = new double[]{0, 6, 9};\n        assertArrayEquals(new double[]{1.0, 2.0, 3.0, 4.0}, Regression.getSimplePolynomialRegression(xData, yData), EPSILON);\n    }\n    \n    @Test\n    public void getMultiplePolynomialRegressionTest() {\n        // regression coefficients should be: 1, 2, 3, 4, 5\n        double[] xData = new double[]{0, 1, 2};\n        double[] yData = new double[]{0, 6, 9};\n        assertArrayEquals(new double[]{1.0, 2.0, 3.0, 4.0, 5.0}, Regression.getMultiplePolynomialRegression(xData, yData), EPSILON);\n    }\n}",
        "\npackage org.jfree.data.statistics;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\nimport org.jfree.data.xy.XYDataset;\nimport org.jfree.data.xy.XYSeriesCollection;\nimport org.jfree.data.xy.XYSeries;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = {{1, 2}, {3, 4}, {5, 6}};\n        XYDataset dataset = new XYSeriesCollection(data);\n        PolynomialFunction f = Regression.getPowerRegression(dataset, 2);\n        assertEquals(2.0, f.getIntercept(), 1e-8);\n    }\n}\n",
        "@Test\npublic void getPowerRegressionTest() {\n    double[] x = new double[]{1, 2, 3, 4};\n    double[] y = new double[]{8, 64, 256, 1024};\n    Regression regression = new Regression(x, y);\n    assertEquals(-2.0, regression.getSlope(), 1e-5);\n}\n    \n\n### Response:",
        "\nimport org.jfree.data.statistics.Regression;\nimport static org.junit.Assert.*;\nimport org.junit.Test;\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[] x = {0, 1, 2, 3};\n        double[] y = {0, 1, 8, 27};\n        double expectedA = 1.5;\n        double expectedB = 3;\n        Regression regression = new Regression(x, y);\n        assertEquals(expectedA, regression.getSlope(), 1e-6);\n        assertEquals(expectedB, regression.getIntercept(), 1e-6);\n    }\n}\n",
        "\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\nimport org.jfree.data.xy.XYSeries;\nimport org.jfree.data.statistics.Regression;\n\npublic class RegressionTests {\n    @Test\n    public void getPowerRegression() {\n        // Create the XYSeries with example data:\n        double[] xData = new double[]{1, 2, 3, 4, 5};\n        double[] yData = new double[]{10, 20, 40, 80, 160};\n        XYSeries series = new XYSeries(\"Power\");\n        for (int i = 0; i < xData.length; i++) {\n            series.add(xData[i], yData[i]);\n        }\n    \n        // Create the Regression instance and perform the regression:\n        Regression reg = new Regression(series, true);\n        double[] result = reg.getPowerRegression();\n    \n        // Check the results:\n        assertEquals(\"a\", 0.5, result[1], 0.01);\n        assertEquals(\"b\", 2.0, result[2], 0.01);\n        assertEquals(\"c\", -30.0, result[3], 0.01);\n    }\n}\n",
        "\npackage org.jfree.data.statistics;\n\nimport java.util.Arrays;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[] x = new double[10];\n        double[] y = new double[x.length];\n        for (int i = 0; i < x.length; i++) {\n            x[i] = Math.pow(2, i);\n            y[i] = Math.sin(Math.pow(x[i], 2));\n        }\n        Regression reg = new Regression(x, y);\n        double[] powerRegression = reg.getPowerRegression();\n        assertArrayEquals(powerRegression, new double[] {0.3795845119066562, 0.7391262352432194}, .00001);\n    }\n}",
        "\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[] xData = new double[] {1.0, 2.0, 3.0};\n        double[] yData = new double[] {1.5, 4.7, 9.3};\n        double expected = 1.8;\n        Regression reg = new Regression(xData, yData);\n        assertEquals(expected, reg.getPowerRegression());\n    }\n}",
        "\npackage org.jfree.data.statistics;\nimport java.util.Arrays;\nimport org.junit.jupiter.api.*;\n\npublic class RegressionTest {\n    private double[][] data;\n    \n    @BeforeEach\n    public void setUp() {\n        data = new double[2][10];\n        for (int i=0; i<data[0].length; ++i) {\n            data[0][i] = Math.random();\n            data[1][i] = Math.pow(data[0][i], 3);\n        }\n    }\n    \n    @Test\n    public void getPowerRegressionTest() {\n        double[] regressionData = Regression.getPowerRegression(data);\n        assertEquals(4, regressionData[0]);\n        assertEquals(Math.pow(regressionData[1], 3), data[0][0], 0.5);\n    }\n}\n"
    ]
}