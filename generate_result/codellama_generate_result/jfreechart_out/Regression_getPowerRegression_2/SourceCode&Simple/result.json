{
    "project_name": "jfreechart",
    "file_name": "Regression.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/statistics/Regression.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.statistics",
    "docstring": "/**\n     * Returns the parameters 'a' and 'b' for an equation y = ax^b, fitted to\n     * the data using a power regression equation.  The result is returned as\n     * an array, where double[0] --&gt; a, and double[1] --&gt; b.\n     *\n     * @param data  the data.\n     *\n     * @return The parameters.\n     */",
    "source_code": "\npublic static double[] getPowerRegression(double[][] data) {\n\n    int n = data.length;\n    if (n < 2) {\n        throw new IllegalArgumentException(\"Not enough data.\");\n    }\n\n    double sumX = 0;\n    double sumY = 0;\n    double sumXX = 0;\n    double sumXY = 0;\n    for (int i = 0; i < n; i++) {\n        double x = Math.log(data[i][0]);\n        double y = Math.log(data[i][1]);\n        sumX += x;\n        sumY += y;\n        double xx = x * x;\n        sumXX += xx;\n        double xy = x * y;\n        sumXY += xy;\n    }\n    double sxx = sumXX - (sumX * sumX) / n;\n    double sxy = sumXY - (sumX * sumY) / n;\n    double xbar = sumX / n;\n    double ybar = sumY / n;\n\n    double[] result = new double[2];\n    result[1] = sxy / sxx;\n    result[0] = Math.pow(Math.exp(1.0), ybar - result[1] * xbar);\n\n    return result;\n\n}\n",
    "class_name": "Regression",
    "method_name": "getPowerRegression",
    "arguments": [
        "double[][] data"
    ],
    "generate_test": [
        "\n@Test\npublic void getPowerRegressionTest() {\n    double[][] data = {{1, 2}, {3, 4}, {5, 6}};\n    double[] expectedResult = new double[]{Math.pow(Math.exp(1), 4)};\n    \n    assertArrayEquals(expectedResult, Regression.getPowerRegression(data));\n}",
        "\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        // Test case 1: input data with zero rows\n        double[][] data = new double[0][2];\n        assertThrows(IllegalArgumentException.class, () -> Regression.getPowerRegression(data));\n\n        // Test case 2: input data with only one row\n        data = new double[][] {new double[] {1.0, 1.0}};\n        assertThrows(IllegalArgumentException.class, () -> Regression.getPowerRegression(data));\n\n        // Test case 3: input data with two rows and correct format\n        data = new double[][] {new double[] {1.0, 2.0}, new double[] {2.0, 4.0}};\n        double[] result = Regression.getPowerRegression(data);\n        assertEquals(result[0], Math.pow(Math.exp(1.0), (2.0 - 4.0) / 3.0));\n        assertEquals(result[1], 1.5);\n    }\n}",
        "double[][] inputData = new double[][] {\n    new double[] {1, 2},\n    new double[] {3, 4},\n    new double[] {5, 6}\n};\ndouble[] expectedOutputData = new double[] {0.5, 0.5};",
        "\npackage org.jfree.data.statistics;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        // Test 1: with a valid input data set\n        double[][] data = new double[2][2];\n        data[0][0] = 1.0;\n        data[0][1] = 2.0;\n        data[1][0] = 3.0;\n        data[1][1] = 4.0;\n\n        double[] result = Regression.getPowerRegression(data);\n\n        assertEquals(result[0], Math.pow(Math.exp(1.0), (2 - 1) / (4 - 3)), 0.001);\n        assertEquals(result[1], Math.pow(Math.exp(1.0), (4 - 1) / (6 - 3)), 0.001);\n    }\n}",
        "\npublic void getPowerRegressionTest() {\n    double[][] data = new double[][]{{2, 4}, {4, 16}, {8, 64}};\n    double[] expectedResult = new double[]{3.0, 256.0};\n    assertArrayEquals(expectedResult, Regression.getPowerRegression(data));\n}",
        "\npackage org.jfree.data.statistics;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        // Test case 1: Not enough data\n        double[][] testData = {{0, 0}, {1, 1}};\n        assertThrows(IllegalArgumentException.class, () -> Regression.getPowerRegression(testData));\n        \n        // Test case 2: Valid input\n        testData = new double[][] {{1, 2}, {3, 4}, {5, 6}};\n        double[] expectedResult = new double[] {1.0, Math.exp(-2.0)};\n        assertArrayEquals(expectedResult, Regression.getPowerRegression(testData), 1e-9);\n    }\n}",
        "\npackage org.jfree.data.statistics;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = new double[][] {{1, 2}, {3, 4}, {5, 6}};\n        double[] result = Regression.getPowerRegression(data);\n        assertEquals(2, result.length);\n        assertEquals(Math.log(result[0]), Math.pow(Math.exp(1), result[1]));\n    }\n}",
        "package org.jfree.data.statistics;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = new double[][]{\n            {1, 2},\n            {3, 4},\n            {5, 6}\n        };\n        double[] result = Regression.getPowerRegression(data);\n        assertEquals(result[0], Math.pow(Math.exp(1), 4));\n        assertEquals(result[1], -2 * Math.pow(Math.exp(1), 3));\n    }\n}",
        "\npackage org.jfree.data.statistics;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = new double[2][2];\n        data[0] = new double[]{1, 4};\n        data[1] = new double[]{2, 8};\n        \n        assertArrayEquals(new double[]{Math.pow(Math.exp(1.0), 2 - (1 + 2) / Math.log(4)), Math.pow(Math.exp(1.0), 3 - (1 + 2) / Math.log(8))}, Regression.getPowerRegression(data));\n    }\n}",
        "\npackage org.jfree.data.statistics;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        // Test case 1: Empty array\n        double[][] data = {};\n        double[] expectedResult = {0, 0};\n        assertArrayEquals(expectedResult, Regression.getPowerRegression(data));\n\n        // Test case 2: One element array\n        data = new double[][] {{1, 1}};\n        expectedResult = {0, Math.pow(Math.exp(1), 1)};\n        assertArrayEquals(expectedResult, Regression.getPowerRegression(data));\n\n        // Test case 3: Two element array\n        data = new double[][] {{2, 4}, {3, 9}};\n        expectedResult = {0.5, Math.pow(Math.exp(1), 5)};\n        assertArrayEquals(expectedResult, Regression.getPowerRegression(data));\n    }\n}"
    ]
}