{
    "project_name": "jfreechart",
    "file_name": "Regression.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/statistics/Regression.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.statistics",
    "docstring": "/**\n     * Returns the parameters 'a' and 'b' for an equation y = ax^b, fitted to\n     * the data using a power regression equation.  The result is returned as\n     * an array, where double[0] --&gt; a, and double[1] --&gt; b.\n     *\n     * @param data  the data.\n     *\n     * @return The parameters.\n     */",
    "source_code": "\npublic static double[] getPowerRegression(double[][] data) {\n\n    int n = data.length;\n    if (n < 2) {\n        throw new IllegalArgumentException(\"Not enough data.\");\n    }\n\n    double sumX = 0;\n    double sumY = 0;\n    double sumXX = 0;\n    double sumXY = 0;\n    for (int i = 0; i < n; i++) {\n        double x = Math.log(data[i][0]);\n        double y = Math.log(data[i][1]);\n        sumX += x;\n        sumY += y;\n        double xx = x * x;\n        sumXX += xx;\n        double xy = x * y;\n        sumXY += xy;\n    }\n    double sxx = sumXX - (sumX * sumX) / n;\n    double sxy = sumXY - (sumX * sumY) / n;\n    double xbar = sumX / n;\n    double ybar = sumY / n;\n\n    double[] result = new double[2];\n    result[1] = sxy / sxx;\n    result[0] = Math.pow(Math.exp(1.0), ybar - result[1] * xbar);\n\n    return result;\n\n}\n",
    "class_name": "Regression",
    "method_name": "getPowerRegression",
    "arguments": [
        "double[][] data"
    ],
    "generate_test": [
        "\npackage org.jfree.data.statistics;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = new double[5][2];\n        data[0] = new double[]{1, 1};\n        data[1] = new double[]{2, 4};\n        data[2] = new double[]{3, 9};\n        data[3] = new double[]{4, 16};\n        data[4] = new double[]{5, 25};\n        \n        double[] result = Regression.getPowerRegression(data);\n        assertEquals(result[0], 1.0, 0.01);\n        assertEquals(result[1], 3.0, 0.01);\n    }\n}",
        "\npackage org.jfree.data.statistics;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = {{1, 2}, {3, 4}, {5, 6}};\n        double[] result = Regression.getPowerRegression(data);\n        assertArrayEquals(new double[]{Math.log(2), Math.log(3)}, result, 0.0001);\n    }\n}",
        "\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = new double[2][];\n        data[0] = new double[] { 1, 4 };\n        data[1] = new double[] { 2, 8 };\n        double[] result = Regression.getPowerRegression(data);\n        assertEquals(result[0], Math.pow(Math.exp(1.0), 3));\n        assertEquals(result[1], 4);\n    }\n}",
        "package org.jfree.data.statistics;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        // Create test data\n        double[][] data = new double[4][2];\n        data[0] = new double[]{1, 1};\n        data[1] = new double[]{2, 2};\n        data[2] = new double[]{3, 3};\n        data[3] = new double[]{4, 4};\n\n        // Call the method under test\n        double[] result = Regression.getPowerRegression(data);\n\n        // Verify that the expected result is returned\n        assertEquals(result[0], Math.pow(Math.exp(1.0), data[2][1] - result[1] * data[2][0]));\n    }\n}",
        "\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = {{1, 2}, {2, 4}, {3, 6}};\n        double[] result = getPowerRegression(data);\n        assertArrayEquals(result, new double[]{Math.pow(Math.exp(1), 0.5), Math.pow(Math.exp(1), 1)}, 0.001);\n    }\n}",
        "\npackage org.jfree.data.statistics;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        // Create data to test the method with\n        double[][] data = new double[][] {{1, 2}, {2, 4}, {3, 6}};\n\n        // Call the method and store the result in a variable\n        double[] result = Regression.getPowerRegression(data);\n\n        // Check that the result is not null\n        assertNotNull(result);\n\n        // Check that the result has two elements\n        assertEquals(2, result.length);\n\n        // Check that the first element of the result is within a certain range\n        double expectedX = Math.log(data[0][0]);\n        double actualX = result[1];\n        double deltaX = Math.abs(expectedX - actualX);\n        assertTrue(deltaX <= 0.01);\n\n        // Check that the second element of the result is within a certain range\n        double expectedY = Math.log(data[0][1]);\n        double actualY = result[0];\n        double deltaY = Math.abs(expectedY - actualY);\n        assertTrue(deltaY <= 0.01);\n    }\n}\n",
        "import static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = new double[][]{{1, 2}, {2, 4}, {3, 6}};\n        double[] result = Regression.getPowerRegression(data);\n        \n        // Check if the slope is correct\n        assertEquals(result[0], 2.0, 0.001);\n        \n        // Check if the y-intercept is correct\n        assertEquals(result[1], 1.0, 0.001);\n    }\n}",
        "\n@Test\npublic void getPowerRegressionTest() {\n    double[][] data = {{1.0, 2.0}, {2.0, 4.0}, {3.0, 6.0}};\n    double[] result = Regression.getPowerRegression(data);\n    assertEquals(result[0], Math.pow(Math.exp(1.0), 3.0 - result[1] * 2.5));\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = new double[2][2];\n        data[0][0] = 1; // X1\n        data[0][1] = 4; // Y1\n        data[1][0] = 2; // X2\n        data[1][1] = 9; // Y2\n\n        double[] expectedResult = new double[2];\n        expectedResult[0] = Math.pow(Math.exp(1), -1); // intercept\n        expectedResult[1] = 1 / Math.log(4); // slope\n\n        double[] actualResult = Regression.getPowerRegression(data);\n\n        assertArrayEquals(expectedResult, actualResult, 0.0001);\n    }\n}",
        "\npackage org.jfree.data.statistics;\n\nimport static org.junit.Assert.*;\nimport org.junit.Test;\n\npublic class RegressionTest {\n    @Test\n    public void getPowerRegressionTest() {\n        double[][] data = new double[][] {{1, 2}, {3, 4}, {5, 6}};\n        double[] result = Regression.getPowerRegression(data);\n        assertEquals(0.8660254, result[0], 0.000001); // intercept\n        assertEquals(-0.7320508, result[1], 0.000001); // slope\n    }\n}\n"
    ]
}