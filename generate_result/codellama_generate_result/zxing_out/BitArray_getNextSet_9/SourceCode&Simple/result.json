{
    "project_name": "zxing",
    "file_name": "BitArray.java",
    "relative_path": "zxing/core/src/main/java/com/google/zxing/common/BitArray.java",
    "execute_path": "zxing",
    "package": "com.google.zxing.common",
    "docstring": "/**\n   * @param from first bit to check\n   * @return index of first bit that is set, starting from the given index, or size if none are set\n   *  at or beyond this given index\n   * @see #getNextUnset(int)\n   */",
    "source_code": "\npublic int getNextSet(int from) {\n  if (from >= size) {\n    return size;\n  }\n  int bitsOffset = from / 32;\n  int currentBits = bits[bitsOffset];\n  // mask off lesser bits first\n  currentBits &= -(1 << (from & 0x1F));\n  while (currentBits == 0) {\n    if (++bitsOffset == bits.length) {\n      return size;\n    }\n    currentBits = bits[bitsOffset];\n  }\n  int result = (bitsOffset * 32) + Integer.numberOfTrailingZeros(currentBits);\n  return Math.min(result, size);\n}\n",
    "class_name": "BitArray",
    "method_name": "getNextSet",
    "arguments": [
        "int from"
    ],
    "generate_test": [
        "@Test\npublic void getNextSetTest() {\n    // Arrange\n    int size = 32;\n    BitArray bitArray = new BitArray(size);\n    bitArray.setRange(0, size - 1);\n\n    // Act\n    int nextSetBit = bitArray.getNextSet(0);\n\n    // Assert\n    assertEquals(nextSetBit, size - 1);\n}",
        "import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        // Create a bit array with some set bits\n        int[] bits = new int[10];\n        Arrays.fill(bits, 2, 6, 1);\n        Arrays.fill(bits, 9, 10, 1);\n        BitArray bitArray = new BitArray(bits, 10);\n\n        // Test that the next set bit is returned correctly\n        assertEquals(bitArray.getNextSet(0), 2);\n        assertEquals(bitArray.getNextSet(4), 5);\n        assertEquals(bitArray.getNextSet(9), 10);\n    }\n}",
        "\n@Test\npublic void getNextSetTest() {\n  int from = 0;\n  BitArray bitArray = new BitArray(new int[] {1, 2}, 3);\n  assertEquals(1, bitArray.getNextSet(from));\n  \n  from = 1;\n  assertEquals(2, bitArray.getNextSet(from));\n  \n  from = 2;\n  assertEquals(3, bitArray.getNextSet(from));\n}",
        "@Test\npublic void getNextSetTest() {\n    // Initialize a BitArray with 10 bits set to 1\n    int[] bits = new int[3];\n    Arrays.fill(bits, Integer.MAX_VALUE);\n    BitArray bitArray = new BitArray(bits, 10);\n    \n    // Test that getNextSet returns the correct index for a given starting position\n    assertEquals(0, bitArray.getNextSet(0));\n    assertEquals(1, bitArray.getNextSet(1));\n    assertEquals(2, bitArray.getNextSet(2));\n    assertEquals(3, bitArray.getNextSet(3));\n    \n    // Test that getNextSet returns the correct index when the starting position is greater than the size of the array\n    assertEquals(10, bitArray.getNextSet(10));\n}",
        "package com.google.zxing.common;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        // Create a new BitArray with size 32\n        BitArray bitArray = new BitArray(32);\n\n        // Set the first bit to true\n        bitArray.set(0, true);\n\n        // Check that getNextSet returns 1 when from is 0\n        assertEquals(1, bitArray.getNextSet(0));\n\n        // Set the second bit to true\n        bitArray.set(1, true);\n\n        // Check that getNextSet returns 2 when from is 1\n        assertEquals(2, bitArray.getNextSet(1));\n\n        // Set the third bit to false\n        bitArray.set(2, false);\n\n        // Check that getNextSet returns 3 when from is 2\n        assertEquals(3, bitArray.getNextSet(2));\n\n        // Set the fourth bit to true\n        bitArray.set(3, true);\n\n        // Check that getNextSet returns 4 when from is 3\n        assertEquals(4, bitArray.getNextSet(3));\n\n        // Set the fifth bit to false\n        bitArray.set(4, false);\n\n        // Check that getNextSet returns 5 when from is 4\n        assertEquals(5, bitArray.getNextSet(4));\n    }\n}",
        "\nimport java.util.Random;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        Random random = new Random();\n        int size = 10;\n        int from = 5;\n        BitArray bitArray = new BitArray(size);\n\n        // Test when there are no set bits\n        assertEquals(-1, bitArray.getNextSet(from));\n\n        // Set a few random bits and test that getNextSet returns the correct value\n        for (int i = 0; i < size / 2; i++) {\n            int index = random.nextInt(size);\n            if (!bitArray.get(index)) {\n                bitArray.set(index);\n            }\n        }\n        assertEquals(from, bitArray.getNextSet(from));\n    }\n}",
        "package com.google.zxing.common;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        // Given\n        BitArray bitArray = new BitArray(new int[] {1, 0, 0, 0}, 4);\n        int expectedResult = 2;\n        \n        // When\n        int actualResult = bitArray.getNextSet(1);\n        \n        // Then\n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "\nBitArray bitArray = new BitArray(new int[] { 0b01010101 }, 8);\nint nextSetIndex = bitArray.getNextSet(3);\nassertEquals(4, nextSetIndex);\n",
        "package com.google.zxing.common;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        // Set up the test fixture\n        int[] bits = new int[4];\n        Arrays.fill(bits, 0);\n        BitArray bitArray = new BitArray(bits, 16);\n        \n        // Test that the next set bit is returned correctly\n        assertEquals(3, bitArray.getNextSet(2));\n    }\n}",
        "package com.google.zxing.common;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        // Create a new instance of BitArray with size 32\n        BitArray bitArray = new BitArray(32);\n\n        // Set the first 10 bits to true\n        for (int i = 0; i < 10; i++) {\n            bitArray.set(i);\n        }\n\n        // Assert that getNextSet() returns the correct value for all possible starting positions\n        assertEquals(10, bitArray.getNextSet(0));\n        assertEquals(10, bitArray.getNextSet(5));\n        assertEquals(10, bitArray.getNextSet(9));\n    }\n}"
    ]
}