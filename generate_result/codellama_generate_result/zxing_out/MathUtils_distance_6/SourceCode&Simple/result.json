{
    "project_name": "zxing",
    "file_name": "MathUtils.java",
    "relative_path": "zxing/core/src/main/java/com/google/zxing/common/detector/MathUtils.java",
    "execute_path": "zxing",
    "package": "com.google.zxing.common.detector",
    "docstring": "/**\n   * @param aX point A x coordinate\n   * @param aY point A y coordinate\n   * @param bX point B x coordinate\n   * @param bY point B y coordinate\n   * @return Euclidean distance between points A and B\n   */",
    "source_code": "\npublic static float distance(int aX, int aY, int bX, int bY) {\n  double xDiff = aX - bX;\n  double yDiff = aY - bY;\n  return (float) Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\n",
    "class_name": "MathUtils",
    "method_name": "distance",
    "arguments": [
        "int aX",
        "int aY",
        "int bX",
        "int bY"
    ],
    "generate_test": [
        "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        // Test case 1: Distance between two points on the same line\n        int aX = 0;\n        int aY = 0;\n        int bX = 5;\n        int bY = 0;\n        float expectedDistance = 5.0f;\n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY));\n        \n        // Test case 2: Distance between two points on different lines\n        aX = 0;\n        aY = 0;\n        bX = 5;\n        bY = 5;\n        expectedDistance = 7.0f;\n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY));\n        \n        // Test case 3: Distance between two points on the same line but with different coordinates\n        aX = 5;\n        aY = 0;\n        bX = 10;\n        bY = 20;\n        expectedDistance = 15.0f;\n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY));\n    }\n}",
        "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 10, aY = 20, bX = 30, bY = 40;\n        float expectedDistance = (float) Math.sqrt(Math.pow((aX - bX), 2) + Math.pow((aY - bY), 2));\n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY));\n    }\n}",
        "\npackage com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 10, aY = 20;\n        int bX = 5, bY = 10;\n        float expectedDistance = (float) Math.sqrt((aX - bX) * (aX - bX) + (aY - bY) * (aY - bY));\n\n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY), 0.01);\n    }\n}",
        "\npackage com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 0;\n        int aY = 0;\n        int bX = 10;\n        int bY = 5;\n        float expectedDistance = (float) Math.sqrt(170f);\n        \n        float actualDistance = MathUtils.distance(aX, aY, bX, bY);\n        \n        assertEquals(expectedDistance, actualDistance, 0.001);\n    }\n}",
        "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 10, aY = 20, bX = 30, bY = 40;\n        float expectedDistance = (float) Math.sqrt((aX - bX) * (aX - bX) + (aY - bY) * (aY - bY));\n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY), 0.001);\n    }\n}",
        "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        assertEquals(1, MathUtils.distance(0, 0, 0, 1), 0.0);\n        assertEquals(Math.sqrt(2), MathUtils.distance(0, 0, 1, 1), 0.0);\n        assertEquals(3, MathUtils.distance(0, 0, 0, -3), 0.0);\n    }\n}",
        "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        // Test case 1: Check that the distance is calculated correctly for two points in the same position\n        float aX = 0f;\n        float aY = 0f;\n        float bX = 0f;\n        float bY = 0f;\n        float expectedDistance = 0f;\n        \n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY), 0.01);\n        \n        // Test case 2: Check that the distance is calculated correctly for two points in different positions\n        aX = -3f;\n        aY = 4f;\n        bX = 5f;\n        bY = -12f;\n        expectedDistance = 13f;\n        \n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY), 0.01);\n    }\n}",
        "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        // Test with valid inputs\n        int aX = 10, aY = 20, bX = 30, bY = 40;\n        double expectedDistance = Math.sqrt(Math.pow(aX - bX, 2) + Math.pow(aY - bY, 2));\n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY), 0.01);\n\n        // Test with invalid inputs\n        assertThrows(IllegalArgumentException.class, () -> MathUtils.distance(-10, -20, -30, -40));\n    }\n}",
        "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 10, aY = 20;\n        int bX = 30, bY = 40;\n        double expectedDistance = 5.0 * 5.0 + 6.0 * 6.0;\n        \n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY), 1e-6);\n    }\n}",
        "package com.google.zxing.common.detector;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class MathUtilsTest {\n    @Test\n    public void distanceTest() {\n        int aX = 10, aY = 20;\n        int bX = 30, bY = 40;\n        \n        float expectedDistance = (float) Math.sqrt((aX - bX) * (aX - bX) + (aY - bY) * (aY - bY));\n        \n        assertEquals(expectedDistance, MathUtils.distance(aX, aY, bX, bY), 0.01);\n    }\n}"
    ]
}