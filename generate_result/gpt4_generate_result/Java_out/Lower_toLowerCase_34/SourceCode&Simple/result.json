{
    "project_name": "Java",
    "file_name": "Lower.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/strings/Lower.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.strings",
    "docstring": "/**\n     * Converts all of the characters in this {@code String} to lower case\n     *\n     * @param s the string to convert\n     * @return the {@code String}, converted to lowercase.\n     */",
    "source_code": "\npublic static String toLowerCase(String s) {\n    char[] values = s.toCharArray();\n    for (int i = 0; i < values.length; ++i) {\n        if (Character.isLetter(values[i]) && Character.isUpperCase(values[i])) {\n            values[i] = Character.toLowerCase(values[i]);\n        }\n    }\n    return new String(values);\n}\n",
    "class_name": "Lower",
    "method_name": "toLowerCase",
    "arguments": [
        "String s"
    ],
    "generate_test": [
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        // Test with a regular string containing uppercase letters\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"), \"The string should be converted to all lowercase\");\n\n        // Test with a string with all uppercase letters\n        assertEquals(\"world\", Lower.toLowerCase(\"WORLD\"), \"The string should be converted to all lowercase\");\n\n        // Test with a string that contains numbers and uppercase letters\n        assertEquals(\"java123\", Lower.toLowerCase(\"Java123\"), \"Numbers and case should remain unchanged, but letters should be lowercase\");\n\n        // Test with a string that has no uppercase letters\n        assertEquals(\"already lower\", Lower.toLowerCase(\"already lower\"), \"The string already in lowercase should remain unchanged\");\n\n        // Test with an empty string\n        assertEquals(\"\", Lower.toLowerCase(\"\"), \"An empty string should remain unchanged\");\n\n        // Test with a string with special characters and uppercase letters\n        assertEquals(\"test-case!\", Lower.toLowerCase(\"Test-Case!\"), \"Special characters and case should remain unchanged, but letters should be lowercase\");\n\n        // Test edge case with a single uppercase letter\n        assertEquals(\"a\", Lower.toLowerCase(\"A\"), \"A single uppercase character should be converted to lowercase\");\n\n        // Test edge case with a single lowercase letter\n        assertEquals(\"b\", Lower.toLowerCase(\"b\"), \"A single lowercase character should remain unchanged\");\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"HELLO\")); // Test all uppercase to all lowercase conversion\n        assertEquals(\"hello\", Lower.toLowerCase(\"hello\")); // Test already all lowercase string\n        assertEquals(\"hello world\", Lower.toLowerCase(\"Hello World\")); // Test mixed case string\n        assertEquals(\"\", Lower.toLowerCase(\"\")); // Test empty string\n        assertEquals(\"123\", Lower.toLowerCase(\"123\")); // Test string with numbers\n        assertEquals(\"hello123\", Lower.toLowerCase(\"HELLO123\")); // Test string with letters and numbers\n        assertEquals(\"hello world!\", Lower.toLowerCase(\"HELLO WORLD!\")); // Test string with punctuation\n        assertEquals(\"\u0441\u043f\u0430\u0441\u0438\u0431\u043e\", Lower.toLowerCase(\"\u0421\u041f\u0410\u0421\u0418\u0411\u041e\")); // Test non-English characters (Cyrillic in this case)\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"), \"Should return 'hello' for 'Hello'\");\n        assertEquals(\"hello world\", Lower.toLowerCase(\"HeLLo WorLD\"), \"Should return 'hello world' for 'HeLLo WorLD'\");\n        assertEquals(\"\", Lower.toLowerCase(\"\"), \"Should return an empty string for an empty string\");\n        assertEquals(\"123\", Lower.toLowerCase(\"123\"), \"Should return the same string for a string with no letters\");\n        assertEquals(\"hello123\", Lower.toLowerCase(\"Hello123\"), \"Should return 'hello123' for 'Hello123'\");\n        assertEquals(\"!!!\", Lower.toLowerCase(\"!!!\"), \"Should return the same string for a string with no letter characters\");\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class LowerTest {\n\n    @Test\n    public void toLowerCaseTest() {\n        // Normal case with mixed casing letters\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"));\n        assertEquals(\"hello world\", Lower.toLowerCase(\"Hello World\"));\n        \n        // All uppercase letters\n        assertEquals(\"test\", Lower.toLowerCase(\"TEST\"));\n        \n        // All lowercase letters (no change expected)\n        assertEquals(\"lowercase\", Lower.toLowerCase(\"lowercase\"));\n        \n        // Empty string\n        assertEquals(\"\", Lower.toLowerCase(\"\"));\n        \n        // String with numbers and special characters\n        assertEquals(\"123456 !@#$%^\", Lower.toLowerCase(\"123456 !@#$%^\"));\n        \n        // String with non-English characters\n        assertEquals(\"\u043f\u0440\u0438\u0432\u0435\u0442\", Lower.toLowerCase(\"\u041f\u0440\u0418\u0432\u0415\u0442\"));\n        \n        // Null input (we'll assume the method does not cater for null and add a test for unexpected usage)\n        // However, since the method does not handle null, it will throw a NullPointerException.\n        // We'll comment this out but in a real-world case, we might handle this with an exception or modify the method\n        // to handle null appropriately.\n        // assertThrows(NullPointerException.class, () -> Lower.toLowerCase(null));\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"HELLO\"), \"Should convert uppercase to lowercase\");\n        assertEquals(\"hello\", Lower.toLowerCase(\"hello\"), \"Should handle already lowercase\");\n        assertEquals(\"12345\", Lower.toLowerCase(\"12345\"), \"Should not affect numbers\");\n        assertEquals(\"hello world!\", Lower.toLowerCase(\"Hello World!\"), \"Should handle sentences\");\n        assertEquals(\"\", Lower.toLowerCase(\"\"), \"Should handle empty strings\");\n        assertEquals(\"a1b2c3\", Lower.toLowerCase(\"A1B2C3\"), \"Should handle alphanumeric strings\");\n        assertEquals(\" \", Lower.toLowerCase(\" \"), \"Should handle spaces\");\n        assertEquals(\"!@#$%^&*()_+[]\", Lower.toLowerCase(\"!@#$%^&*()_+[]\"), \"Should not affect non-letter characters\");\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        // Testing with a basic string\n        assertEquals(\"hello\", Lower.toLowerCase(\"HELLO\"), \"Should return all lower case\");\n\n        // Testing with a string that has mixed case\n        assertEquals(\"world\", Lower.toLowerCase(\"WorLD\"), \"Mixed case should be converted to all lower case\");\n\n        // Testing with a string that contains numbers and symbols\n        assertEquals(\"1234!@#$\", Lower.toLowerCase(\"1234!@#$\"), \"Numbers and symbols should remain unchanged\");\n\n        // Testing with an empty string\n        assertEquals(\"\", Lower.toLowerCase(\"\"), \"Empty string should return as is\");\n\n        // Testing with a string that is already in lower case\n        assertEquals(\"already lowercase\", Lower.toLowerCase(\"already lowercase\"), \"Lowercase input should return as is\");\n\n        // Testing with a string that has whitespace\n        assertEquals(\"with space\", Lower.toLowerCase(\"With SpACe\"), \"Whitespace should remain in place\");\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"HELLO\"), \"Should return lowercase string\");\n        assertEquals(\"world\", Lower.toLowerCase(\"World\"), \"Should handle strings with mixed case\");\n        assertEquals(\"another test\", Lower.toLowerCase(\"anOTher TeSt\"), \"Should handle strings with spaces\");\n        assertEquals(\"\", Lower.toLowerCase(\"\"), \"Should handle empty string\");\n        assertEquals(\"123\", Lower.toLowerCase(\"123\"), \"Should handle strings that don't contain letter characters\");\n        assertEquals(\"with symbols!?\", Lower.toLowerCase(\"With Symbols!?\"), \"Should handle strings with non-letter characters\");\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"));\n        assertEquals(\"hello world\", Lower.toLowerCase(\"Hello World\"));\n        assertEquals(\"\", Lower.toLowerCase(\"\"));\n        assertEquals(\"123\", Lower.toLowerCase(\"123\"));\n        assertEquals(\"!@#\", Lower.toLowerCase(\"!@#\"));\n        assertEquals(\"java programming\", Lower.toLowerCase(\"Java Programming\"));\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n\n    @Test\n    public void toLowerCaseTest() {\n        // Test conversion of all uppercase letters\n        assertEquals(\"hello\", Lower.toLowerCase(\"HELLO\"), \"All uppercase letters should be converted to lowercase.\");\n        \n        // Test conversion of mixed case letters\n        assertEquals(\"hello world\", Lower.toLowerCase(\"Hello World\"), \"Mixed case letters should be converted to all lowercase.\");\n        \n        // Test conversion of letters with leading and trailing spaces\n        assertEquals(\" hello world \", Lower.toLowerCase(\" Hello World \"), \"Conversion should not trim spaces.\");\n        \n        // Test with digits, should not be altered\n        assertEquals(\"1234\", Lower.toLowerCase(\"1234\"), \"Digits should remain unchanged.\");\n        \n        // Test empty string\n        assertEquals(\"\", Lower.toLowerCase(\"\"), \"Empty strings should be returned as is.\");\n        \n        // Test string with no letters\n        assertEquals(\"1234!@#$\", Lower.toLowerCase(\"1234!@#$\"), \"Strings with no letters should remain unchanged.\");\n        \n        // Test null input (null should be handled if the method is intended to be robust, otherwise this test is not needed)\n        // Uncomment the line below if toLowerCase is expected to handle null input.\n        //assertNull(Lower.toLowerCase(null), \"Passing null should return null or throw an appropriate exception.\");\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        // Test lowercase conversion with a mixed-case string\n        assertEquals(\"abc\", Lower.toLowerCase(\"ABC\"), \"Test failed for uppercase string\");\n\n        // Test lowercase conversion with a string that is already in lowercase\n        assertEquals(\"abc\", Lower.toLowerCase(\"abc\"), \"Test failed for lowercase string\");\n\n        // Test lowercase conversion with a numeric and punctuation string (which should remain unchanged)\n        assertEquals(\"123!@#\", Lower.toLowerCase(\"123!@#\"), \"Test failed for numeric and punctuation string\");\n\n        // Test lowercase conversion with an empty string\n        assertEquals(\"\", Lower.toLowerCase(\"\"), \"Test failed for empty string\");\n\n        // Test lowercase conversion with a string that contains a mix of uppercase, lowercase letters and numbers\n        assertEquals(\"test string 123\", Lower.toLowerCase(\"TesT StrinG 123\"), \"Test failed for mixed string\");\n    }\n}"
    ]
}