Source code: 


public static String toLowerCase(String s) {
    char[] values = s.toCharArray();
    for (int i = 0; i < values.length; ++i) {
        if (Character.isLetter(values[i]) && Character.isUpperCase(values[i])) {
            values[i] = Character.toLowerCase(values[i]);
        }
    }
    return new String(values);
}



No.1 generated result --------------------------

package com.thealgorithms.strings;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class LowerTest {
    @Test
    public void toLowerCaseTest() {
        // Test with a regular string containing uppercase letters
        assertEquals("hello", Lower.toLowerCase("Hello"), "The string should be converted to all lowercase");

        // Test with a string with all uppercase letters
        assertEquals("world", Lower.toLowerCase("WORLD"), "The string should be converted to all lowercase");

        // Test with a string that contains numbers and uppercase letters
        assertEquals("java123", Lower.toLowerCase("Java123"), "Numbers and case should remain unchanged, but letters should be lowercase");

        // Test with a string that has no uppercase letters
        assertEquals("already lower", Lower.toLowerCase("already lower"), "The string already in lowercase should remain unchanged");

        // Test with an empty string
        assertEquals("", Lower.toLowerCase(""), "An empty string should remain unchanged");

        // Test with a string with special characters and uppercase letters
        assertEquals("test-case!", Lower.toLowerCase("Test-Case!"), "Special characters and case should remain unchanged, but letters should be lowercase");

        // Test edge case with a single uppercase letter
        assertEquals("a", Lower.toLowerCase("A"), "A single uppercase character should be converted to lowercase");

        // Test edge case with a single lowercase letter
        assertEquals("b", Lower.toLowerCase("b"), "A single lowercase character should remain unchanged");
    }
}


No.2 generated result --------------------------

package com.thealgorithms.strings;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class LowerTest {
    @Test
    public void toLowerCaseTest() {
        assertEquals("hello", Lower.toLowerCase("HELLO")); // Test all uppercase to all lowercase conversion
        assertEquals("hello", Lower.toLowerCase("hello")); // Test already all lowercase string
        assertEquals("hello world", Lower.toLowerCase("Hello World")); // Test mixed case string
        assertEquals("", Lower.toLowerCase("")); // Test empty string
        assertEquals("123", Lower.toLowerCase("123")); // Test string with numbers
        assertEquals("hello123", Lower.toLowerCase("HELLO123")); // Test string with letters and numbers
        assertEquals("hello world!", Lower.toLowerCase("HELLO WORLD!")); // Test string with punctuation
        assertEquals("спасибо", Lower.toLowerCase("СПАСИБО")); // Test non-English characters (Cyrillic in this case)
    }
}


No.3 generated result --------------------------

package com.thealgorithms.strings;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class LowerTest {
    @Test
    public void toLowerCaseTest() {
        assertEquals("hello", Lower.toLowerCase("Hello"), "Should return 'hello' for 'Hello'");
        assertEquals("hello world", Lower.toLowerCase("HeLLo WorLD"), "Should return 'hello world' for 'HeLLo WorLD'");
        assertEquals("", Lower.toLowerCase(""), "Should return an empty string for an empty string");
        assertEquals("123", Lower.toLowerCase("123"), "Should return the same string for a string with no letters");
        assertEquals("hello123", Lower.toLowerCase("Hello123"), "Should return 'hello123' for 'Hello123'");
        assertEquals("!!!", Lower.toLowerCase("!!!"), "Should return the same string for a string with no letter characters");
    }
}


No.4 generated result --------------------------

package com.thealgorithms.strings;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class LowerTest {

    @Test
    public void toLowerCaseTest() {
        // Normal case with mixed casing letters
        assertEquals("hello", Lower.toLowerCase("Hello"));
        assertEquals("hello world", Lower.toLowerCase("Hello World"));
        
        // All uppercase letters
        assertEquals("test", Lower.toLowerCase("TEST"));
        
        // All lowercase letters (no change expected)
        assertEquals("lowercase", Lower.toLowerCase("lowercase"));
        
        // Empty string
        assertEquals("", Lower.toLowerCase(""));
        
        // String with numbers and special characters
        assertEquals("123456 !@#$%^", Lower.toLowerCase("123456 !@#$%^"));
        
        // String with non-English characters
        assertEquals("привет", Lower.toLowerCase("ПрИвЕт"));
        
        // Null input (we'll assume the method does not cater for null and add a test for unexpected usage)
        // However, since the method does not handle null, it will throw a NullPointerException.
        // We'll comment this out but in a real-world case, we might handle this with an exception or modify the method
        // to handle null appropriately.
        // assertThrows(NullPointerException.class, () -> Lower.toLowerCase(null));
    }
}


No.5 generated result --------------------------

package com.thealgorithms.strings;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class LowerTest {
    @Test
    public void toLowerCaseTest() {
        assertEquals("hello", Lower.toLowerCase("HELLO"), "Should convert uppercase to lowercase");
        assertEquals("hello", Lower.toLowerCase("hello"), "Should handle already lowercase");
        assertEquals("12345", Lower.toLowerCase("12345"), "Should not affect numbers");
        assertEquals("hello world!", Lower.toLowerCase("Hello World!"), "Should handle sentences");
        assertEquals("", Lower.toLowerCase(""), "Should handle empty strings");
        assertEquals("a1b2c3", Lower.toLowerCase("A1B2C3"), "Should handle alphanumeric strings");
        assertEquals(" ", Lower.toLowerCase(" "), "Should handle spaces");
        assertEquals("!@#$%^&*()_+[]", Lower.toLowerCase("!@#$%^&*()_+[]"), "Should not affect non-letter characters");
    }
}


No.6 generated result --------------------------

package com.thealgorithms.strings;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class LowerTest {
    @Test
    public void toLowerCaseTest() {
        // Testing with a basic string
        assertEquals("hello", Lower.toLowerCase("HELLO"), "Should return all lower case");

        // Testing with a string that has mixed case
        assertEquals("world", Lower.toLowerCase("WorLD"), "Mixed case should be converted to all lower case");

        // Testing with a string that contains numbers and symbols
        assertEquals("1234!@#$", Lower.toLowerCase("1234!@#$"), "Numbers and symbols should remain unchanged");

        // Testing with an empty string
        assertEquals("", Lower.toLowerCase(""), "Empty string should return as is");

        // Testing with a string that is already in lower case
        assertEquals("already lowercase", Lower.toLowerCase("already lowercase"), "Lowercase input should return as is");

        // Testing with a string that has whitespace
        assertEquals("with space", Lower.toLowerCase("With SpACe"), "Whitespace should remain in place");
    }
}


No.7 generated result --------------------------

package com.thealgorithms.strings;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class LowerTest {
    @Test
    public void toLowerCaseTest() {
        assertEquals("hello", Lower.toLowerCase("HELLO"), "Should return lowercase string");
        assertEquals("world", Lower.toLowerCase("World"), "Should handle strings with mixed case");
        assertEquals("another test", Lower.toLowerCase("anOTher TeSt"), "Should handle strings with spaces");
        assertEquals("", Lower.toLowerCase(""), "Should handle empty string");
        assertEquals("123", Lower.toLowerCase("123"), "Should handle strings that don't contain letter characters");
        assertEquals("with symbols!?", Lower.toLowerCase("With Symbols!?"), "Should handle strings with non-letter characters");
    }
}


No.8 generated result --------------------------

package com.thealgorithms.strings;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class LowerTest {

    @Test
    public void toLowerCaseTest() {
        assertEquals("hello", Lower.toLowerCase("Hello"));
        assertEquals("hello world", Lower.toLowerCase("Hello World"));
        assertEquals("", Lower.toLowerCase(""));
        assertEquals("123", Lower.toLowerCase("123"));
        assertEquals("!@#", Lower.toLowerCase("!@#"));
        assertEquals("java programming", Lower.toLowerCase("Java Programming"));
    }
}


No.9 generated result --------------------------

package com.thealgorithms.strings;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class LowerTest {

    @Test
    public void toLowerCaseTest() {
        // Test conversion of all uppercase letters
        assertEquals("hello", Lower.toLowerCase("HELLO"), "All uppercase letters should be converted to lowercase.");
        
        // Test conversion of mixed case letters
        assertEquals("hello world", Lower.toLowerCase("Hello World"), "Mixed case letters should be converted to all lowercase.");
        
        // Test conversion of letters with leading and trailing spaces
        assertEquals(" hello world ", Lower.toLowerCase(" Hello World "), "Conversion should not trim spaces.");
        
        // Test with digits, should not be altered
        assertEquals("1234", Lower.toLowerCase("1234"), "Digits should remain unchanged.");
        
        // Test empty string
        assertEquals("", Lower.toLowerCase(""), "Empty strings should be returned as is.");
        
        // Test string with no letters
        assertEquals("1234!@#$", Lower.toLowerCase("1234!@#$"), "Strings with no letters should remain unchanged.");
        
        // Test null input (null should be handled if the method is intended to be robust, otherwise this test is not needed)
        // Uncomment the line below if toLowerCase is expected to handle null input.
        //assertNull(Lower.toLowerCase(null), "Passing null should return null or throw an appropriate exception.");
    }
}


No.10 generated result --------------------------

package com.thealgorithms.strings;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class LowerTest {
    @Test
    public void toLowerCaseTest() {
        // Test lowercase conversion with a mixed-case string
        assertEquals("abc", Lower.toLowerCase("ABC"), "Test failed for uppercase string");

        // Test lowercase conversion with a string that is already in lowercase
        assertEquals("abc", Lower.toLowerCase("abc"), "Test failed for lowercase string");

        // Test lowercase conversion with a numeric and punctuation string (which should remain unchanged)
        assertEquals("123!@#", Lower.toLowerCase("123!@#"), "Test failed for numeric and punctuation string");

        // Test lowercase conversion with an empty string
        assertEquals("", Lower.toLowerCase(""), "Test failed for empty string");

        // Test lowercase conversion with a string that contains a mix of uppercase, lowercase letters and numbers
        assertEquals("test string 123", Lower.toLowerCase("TesT StrinG 123"), "Test failed for mixed string");
    }
}


