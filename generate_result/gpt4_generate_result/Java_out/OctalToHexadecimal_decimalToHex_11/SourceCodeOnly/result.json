{
    "project_name": "Java",
    "file_name": "OctalToHexadecimal.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/conversions/OctalToHexadecimal.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.conversions",
    "docstring": "/**\n     * This method converts a Decimal number to a Hexadecimal number\n     *\n     * @param d The Decimal Number\n     * @return The Hexadecimal number\n     */",
    "source_code": "\npublic static String decimalToHex(int d) {\n    String digits = \"0123456789ABCDEF\";\n    if (d <= 0) {\n        return \"0\";\n    }\n    String hex = \"\";\n    while (d > 0) {\n        int digit = d % 16;\n        hex = digits.charAt(digit) + hex;\n        d = d / 16;\n    }\n    return hex;\n}\n",
    "class_name": "OctalToHexadecimal",
    "method_name": "decimalToHex",
    "arguments": [
        "int d"
    ],
    "generate_test": [
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToHexadecimalTest {\n\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"0\", DecimalToHexadecimal.decimalToHex(0));\n        assertEquals(\"1\", DecimalToHexadecimal.decimalToHex(1));\n        assertEquals(\"A\", DecimalToHexadecimal.decimalToHex(10));\n        assertEquals(\"10\", DecimalToHexadecimal.decimalToHex(16));\n        assertEquals(\"7F\", DecimalToHexadecimal.decimalToHex(127));\n        assertEquals(\"FF\", DecimalToHexadecimal.decimalToHex(255));\n        assertEquals(\"100\", DecimalToHexadecimal.decimalToHex(256));\n        assertEquals(\"1E\", DecimalToHexadecimal.decimalToHex(30));\n        \n        // You can add more test cases to ensure the method works as expected\n    }\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"0\", DecimalToHexadecimal.decimalToHex(0), \"0 should convert to hex as '0'\");\n        assertEquals(\"1\", DecimalToHexadecimal.decimalToHex(1), \"1 should convert to hex as '1'\");\n        assertEquals(\"A\", DecimalToHexadecimal.decimalToHex(10), \"10 should convert to hex as 'A'\");\n        assertEquals(\"10\", DecimalToHexadecimal.decimalToHex(16), \"16 should convert to hex as '10'\");\n        assertEquals(\"FF\", DecimalToHexadecimal.decimalToHex(255), \"255 should convert to hex as 'FF'\");\n        assertEquals(\"7DE\", DecimalToHexadecimal.decimalToHex(2014), \"2014 should convert to hex as '7DE'\");\n        // Add more test cases as necessary\n    }\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0), \"The hex value of 0 should be 0\");\n        assertEquals(\"1\", OctalToHexadecimal.decimalToHex(1), \"The hex value of 1 should be 1\");\n        assertEquals(\"A\", OctalToHexadecimal.decimalToHex(10), \"The hex value of 10 should be A\");\n        assertEquals(\"64\", OctalToHexadecimal.decimalToHex(100), \"The hex value of 100 should be 64\");\n        assertEquals(\"7F\", OctalToHexadecimal.decimalToHex(127), \"The hex value of 127 should be 7F\");\n        assertEquals(\"FF\", OctalToHexadecimal.decimalToHex(255), \"The hex value of 255 should be FF\");\n        assertEquals(\"10\", OctalToHexadecimal.decimalToHex(16), \"The hex value of 16 should be 10\");\n        assertThrows(IllegalArgumentException.class, () -> OctalToHexadecimal.decimalToHex(-1), \"Should throw exception for negative input\");\n    }\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0), \"The hexadecimal of 0 should be 0\");\n        assertEquals(\"1\", OctalToHexadecimal.decimalToHex(1), \"The hexadecimal of 1 should be 1\");\n        assertEquals(\"A\", OctalToHexadecimal.decimalToHex(10), \"The hexadecimal of 10 should be A\");\n        assertEquals(\"F\", OctalToHexadecimal.decimalToHex(15), \"The hexadecimal of 15 should be F\");\n        assertEquals(\"10\", OctalToHexadecimal.decimalToHex(16), \"The hexadecimal of 16 should be 10\");\n        assertEquals(\"7F\", OctalToHexadecimal.decimalToHex(127), \"The hexadecimal of 127 should be 7F\");\n        assertEquals(\"FF\", OctalToHexadecimal.decimalToHex(255), \"The hexadecimal of 255 should be FF\");\n        assertEquals(\"2A\", OctalToHexadecimal.decimalToHex(42), \"The hexadecimal of 42 should be 2A\");\n        assertEquals(\"3E8\", OctalToHexadecimal.decimalToHex(1000), \"The hexadecimal of 1000 should be 3E8\");\n        assertThrows(IllegalArgumentException.class, () -> OctalToHexadecimal.decimalToHex(-1), \"Should throw an exception for negative input\");\n    }\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0), \"Conversion of 0 to hex should return '0'\");\n        assertEquals(\"1\", OctalToHexadecimal.decimalToHex(1), \"Conversion of 1 to hex should return '1'\");\n        assertEquals(\"A\", OctalToHexadecimal.decimalToHex(10), \"Conversion of 10 to hex should return 'A'\");\n        assertEquals(\"10\", OctalToHexadecimal.decimalToHex(16), \"Conversion of 16 to hex should return '10'\");\n        assertEquals(\"7F\", OctalToHexadecimal.decimalToHex(127), \"Conversion of 127 to hex should return '7F'\");\n        assertEquals(\"FF\", OctalToHexadecimal.decimalToHex(255), \"Conversion of 255 to hex should return 'FF'\");\n        assertEquals(\"1E\", OctalToHexadecimal.decimalToHex(30), \"Conversion of 30 to hex should return '1E'\");\n        assertEquals(\"2A\", OctalToHexadecimal.decimalToHex(42), \"Conversion of 42 to hex should return '2A'\");\n    }\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n        assertEquals(\"1\", OctalToHexadecimal.decimalToHex(1));\n        assertEquals(\"A\", OctalToHexadecimal.decimalToHex(10));\n        assertEquals(\"10\", OctalToHexadecimal.decimalToHex(16));\n        assertEquals(\"1F4\", OctalToHexadecimal.decimalToHex(500));\n        assertEquals(\"7A\", OctalToHexadecimal.decimalToHex(122));\n        assertEquals(\"FFFF\", OctalToHexadecimal.decimalToHex(65535));\n        assertEquals(\"100\", OctalToHexadecimal.decimalToHex(256));\n    }\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"0\", Conversions.decimalToHex(0));\n        assertEquals(\"1\", Conversions.decimalToHex(1));\n        assertEquals(\"A\", Conversions.decimalToHex(10));\n        assertEquals(\"10\", Conversions.decimalToHex(16));\n        assertEquals(\"FF\", Conversions.decimalToHex(255));\n        assertEquals(\"7DE\", Conversions.decimalToHex(2014));\n        assertEquals(\"1E240\", Conversions.decimalToHex(123456));\n    }\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DecimalToHexadecimalTest {\n    \n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"0\", DecimalToHexadecimal.decimalToHex(0));\n        assertEquals(\"7\", DecimalToHexadecimal.decimalToHex(7));\n        assertEquals(\"A\", DecimalToHexadecimal.decimalToHex(10));\n        assertEquals(\"F\", DecimalToHexadecimal.decimalToHex(15));\n        assertEquals(\"10\", DecimalToHexadecimal.decimalToHex(16));\n        assertEquals(\"1A\", DecimalToHexadecimal.decimalToHex(26));\n        assertEquals(\"64\", DecimalToHexadecimal.decimalToHex(100));\n        assertEquals(\"7E4\", DecimalToHexadecimal.decimalToHex(2020));\n        assertEquals(\"7D0\", DecimalToHexadecimal.decimalToHex(2000));\n    }\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class OctalToHexadecimalTest {\n\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"0\", Conversions.decimalToHex(0));\n        assertEquals(\"1\", Conversions.decimalToHex(1));\n        assertEquals(\"A\", Conversions.decimalToHex(10));\n        assertEquals(\"F\", Conversions.decimalToHex(15));\n        assertEquals(\"10\", Conversions.decimalToHex(16));\n        assertEquals(\"7F\", Conversions.decimalToHex(127));\n        assertEquals(\"80\", Conversions.decimalToHex(128));\n        assertEquals(\"FF\", Conversions.decimalToHex(255));\n        assertEquals(\"100\", Conversions.decimalToHex(256));\n        assertEquals(\"1E240\", Conversions.decimalToHex(123456));\n    }\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        assertEquals(\"0\", ConversionUtils.decimalToHex(0));\n        assertEquals(\"1\", ConversionUtils.decimalToHex(1));\n        assertEquals(\"A\", ConversionUtils.decimalToHex(10));\n        assertEquals(\"F\", ConversionUtils.decimalToHex(15));\n        assertEquals(\"10\", ConversionUtils.decimalToHex(16));\n        assertEquals(\"7F\", ConversionUtils.decimalToHex(127));\n        assertEquals(\"FF\", ConversionUtils.decimalToHex(255));\n        assertEquals(\"100\", ConversionUtils.decimalToHex(256));\n        assertThrows(IllegalArgumentException.class, () -> ConversionUtils.decimalToHex(-1));\n    }\n}"
    ]
}