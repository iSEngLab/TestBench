Source code: 


public static String decimalToHex(int d) {
    String digits = "0123456789ABCDEF";
    if (d <= 0) {
        return "0";
    }
    String hex = "";
    while (d > 0) {
        int digit = d % 16;
        hex = digits.charAt(digit) + hex;
        d = d / 16;
    }
    return hex;
}



No.1 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToHexadecimalTest {

    @Test
    public void decimalToHexTest() {
        assertEquals("0", DecimalToHexadecimal.decimalToHex(0));
        assertEquals("1", DecimalToHexadecimal.decimalToHex(1));
        assertEquals("A", DecimalToHexadecimal.decimalToHex(10));
        assertEquals("10", DecimalToHexadecimal.decimalToHex(16));
        assertEquals("7F", DecimalToHexadecimal.decimalToHex(127));
        assertEquals("FF", DecimalToHexadecimal.decimalToHex(255));
        assertEquals("100", DecimalToHexadecimal.decimalToHex(256));
        assertEquals("1E", DecimalToHexadecimal.decimalToHex(30));
        
        // You can add more test cases to ensure the method works as expected
    }
}


No.2 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToHexadecimalTest {
    @Test
    public void decimalToHexTest() {
        assertEquals("0", DecimalToHexadecimal.decimalToHex(0), "0 should convert to hex as '0'");
        assertEquals("1", DecimalToHexadecimal.decimalToHex(1), "1 should convert to hex as '1'");
        assertEquals("A", DecimalToHexadecimal.decimalToHex(10), "10 should convert to hex as 'A'");
        assertEquals("10", DecimalToHexadecimal.decimalToHex(16), "16 should convert to hex as '10'");
        assertEquals("FF", DecimalToHexadecimal.decimalToHex(255), "255 should convert to hex as 'FF'");
        assertEquals("7DE", DecimalToHexadecimal.decimalToHex(2014), "2014 should convert to hex as '7DE'");
        // Add more test cases as necessary
    }
}


No.3 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class OctalToHexadecimalTest {

    @Test
    public void decimalToHexTest() {
        assertEquals("0", OctalToHexadecimal.decimalToHex(0), "The hex value of 0 should be 0");
        assertEquals("1", OctalToHexadecimal.decimalToHex(1), "The hex value of 1 should be 1");
        assertEquals("A", OctalToHexadecimal.decimalToHex(10), "The hex value of 10 should be A");
        assertEquals("64", OctalToHexadecimal.decimalToHex(100), "The hex value of 100 should be 64");
        assertEquals("7F", OctalToHexadecimal.decimalToHex(127), "The hex value of 127 should be 7F");
        assertEquals("FF", OctalToHexadecimal.decimalToHex(255), "The hex value of 255 should be FF");
        assertEquals("10", OctalToHexadecimal.decimalToHex(16), "The hex value of 16 should be 10");
        assertThrows(IllegalArgumentException.class, () -> OctalToHexadecimal.decimalToHex(-1), "Should throw exception for negative input");
    }
}


No.4 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class OctalToHexadecimalTest {
    @Test
    public void decimalToHexTest() {
        assertEquals("0", OctalToHexadecimal.decimalToHex(0), "The hexadecimal of 0 should be 0");
        assertEquals("1", OctalToHexadecimal.decimalToHex(1), "The hexadecimal of 1 should be 1");
        assertEquals("A", OctalToHexadecimal.decimalToHex(10), "The hexadecimal of 10 should be A");
        assertEquals("F", OctalToHexadecimal.decimalToHex(15), "The hexadecimal of 15 should be F");
        assertEquals("10", OctalToHexadecimal.decimalToHex(16), "The hexadecimal of 16 should be 10");
        assertEquals("7F", OctalToHexadecimal.decimalToHex(127), "The hexadecimal of 127 should be 7F");
        assertEquals("FF", OctalToHexadecimal.decimalToHex(255), "The hexadecimal of 255 should be FF");
        assertEquals("2A", OctalToHexadecimal.decimalToHex(42), "The hexadecimal of 42 should be 2A");
        assertEquals("3E8", OctalToHexadecimal.decimalToHex(1000), "The hexadecimal of 1000 should be 3E8");
        assertThrows(IllegalArgumentException.class, () -> OctalToHexadecimal.decimalToHex(-1), "Should throw an exception for negative input");
    }
}


No.5 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class OctalToHexadecimalTest {

    @Test
    public void decimalToHexTest() {
        assertEquals("0", OctalToHexadecimal.decimalToHex(0), "Conversion of 0 to hex should return '0'");
        assertEquals("1", OctalToHexadecimal.decimalToHex(1), "Conversion of 1 to hex should return '1'");
        assertEquals("A", OctalToHexadecimal.decimalToHex(10), "Conversion of 10 to hex should return 'A'");
        assertEquals("10", OctalToHexadecimal.decimalToHex(16), "Conversion of 16 to hex should return '10'");
        assertEquals("7F", OctalToHexadecimal.decimalToHex(127), "Conversion of 127 to hex should return '7F'");
        assertEquals("FF", OctalToHexadecimal.decimalToHex(255), "Conversion of 255 to hex should return 'FF'");
        assertEquals("1E", OctalToHexadecimal.decimalToHex(30), "Conversion of 30 to hex should return '1E'");
        assertEquals("2A", OctalToHexadecimal.decimalToHex(42), "Conversion of 42 to hex should return '2A'");
    }
}


No.6 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class OctalToHexadecimalTest {

    @Test
    public void decimalToHexTest() {
        assertEquals("0", OctalToHexadecimal.decimalToHex(0));
        assertEquals("1", OctalToHexadecimal.decimalToHex(1));
        assertEquals("A", OctalToHexadecimal.decimalToHex(10));
        assertEquals("10", OctalToHexadecimal.decimalToHex(16));
        assertEquals("1F4", OctalToHexadecimal.decimalToHex(500));
        assertEquals("7A", OctalToHexadecimal.decimalToHex(122));
        assertEquals("FFFF", OctalToHexadecimal.decimalToHex(65535));
        assertEquals("100", OctalToHexadecimal.decimalToHex(256));
    }
}


No.7 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class OctalToHexadecimalTest {

    @Test
    public void decimalToHexTest() {
        assertEquals("0", Conversions.decimalToHex(0));
        assertEquals("1", Conversions.decimalToHex(1));
        assertEquals("A", Conversions.decimalToHex(10));
        assertEquals("10", Conversions.decimalToHex(16));
        assertEquals("FF", Conversions.decimalToHex(255));
        assertEquals("7DE", Conversions.decimalToHex(2014));
        assertEquals("1E240", Conversions.decimalToHex(123456));
    }
}


No.8 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class DecimalToHexadecimalTest {
    
    @Test
    public void decimalToHexTest() {
        assertEquals("0", DecimalToHexadecimal.decimalToHex(0));
        assertEquals("7", DecimalToHexadecimal.decimalToHex(7));
        assertEquals("A", DecimalToHexadecimal.decimalToHex(10));
        assertEquals("F", DecimalToHexadecimal.decimalToHex(15));
        assertEquals("10", DecimalToHexadecimal.decimalToHex(16));
        assertEquals("1A", DecimalToHexadecimal.decimalToHex(26));
        assertEquals("64", DecimalToHexadecimal.decimalToHex(100));
        assertEquals("7E4", DecimalToHexadecimal.decimalToHex(2020));
        assertEquals("7D0", DecimalToHexadecimal.decimalToHex(2000));
    }
}


No.9 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class OctalToHexadecimalTest {

    @Test
    public void decimalToHexTest() {
        assertEquals("0", Conversions.decimalToHex(0));
        assertEquals("1", Conversions.decimalToHex(1));
        assertEquals("A", Conversions.decimalToHex(10));
        assertEquals("F", Conversions.decimalToHex(15));
        assertEquals("10", Conversions.decimalToHex(16));
        assertEquals("7F", Conversions.decimalToHex(127));
        assertEquals("80", Conversions.decimalToHex(128));
        assertEquals("FF", Conversions.decimalToHex(255));
        assertEquals("100", Conversions.decimalToHex(256));
        assertEquals("1E240", Conversions.decimalToHex(123456));
    }
}


No.10 generated result --------------------------

package com.thealgorithms.conversions;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class OctalToHexadecimalTest {
    @Test
    public void decimalToHexTest() {
        assertEquals("0", ConversionUtils.decimalToHex(0));
        assertEquals("1", ConversionUtils.decimalToHex(1));
        assertEquals("A", ConversionUtils.decimalToHex(10));
        assertEquals("F", ConversionUtils.decimalToHex(15));
        assertEquals("10", ConversionUtils.decimalToHex(16));
        assertEquals("7F", ConversionUtils.decimalToHex(127));
        assertEquals("FF", ConversionUtils.decimalToHex(255));
        assertEquals("100", ConversionUtils.decimalToHex(256));
        assertThrows(IllegalArgumentException.class, () -> ConversionUtils.decimalToHex(-1));
    }
}


